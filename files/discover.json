[{"repo_dir": "/payload/repos/common", "files": [], "actors": [], "libraries": [], "apis": [], "models": [], "workflows": [], "topics": [{"class_name": "SystemInfoTopic", "messages": ["IPUConfig", "DNFPluginTask", "Interface", "MultipathConfFacts", "AuthselectDecision", "SpamassassinFacts", "MountEntry", "KernelCmdline", "TcpWrappersFacts", "VsftpdConfig", "MultipathConfig", "SystemdMountEntry", "RHUIInfo", "XFSPresence", "InstalledRedHatSignedRPM", "PersistentNetNamesFacts", "InstalledTargetKernelVersion", "SendmailMigrationDecision", "OpenSshConfig", "FstabEntry", "PamService", "LvdisplayEntry", "SelinuxPermissiveDecision", "PersistentNetNamesFactsInitramfs", "PCIAddress", "SELinuxModules", "QuaggaToFrrFacts", "SapHanaInstanceInfo", "OSRelease", "InitrdIncludes", "RestrictedPCIDevices", "SelinuxRelabelDecision", "UdevAdmInfoData", "PamConfiguration", "StorageInfo", "MultipathConfigOption", "PCIDevice", "RenamedInterface", "SapHanaManifestEntry", "PartitionEntry", "OpenSshPermitRootLogin", "FirewalldFacts", "UsedRepository", "SapHanaInfo", "PCIDevices", "InstalledUnsignedRPM", "BrlttyMigrationDecision", "SSSDDomainConfig", "InstalledRPM", "SELinuxModule", "NetworkManagerConfig", "RenamedInterfaces", "Version", "RPM", "PvsEntry", "SELinuxCustom", "VgsEntry", "CurrentKernel", "KernelCmdlineArg", "VsftpdFacts", "RestrictedPCIDevice", "UsedRepositories", "SSSDConfig", "LsblkEntry", "DaemonList", "EnvVar", "NtpMigrationDecision"], "name": "system_info"}], "tags": [], "tools": []}, {"repo_dir": "/payload/repos/system_upgrade/el7toel8", "files": [{"path": "files"}], "actors": [{"files": [], "tests": [], "description": "\n    Scans the current system for subscription manager information\n\n    Retrieves information about enabled and available repositories, attached SKUs, product certificates and release\n    from the current system without modfying it.\n    ", "apis": [], "class_name": "ScanSubscriptionManagerInfo", "path": "actors/scansubscriptionmanagerinfo", "tools": [], "dialogs": [], "name": "scan_subscription_manager_info", "produces": ["RHSMInfo"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Remove old PAM modules that are no longer available in RHEL-8 from\n    PAM configuration to avoid system lock out.\n    ", "apis": [], "class_name": "RemoveOldPAMModulesApply", "path": "actors/removeoldpammodulesapply", "tools": [], "dialogs": [], "name": "removed_pam_modules_apply", "produces": [], "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "libraries": ["libraries"], "consumes": ["RemovedPAMModules"]}, {"files": [], "tests": ["tests"], "description": "\n    Disable systemd-udevd persistent network naming on machine with single eth0 NIC\n    ", "apis": [], "class_name": "PersistentNetNamesDisable", "path": "actors/persistentnetnamesdisable", "tools": [], "dialogs": [], "name": "persistentnetnamesdisable", "produces": ["KernelCmdlineArg", "Report"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["PersistentNetNamesFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check for ipa-server and inhibit upgrade\n    ", "apis": [], "class_name": "CheckIPAServer", "path": "actors/checkipaserver", "tools": [], "dialogs": [], "name": "check_ipa_server", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["IpaInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Scan the custom /etc/leapp/files/leapp_upgrade_repositories.repo repo file.\n\n    This is the official path where to put the YUM/DNF repository file with\n    custom repositories for the target system. These repositories will be used\n    automatically for the in-place upgrade despite the enable/disable settings.\n\n    Additionally the CustomTargetRepositoryFile message is produced if the file\n    exists to let the other actors know they should handle the file as well.\n\n    If the file doesn't exist, nothing happens.\n    ", "apis": [], "class_name": "ScanCustomRepofile", "path": "actors/scancustomrepofile", "tools": [], "dialogs": [], "name": "scan_custom_repofile", "produces": ["CustomTargetRepositoryFile", "CustomTargetRepository"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Check SSSD configuration for changes in RHEL8 and report them in model.\n\n    These changes are:\n    - id_provider=local is no longer supported and will be ignored\n    - ldap_groups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_initgroups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_sudo_include_regexp changed default from true to false\n    ", "apis": [], "class_name": "SSSDFacts", "path": "actors/sssdfacts", "tools": [], "dialogs": [], "name": "sssd_facts", "produces": ["SSSDConfig"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Check if acpid is installed. If yes, write information about non-compatible changes.\n    ", "apis": [], "class_name": "CheckAcpid", "path": "actors/checkacpid", "tools": [], "dialogs": [], "name": "checkacpid", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Check for incompatible changes in memcached configuration.\n\n    Warn that memcached in RHEL8 no longer listens on the UDP port by default\n    and the default service configuration binds memcached to the loopback\n    interface.\n    ", "apis": [], "class_name": "CheckMemcached", "path": "actors/checkmemcached", "tools": [], "dialogs": [], "name": "check_memcached", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Edit frr configuration on the new system.\n\n    Take gathered info about quagga from RHEL 7 and apply these to frr in RHEL 8.\n    ", "apis": [], "class_name": "QuaggaToFrr", "path": "actors/quaggatofrr", "tools": [], "dialogs": [], "name": "quagga_to_frr", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["QuaggaToFrrFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if the current RHEL minor version is supported. If not, inhibit the upgrade process.\n\n    This check can be skipped by using the LEAPP_DEVEL_SKIP_CHECK_OS_RELEASE environment variable.\n    ", "apis": [], "class_name": "CheckOSRelease", "path": "actors/checkosrelease", "tools": [], "dialogs": [], "name": "check_os_release", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": [], "description": "\n    Update NetworkManager connections.\n\n    When using dhcp=dhclient on Red Hat Enterprise Linux 7, a non-hexadecimal client-id (a string)\n    is sent on the wire as is (i.e. the first character is the 'type' as per RFC 2132 section\n    9.14). On Red Hat Enterprise Linux 8, a zero byte is prepended to string-only client-ids. To\n    preserve behavior on upgrade, we convert client-ids to the hexadecimal form.\n    ", "apis": [], "class_name": "NetworkManagerUpdateConnections", "path": "actors/networkmanagerupdateconnections", "tools": ["tools"], "dialogs": [], "name": "network_manager_update_connections", "produces": [], "tags": ["FirstBootPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["NetworkManagerConfig"]}, {"files": [], "tests": ["tests"], "description": "\n    Generate udev persistent network naming configuration\n\n    This actor generates systemd-udevd link files for each physical ethernet interface present on RHEL-7\n    in case we notice that interace name differs on RHEL-8. Link file configuration will assign RHEL-7 version of\n    a name. Actors produces list of interfaces which changed name between RHEL-7 and RHEL-8.\n    ", "apis": [], "class_name": "PersistentNetNamesConfig", "path": "actors/persistentnetnamesconfig", "tools": [], "dialogs": [], "name": "persistentnetnamesconfig", "produces": ["RenamedInterfaces", "InitrdIncludes"], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["PersistentNetNamesFactsInitramfs", "PersistentNetNamesFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if at least 100Mib of available space on /boot. If not, inhibit the upgrade process.\n\n    Rationale for the requirement of 100MiB:\n    - Before reboot into initramfs, the CopyInitramfsToBoot actor copies kernel and initramfs to\n      /boot, together worth of 66MiB.\n    - After booting into initramfs, the RemoveBootFiles actor removes the copied kernel and\n      initramfs from /boot.\n    - The DnfShellRpmUpgrade installs a new kernel-core package which puts additional 54MiB of data\n      to /boot.\n    - Even though the available space needed at the time of writing this actor is 66MiB, the\n      additional 100-66=34MiB is a leeway for potential growth of the kernel or initramfs in size.\n    ", "apis": [], "class_name": "CheckBootAvailSpace", "path": "actors/checkbootavailspace", "tools": [], "dialogs": [], "name": "check_boot_avail_space", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Get network interface information for physical ethernet interfaces of the original system.\n\n    Gather information like PCI topology, MAC address and interface name on the\n    original system. Those data are provided through the PersistentNetNamesFacts\n    model.\n\n    See the persistentnetnamesinitramfs actor that is very same but processed\n    during early phases in initrams to gather the same data but using already\n    new kernel of the target system to be able to reflect changes affected\n    by the new kernel (see the PersistentNetNamesConfig actor).\n    ", "apis": [], "class_name": "PersistentNetNames", "path": "actors/persistentnetnames", "tools": [], "dialogs": [], "name": "persistentnetnames", "produces": ["PersistentNetNamesFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    This actor scans all mounted mountpoints for XFS information\n\n    The actor will check each mountpoint reported in the StorageInfo message, if the mountpoint is a partition with XFS\n    using ftype = 0. The actor will produce a message with the findings.\n    It will contain a list of all XFS mountpoints with ftype = 0 so that those mountpoints can be handled appropriately\n    for the overlayfs that is going to be created.\n    ", "apis": [], "class_name": "XFSInfoScanner", "path": "actors/xfsinfoscanner", "tools": [], "dialogs": [], "name": "xfs_info_scanner", "produces": ["XFSPresence"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["StorageInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Inhibit IPU (in-place upgrade) when multiple devel kernels are installed.\n\n    Because of an issue in DNF, the transaction can't be validated if there's\n    more than one package named kernel-devel. Therefore, in this case, we\n    inhibit the upgrade with a clearer remediation.\n    ", "apis": [], "class_name": "CheckInstalledDevelKernels", "path": "actors/kernel/checkinstalleddevelkernels", "tools": [], "dialogs": [], "name": "check_installed_devel_kernels", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Inhibit IPU (in-place upgrade) when installed kernels conflict with a safe upgrade.\n\n    a) Inhibit when multiple kernels are installed on a s390x machine\n\n    When on s390x architecture, we are not able to upgrade correctly\n    when any kernel is expected to be uninstalled during the rpm\n    upgrade transaction now. We discovered recently that removal of\n    old kernels is not handled correctly during the IPU. In case the\n    maximum number of kernels are installed, the oldest one is\n    automatically uninstalled during the rpm upgrade transaction.\n\n    To prevent any related troubles during the IPU, inhibit the IPU\n    on s390x unless just one kernel is installed, until the issue will\n    be fixed correctly.\n\n    b) Inhibit when machine is not booted into latest installed kernel\n\n    It is strictly required that during the upgrade the machine is\n    booted into the latest installed kernel. Upgrading with older\n    kernels could cause unexpected issues.\n    ", "apis": [], "class_name": "CheckInstalledKernels", "path": "actors/kernel/checkinstalledkernels", "tools": [], "dialogs": [], "name": "check_installed_kernels", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": ["files"], "tests": ["tests"], "description": "\n    Actor checks if any loaded RHEL7 kernel driver is missing in the RHEL8.\n    If yes, the upgrade process will be inhibited.\n\n    Inhibition is done because missing kernel driver on the RHEL8 system may\n    mean that the hardware using such driver would not work on the RHEL8.\n\n    Note:\n     - List of kernel drivers missing on the RHEL8 system is located in the\n        files/removed_drivers.txt file.\n    ", "apis": [], "class_name": "CheckKernelDrivers", "path": "actors/kernel/checkkerneldrivers", "tools": [], "dialogs": [], "name": "check_kernel_drivers", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["PCIDevices"]}, {"files": [], "tests": ["tests"], "description": "\n    Inhibit IPU (in-place upgrade) when multiple debug kernels are installed.\n\n    Because of an issue in DNF, the transaction can't be validated if there's\n    more than one package named kernel-debug. Therefore, in this case, we\n    inhibit the upgrade with a clearer remediation.\n    ", "apis": [], "class_name": "CheckInstalledDebugKernels", "path": "actors/kernel/checkinstalleddebugkernels", "tools": [], "dialogs": [], "name": "check_installed_debug_kernels", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Migrate sendmail configuration files.\n    ", "apis": [], "class_name": "MigrateSendmail", "path": "actors/migratesendmail", "tools": [], "dialogs": [], "name": "migrate_sendmail", "produces": ["Report"], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["SendmailMigrationDecision"]}, {"files": [], "tests": ["tests"], "description": "\n    Check all generated results messages and notify user about them.\n\n    A report file containing all messages will be generated, together with log messages displayed\n    to the user.\n    ", "apis": [], "class_name": "VerifyCheckResults", "path": "actors/verifycheckresults", "tools": [], "dialogs": [], "name": "verify_check_results", "produces": [], "tags": ["ReportPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["Report"]}, {"files": [], "tests": ["tests"], "description": "\n    Schedule SELinux relabelling.\n\n    If SELinux status was set to permissive or enforcing, a relabelling is necessary.\n    ", "apis": [], "class_name": "ScheduleSeLinuxRelabeling", "path": "actors/scheduleselinuxrelabeling", "tools": [], "dialogs": [], "name": "schedule_se_linux_relabelling", "produces": ["Report"], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["SelinuxRelabelDecision"]}, {"files": [], "tests": ["tests"], "description": "\n    Convert the zipl boot loader configuration to the the boot loader specification on s390x systems.\n    ", "apis": [], "class_name": "ZiplConvertToBLSCFG", "path": "actors/ziplconverttoblscfg", "tools": [], "dialogs": [], "name": "zipl_convert_to_blscfg", "produces": [], "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "libraries": [], "consumes": ["TargetUserSpaceInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Checking for babeld on RHEL-7.\n\n    This actor is supposed to report that babeld was used on RHEL-7\n    and it is no longer available in RHEL-8.\n    ", "apis": [], "class_name": "QuaggaReport", "path": "actors/quaggareport", "tools": [], "dialogs": [], "name": "quagga_report", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["QuaggaToFrrFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Active quagga daemons check.\n\n    Checking for daemons that are currently running in the system.\n    These should be enabled in /etc/frr/daemons later in the process.\n    The tools will check for config files later on since these should stay in the system.\n    ", "apis": [], "class_name": "QuaggaDaemons", "path": "actors/quaggadaemons", "tools": [], "dialogs": [], "name": "quagga_daemons", "produces": ["QuaggaToFrrFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    IPU workflow config actor\n    ", "apis": [], "class_name": "IPUWorkflowConfig", "path": "actors/ipuworkflowconfig", "tools": [], "dialogs": [], "name": "ipu_workflow_config", "produces": ["IPUConfig", "Report"], "tags": ["IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Generate list of repository IDs that should be ignored by Leapp during upgrade process\n    ", "apis": [], "class_name": "RepositoriesBlacklist", "path": "actors/repositoriesblacklist", "tools": [], "dialogs": [], "name": "repositories_blacklist", "produces": ["RepositoriesBlacklisted", "Report"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": ["RepositoriesFacts", "RepositoriesMap"]}, {"files": [], "tests": [], "description": "\n    Produces data exported by the \"udevadm info\" command.\n    ", "apis": [], "class_name": "UdevAdmInfo", "path": "actors/udev/udevadminfo", "tools": [], "dialogs": [], "name": "udevadm_info", "produces": ["UdevAdmInfoData"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": [], "consumes": []}, {"files": [], "tests": [], "description": "\n    Remove el7 packages left on the system after the upgrade to RHEL 8.\n\n    Removal of el7 packages is necessary in order to keep the machine in supported state.\n    Actor generates report telling users what packages have been removed.\n    ", "apis": [], "class_name": "RemoveLeftoverPackages", "path": "actors/removeleftoverpackages", "tools": [], "dialogs": [], "name": "remove_leftover_packages", "produces": ["Report", "RemovedPackages"], "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag", "ExperimentalTag"], "libraries": [], "consumes": ["LeftoverPackages"]}, {"files": [], "tests": ["tests"], "description": "\n    Reports changes in spamassassin between RHEL-7 and RHEL-8\n\n    Reports backward-incompatible changes that have been made in spamassassin\n    between RHEL-7 and RHEL-8 (spamc no longer accepts an argument with the --ssl\n    option; spamd no longer accepts the --ssl-version; SSLv3 is no longer supported;\n    the type of spamassassin.service has been changed from \"forking\" to \"simple\";\n    sa-update no longer supports SHA1 validation of rule files).\n\n    The migration of the configuration files will be mostly handled by the\n    SpamassassinConfigUpdate actor, however the admin still needs to know about\n    the changes so that they can do any necessary migration in places that we cannot\n    reach (e.g. scripts).\n    ", "apis": [], "class_name": "SpamassassinConfigCheck", "path": "actors/spamassassinconfigcheck", "tools": [], "dialogs": [], "name": "spamassassin_config_check", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["SpamassassinFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if PowerTOP is installed. If yes, write information about non-compatible changes.\n    ", "apis": [], "class_name": "PowerTop", "path": "actors/powertop", "tools": [], "dialogs": [], "name": "powertop", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": [], "description": "\n    Check for modules that are not available in RHEL 8 anymore\n\n    At this moment, we check only for pam_tally2. Few more modules\n    are alredy covered in RemoveOldPAMModulesApply actor\n    ", "apis": [], "class_name": "CheckRemovedPamModules", "path": "actors/checkremovedpammodules", "tools": [], "dialogs": [], "name": "removed_pam_modules", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["PamConfiguration"]}, {"files": [], "tests": [], "description": "\n    Checks enviroment variables and produces a warning report if the upgrade is unsupported.\n\n    Upgrade is unsupported if any LEAPP_DEVEL_* variable is used or an experimental actor is enabled.\n    This can be overridden by setting the variable LEAPP_UNSUPPORTED (at user's own risk).\n    ", "apis": [], "class_name": "UnsupportedUpgradeCheck", "path": "actors/unsupportedupgradecheck", "tools": [], "dialogs": [], "name": "unsupported_upgrade_check", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Check for certain firewalld configuration that may prevent an upgrade.\n    ", "apis": [], "class_name": "CheckFirewalld", "path": "actors/checkfirewalld", "tools": [], "dialogs": [], "name": "check_firewalld", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["FirewalldFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    OpenSSH configuration does not contain any unsupported cryptographic algorithms.\n\n    Check the values of Ciphers and MACs in OpenSSH server config file and warn\n    about removed algorithms which might cause the server to fail to start.\n    ", "apis": [], "class_name": "OpenSshAlgorithmsCheck", "path": "actors/opensshalgorithmscheck", "tools": [], "dialogs": [], "name": "open_ssh_algorithms", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["OpenSshConfig"]}, {"files": [], "tests": ["tests"], "description": "\n    Scan PAM configuration for modules that are not available in RHEL-8.\n\n    PAM module pam_krb5 and pam_pkcs11 are no longer present in RHEL-8\n    and must be removed from PAM configuration, otherwise it may lock out\n    the system.\n    ", "apis": [], "class_name": "RemoveOldPAMModulesScanner", "path": "actors/removeoldpammodulesscanner", "tools": [], "dialogs": [], "name": "removed_pam_modules_scanner", "produces": ["RemovedPAMModules"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Reports information related to the release set in the subscription-manager after the upgrade.\n\n    When using Red Hat subscription-manager (RHSM), the release is set by default\n    to the target version release. In case of skip of the RHSM (--no-rhsm), the\n    release stay as it is on the RHEL 7 and user has to handle it manually after\n    the upgrade.\n    ", "apis": [], "class_name": "ReportSetTargetRelease", "path": "actors/reportsettargetrelease", "tools": [], "dialogs": [], "name": "report_set_target_release", "produces": ["Report"], "tags": ["IPUWorkflowTag", "TargetTransactionChecksPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Check if ntp and/or ntpdate configuration needs to be migrated.\n    ", "apis": [], "class_name": "CheckNtp", "path": "actors/checkntp", "tools": [], "dialogs": [], "name": "check_ntp", "produces": ["Report", "NtpMigrationDecision"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    This actor performs several modifications to spamassassin configuration\n    so that spamc and the spamassassin systemd service can be run without error\n    on the target system:\n    1. Remove arguments given to the --ssl option in spamc configuration\n       (/etc/mail/spamassassin/spamc.conf).\n    2. Remove --ssl-version options from the spamassassin sysconfig file\n       (/etc/sysconfig/spamassassin), or replace them with --ssl, if needed.\n    3. Remove the -d/--daemonize option from the spamassassin sysconfig file.\n\n    All files are backed up before they are modified.\n    ", "apis": [], "class_name": "SpamassassinConfigUpdate", "path": "actors/spamassassinconfigupdate", "tools": [], "dialogs": [], "name": "spamassassin_config_update", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["SpamassassinFacts"]}, {"files": [], "tests": [], "description": "\n    Updates NetworkManager services status.\n\n    On Red Hat Enterprise Linux 7 if the NetworkManager service was disabled and\n    NetworkManager-wait-online enabled, the former would not be started. This changed on Red Hat\n    Enterprise Linux 8, where NM-w-o 'Requires' NM and so NM can be started even if disabled. Upon\n    upgrade, to keep the previous behavior we must disable NM-w-o when NM is disabled.\n\n    See also:\n      https://bugzilla.redhat.com/show_bug.cgi?id=1520865\n    ", "apis": [], "class_name": "NetworkManagerUpdateService", "path": "actors/networkmanagerupdateservice", "tools": [], "dialogs": [], "name": "network_manager_update_service", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Determines whether or not the SCTP kernel module might be wanted.\n\n    This actor determines whether or not the SCTP is currently used by this machine or has been quite\n    recently used (1 month timeframe). In case it has been used it will issue a SCTPConfig message that\n    defines the decision whether or not the SCTP module should be removed from the module blacklist on RHEL8.\n    ", "apis": [], "class_name": "SCTPConfigRead", "path": "actors/sctpconfigread", "tools": ["tools"], "dialogs": [], "name": "sctp_read_status", "produces": ["SCTPConfig"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["ActiveKernelModulesFacts"]}, {"files": [], "tests": [], "description": "\n    Actor that invokes DNF to download the RPMs required for the upgrade transaction.\n\n    This actor uses the rhel-upgrade plugin to perform the download of RPM for the transaction and performing the\n    transaction test, that is something like a dry run trying to determine the success of the upgrade.\n    ", "apis": [], "class_name": "DnfPackageDownload", "path": "actors/dnfpackagedownload", "tools": [], "dialogs": [], "name": "dnf_package_download", "produces": [], "tags": ["IPUWorkflowTag", "DownloadPhaseTag"], "libraries": [], "consumes": ["DNFPluginTask", "TargetUserSpaceInfo", "FilteredRpmTransactionTasks", "RHUIInfo", "XFSPresence", "StorageInfo", "UsedTargetRepositories"]}, {"files": [], "tests": ["tests"], "description": "\n    UsePrivilegeSeparation configuration option was removed.\n\n    Check the value of UsePrivilegeSeparation in OpenSSH server config file\n    and warn about its deprecation if it is set to non-default value.\n    ", "apis": [], "class_name": "OpenSshUsePrivilegeSeparationCheck", "path": "actors/opensshuseprivilegeseparationcheck", "tools": [], "dialogs": [], "name": "open_ssh_use_privilege_separation", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["OpenSshConfig"]}, {"files": [], "tests": ["tests"], "description": "\n    On the upgraded RHEL 8, set release and enable repositories that were used during the upgrade transaction.\n\n    We are enabling those RHEL 8 repos that are equivalent to the enabled RHEL 7 ones available. The BaseOS and\n    AppStream repos are enabled on RHEL 8 by default. Any other repository needs to be enabled specifically using\n    the subscription-manager (RHSM) utility. In case some custom repo was used during the upgrade transaction,\n    this won't be enabled by this actors as it is unknown to the subscription-manager.\n\n    We need to overwrite any RHSM release that may have been set before the upgrade, e.g. 7.6. Reasons:\n    - If we leave the old RHEL 7 release set, dnf calls on the upgraded RHEL 8 would fail.\n    - If we merely unset the release, users might end up updating the system to a newer version than the upgrade\n      was supposed to be upgrading to.\n    ", "apis": [], "class_name": "EnableRHSMReposOnRHEL8", "path": "actors/enablerhsmreposonrhel8", "tools": [], "dialogs": [], "name": "enable_rhsm_repos_on_rhel8", "produces": [], "tags": ["IPUWorkflowTag", "FirstBootPhaseTag"], "libraries": ["libraries"], "consumes": ["UsedTargetRepositories"]}, {"files": [], "tests": ["tests"], "description": "\n    Check whether the CPU is supported by the target system. Inhibit upgrade if not.\n\n    Currently we know just about cases with s390x where the set of CPUs supported\n    by RHEL 8 is subset of CPUs supported on RHEL 7. We can detect such cases based\n    on the machine field inside the /proc/cpuinfo file. expected values of the\n    field on supported machines are: 2964, 2965, 3906, 3907, 8561, 8562.\n    ", "apis": [], "class_name": "CheckCPU", "path": "actors/checkcpu", "tools": [], "dialogs": [], "name": "checkcpu", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["CPUInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if sendmail is installed, check whether configuration update is needed, inhibit upgrade if TCP wrappers\n    are used.\n    ", "apis": [], "class_name": "CheckSendmail", "path": "actors/checksendmail", "tools": [], "dialogs": [], "name": "check_sendmail", "produces": ["SendmailMigrationDecision", "Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM", "TcpWrappersFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check whether target yum repositories are specified.\n\n    RHSM | RHUI | ER | CTR | CTRF || result\n    -----+------+----+-----+------++-------\n     Yes | ---- | -- | --- | ---- || -\n    -----+------+----+-----+------++-------\n     No  | Yes  | -- | --- | ---- || -\n    -----+------+----+-----+------++-------\n     No  | No   | -- | No  | No   || inhibit\n    -----+------+----+-----+------++-------\n     No  | No   | -- | No  | Yes  || inhibit\n    -----+------+----+-----+------++-------\n     No  | No   | No | Yes | No   || warn/report info\n    -----+------+----+-----+------++-------\n     No  | No   | No | Yes | Yes  || -\n    -----+------+----+-----+------++-------\n     No  | No   | Yes| Yes | No   || -\n    -----+------+----+-----+------++-------\n     No  | No   | Yes| Yes | Yes  || -\n\n       ER   - config.get_env('LEAPP_ENABLE_REPOS') is non-empty\n       CTR  - CustomTargetRepositories found\n       CTRF - the expected CustomTargetRepositoryFile found\n       RHSM - RHSM is used (it is not skipped)\n       RHUI - RHUIInfo msg is consumed\n\n    This is not 100 % reliable check. This cover just the most obvious cases\n    that are expected to fail. Reporting of such issues in this way, here,\n    will be probably much more clear, without additional errors that could\n    be raised.\n    ", "apis": [], "class_name": "Checktargetrepos", "path": "actors/checktargetrepos", "tools": [], "dialogs": [], "name": "checktargetrepos", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["RHUIInfo", "CustomTargetRepositoryFile", "TargetRepositories"]}, {"files": [], "tests": ["tests"], "description": "\n    Migrate ntp and/or ntpdate configuration to chrony.\n    ", "apis": [], "class_name": "MigrateNtp", "path": "actors/migratentp", "tools": [], "dialogs": [], "name": "migrate_ntp", "produces": ["Report"], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["NtpMigrationDecision"]}, {"files": [], "tests": ["tests"], "description": "\n    Check the list of packages previously compiled with TCP wrappers support\n    and check whether they have some rules configured in\n    /etc/hosts.{allow,deny} that are no longer honored by the daemons and\n    might make the service more accessible than expected.\n    ", "apis": [], "class_name": "TcpWrappersCheck", "path": "actors/tcpwrapperscheck", "tools": [], "dialogs": [], "name": "tcp_wrappers_check", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["TcpWrappersFacts", "InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Checks whether KDE is installed\n\n    Actor will check whether KDE is installed together with GNOME desktop to inform whether we can\n    inhibit the upgrade process. When both are installed, we need to inform the user that KDE will\n    be removed and GNOME will be used instead. If only KDE is installed, we want to inhibit\n    the upgrade process otherwise the user will end up without a desktop.\n    Note: The Package Evolution Service data makes sure the KDE-related packages are removed in the\n    dnf upgrade transaction.\n    ", "apis": [], "class_name": "CheckKdeGnome", "path": "actors/checkkdegnome", "tools": [], "dialogs": [], "name": "check_kde_gnome", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["InstalledKdeAppsFacts", "InstalledDesktopsFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Produces message containing repository mapping based on provided file.\n    ", "apis": [], "class_name": "RepositoriesMapping", "path": "actors/repositoriesmapping", "tools": [], "dialogs": [], "name": "repository_mapping", "produces": ["RepositoriesMap"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Provides additional RPM transaction tasks from /etc/leapp/transaction.\n\n    After collecting task data from /etc/leapp/transaction directory, a message with relevant data\n    will be produced.\n    ", "apis": [], "class_name": "RpmTransactionConfigTasksCollector", "path": "actors/rpmtransactionconfigtaskscollector", "tools": [], "dialogs": [], "name": "rpm_transaction_config_tasks_collector", "produces": ["RpmTransactionTasks"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Regenerate RHEL-8 initrd and include files produced by other actors\n    ", "apis": [], "class_name": "InitrdInclude", "path": "actors/initrdinclude", "tools": [], "dialogs": [], "name": "initrdinclude", "produces": [], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledTargetKernelVersion", "InitrdIncludes"]}, {"files": [], "tests": ["tests"], "description": "\n    Inhibit upgrade if FIPS is detected as enabled.\n    ", "apis": [], "class_name": "CheckFips", "path": "actors/checkfips", "tools": [], "dialogs": [], "name": "check_fips", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": [], "consumes": ["KernelCmdline"]}, {"files": [], "tests": ["tests"], "description": "\n    Parse tcp_wrappers configuration files /etc/hosts.{allow,deny}.\n    ", "apis": [], "class_name": "TcpWrappersConfigRead", "path": "actors/tcpwrappersconfigread", "tools": [], "dialogs": [], "name": "tcp_wrappers_config_read", "produces": ["TcpWrappersFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Checks whether the multipath configuration can be updated to RHEL-8.\n    Specifically, it checks if the path_checker/checker option is set to\n    something other than tur in the defaults section. If so, non-trivial\n    changes may be required in the multipath.conf file, and it is not\n    possible to auto-update it.\n    ", "apis": [], "class_name": "MultipathConfCheck", "path": "actors/multipathconfcheck", "tools": [], "dialogs": [], "name": "multipath_conf_check", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["MultipathConfFacts"]}, {"files": ["files"], "tests": ["tests"], "description": "\n    Influences the generation of the initram disk\n\n    The initram disk generation is influenced by specifying necessary dracut modules and packages that are\n    required to be installed in the target userspace so required fields can be included.\n    Modules to be added are specified via the UpgradeDracutModule message.\n    Packages to install on the target userspace are specified by the RequiredUpgradeInitramPackages message.\n    ", "apis": [], "class_name": "CommonLeappDracutModules", "path": "actors/commonleappdracutmodules", "tools": [], "dialogs": [], "name": "common_leapp_dracut_modules", "produces": ["UpgradeDracutModule", "RequiredUpgradeInitramPackages"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Provides data about restricted (unsupported or/and unavailable) devices.\n\n    The data sources priority set up is as following:\n    1. The actor tries to get the data from /etc/leapp/files\n    2. Then from the online service\n    ", "apis": [], "class_name": "RestrictedPCIsScanner", "path": "actors/restrictedpcisscanner", "tools": [], "dialogs": [], "name": "restricted_pcis_scanner", "produces": ["RestrictedPCIDevices"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": [], "description": "\n    Check SSSD configuration for changes in RHEL8 and report them.\n\n    These changes are:\n    - id_provider=local is no longer supported and will be ignored\n    - ldap_groups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_initgroups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_sudo_include_regexp changed default from true to false\n    ", "apis": [], "class_name": "SSSDCheck", "path": "actors/sssdcheck", "tools": [], "dialogs": [], "name": "sssd_check", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": [], "consumes": ["SSSDConfig"]}, {"files": [], "tests": [], "description": "\n    Check all dialogs and notify that user needs to make some choices.\n\n    Report messages containing all dialogs with questions that need to be answered will be produced.\n    ", "apis": [], "class_name": "VerifyDialogs", "path": "actors/verifydialogs", "tools": [], "dialogs": [], "name": "verify_check_results", "produces": ["Report"], "tags": ["ReportPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["DialogModel"]}, {"files": [], "tests": ["tests"], "description": "\n    Remove systemd service to launch Leapp.\n\n    After system was rebooted and process resumed, this service is not necessary anymore.\n    ", "apis": [], "class_name": "RemoveSystemdResumeService", "path": "actors/removeresumeservice", "tools": [], "dialogs": [], "name": "remove_systemd_resume_service", "produces": ["Report"], "tags": ["_AfterFirstBootPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": [], "description": "\n    Confirm suggested authselect call from AuthselectScanner.\n\n    AuthselectScanner produces an Authselect model that contains changes\n    that are suggested based on current configuration. This actor will\n    ask administrator for confirmation and will report the result.\n    ", "apis": [], "class_name": "AuthselectCheck", "path": "actors/authselectcheck", "tools": [], "dialogs": [{"scope": "authselect_check", "reason": "Confirmation", "components": [{"description": "If yes, suggested authselect profile will be applied on your system to generate PAM and nsswitch.conf configuration. If no, current configuration will be kept intact.", "default": true, "value": null, "label": "Configure PAM and nsswitch.conf with the following authselect call?", "reason": "There is a new tool called authselect in RHEL8 that replaced authconfig which is used to manage authentication (PAM) and identity (nsswitch.conf) sources. It is recommended to switch to this tool.", "value_type": "<type 'bool'>", "key": "confirm"}], "title": null}], "name": "authselect_check", "produces": ["AuthselectDecision", "Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": [], "consumes": ["Authselect"]}, {"files": [], "tests": ["tests"], "description": "Scan Memory of the machine.", "apis": [], "class_name": "ScanMemory", "path": "actors/scanmemory", "tools": [], "dialogs": [], "name": "scanmemory", "produces": ["MemoryInfo"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Initializes a directory to be populated as a minimal environment to run binaries from the target system.\n\n    The target userspace is set up in a directory so one can run it in a containerized environment to perform tasks\n    as if the system running would be the target system. This allows us to use the target system RPM stack including\n    DNF which gives us the ability to use RPM features from the target system.\n    The userspace environment is also used to generate a initram disk with dracut using the target system binaries\n    such as kernel, systemd etc etc\n    ", "apis": [], "class_name": "TargetUserspaceCreator", "path": "actors/targetuserspacecreator", "tools": [], "dialogs": [], "name": "target_userspace_creator", "produces": ["TMPTargetRepositoriesFacts", "Report", "UsedTargetRepositories", "TargetUserSpaceInfo"], "tags": ["IPUWorkflowTag", "TargetTransactionFactsPhaseTag"], "libraries": ["libraries"], "consumes": ["RHUIInfo", "XFSPresence", "TargetRepositories", "RHSMInfo", "RequiredTargetUserspacePackages", "CustomTargetRepositoryFile", "RepositoriesMap", "StorageInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if Grep is installed. If yes, write information about non-compatible changes.\n    ", "apis": [], "class_name": "CheckGrep", "path": "actors/checkgrep", "tools": [], "dialogs": [], "name": "checkgrep", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Prepare environment to be able to run leapp with Python3 in initrd.\n\n    These are the current necessary steps to be able to run Leapp with Python3.\n    Basically, we create directory (now /root/tmp_leapp_py3/). We will put\n    symlinks inside which will point to leapp python packages. Additionally,\n    we create new script that will import expected modules and run leapp again.\n    ", "apis": [], "class_name": "PreparePythonWorkround", "path": "actors/preparepythonworkround", "tools": [], "dialogs": [], "name": "prepare_python_workround", "produces": [], "tags": ["IPUWorkflowTag", "RPMUpgradePhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Check if system is running at a supported architecture. If no, inhibit the upgrade process.\n\n    Base on collected system facts, verify if current architecture is supported, otherwise produces\n    a message to inhibit upgrade process\n    ", "apis": [], "class_name": "CheckSystemArch", "path": "actors/checksystemarch", "tools": [], "dialogs": [], "name": "check_system_arch", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Reads vsftpd configuration files (/etc/vsftpd/*.conf) and extracts necessary information.\n    ", "apis": [], "class_name": "VsftpdConfigRead", "path": "actors/vsftpdconfigread", "tools": [], "dialogs": [], "name": "vsftpd_config_read", "produces": ["VsftpdFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Modifies multipath configuration files on the target RHEL-8 system so that\n    they will run properly. This is done in three ways\n    1. commenting out lines for options that no longer exist, or whose value\n       is no longer current in RHEL-8\n    2. Migrating any options in an devices section with all_devs to an\n       overrides setions\n    3. Rename options that have changed names\n    ", "apis": [], "class_name": "MultipathConfUpdate", "path": "actors/multipathconfupdate", "tools": [], "dialogs": [], "name": "multipath_conf_update", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["MultipathConfFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check for usage of removed environment variables and inhibit the upgrade\n    if they are used.\n    ", "apis": [], "class_name": "CheckRemovedEnvVars", "path": "actors/checkremovedenvvars", "tools": [], "dialogs": [], "name": "check_removed_envvars", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Actor for migrating sane-backends configuration files.\n\n    Adds USB quirks for support specific USB scanners if they\n    are not added during package manager transaction.\n    ", "apis": [], "class_name": "SanebackendsMigrate", "path": "actors/sanebackendsmigrate", "tools": [], "dialogs": [], "name": "sanebackends_migrate", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if postfix is installed, check whether configuration update is needed.\n    ", "apis": [], "class_name": "CheckPostfix", "path": "actors/checkpostfix", "tools": [], "dialogs": [], "name": "check_postfix", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Get network interface information for physical ethernet interfaces with the new kernel in initramfs.\n\n    This actor does exactly the same job as PersistentNetNames actor except that it runs in a later phase.\n    ", "apis": [], "class_name": "PersistentNetNamesInitramfs", "path": "actors/persistentnetnamesinitramfs", "tools": [], "dialogs": [], "name": "persistentnetnamesinitramfs", "produces": ["PersistentNetNamesFactsInitramfs"], "tags": ["LateTestsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": [], "description": "\n    Scan the system root directory and produce a message containing\n    information about its subdirectories.\n    ", "apis": [], "class_name": "RootScanner", "path": "actors/rootscanner", "tools": [], "dialogs": [], "name": "root_scanner", "produces": ["RootDirectory"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": [], "consumes": []}, {"files": ["files"], "tests": [], "description": "\n    Creates the upgrade initram disk\n\n    Creates an initram disk within a systemd-nspawn container using the target system userspace, including new kernel.\n    The creation of the initram disk can be influenced with RequiredUpgradeInitramPackages and UpgradeDracutModule,\n    which allow to specify additional packages to install in the target userspace and dracut modules to be included\n    during the dracut execution.\n    ", "apis": [], "class_name": "InitramDiskGenerator", "path": "actors/initramdiskgenerator", "tools": [], "dialogs": [], "name": "initram_disk_generator", "produces": ["BootContent"], "tags": ["IPUWorkflowTag", "InterimPreparationPhaseTag"], "libraries": ["libraries"], "consumes": ["TargetUserSpaceInfo", "UpgradeDracutModule", "UsedTargetRepositories", "RequiredUpgradeInitramPackages"]}, {"files": [], "tests": ["tests"], "description": "\n    Produces a report if any repositories enabled on the system are going to be skipped.\n\n    The report produced by this actor should additionally include any package that is affected due to skipping\n    the repository.\n    ", "apis": [], "class_name": "CheckSkippedRepositories", "path": "actors/checkskippedrepositories", "tools": [], "dialogs": [], "name": "check_skipped_repositories", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": [], "consumes": ["SkippedRepositories"]}, {"files": [], "tests": [], "description": "\n    Updates NetworkManager configuration for Red Hat Enterprise Linux 8.\n\n    On Red Hat Enterprise Linux 7 NetworkManager uses the \"dhclient\" DHCP backend by default, while\n    the default is \"internal\" on Red Hat Enterprise Linux 8. We want to keep \"dhclient\" enabled on\n    upgrade, unless the user explicitly chose another backend in the configuration. To do so, we\n    drop a configuration snippet in /usr/lib.\n    ", "apis": [], "class_name": "NetworkManagerUpdateConfig", "path": "actors/networkmanagerupdateconfig", "tools": [], "dialogs": [], "name": "network_manager_update_config", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["NetworkManagerConfig"]}, {"files": [], "tests": ["tests"], "description": "\n    Provides data about NetworkManager configuration.\n\n    After collecting data from NetworkManager tool, a message with relevant data will be produced.\n    ", "apis": [], "class_name": "NetworkManagerReadConfig", "path": "actors/networkmanagerreadconfig", "tools": [], "dialogs": [], "name": "network_manager_read_config", "produces": ["NetworkManagerConfig"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Provides data about storage settings.\n\n    After collecting data from tools like mount, lsblk, pvs, vgs and lvdisplay, and relevant files\n    under /proc/partitions and /etc/fstab, a message with relevant data will be produced.\n    ", "apis": [], "class_name": "StorageScanner", "path": "actors/storagescanner", "tools": [], "dialogs": [], "name": "storage_scanner", "produces": ["Report", "StorageInfo"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Provides additional RPM transaction tasks based on bundled RPM packages.\n\n    After collecting bundled RPM packages, a message with relevant data will be produced.\n    ", "apis": [], "class_name": "TransactionWorkarounds", "path": "actors/transactionworkarounds", "tools": [], "dialogs": [], "name": "transaction_workarounds", "produces": ["RpmTransactionTasks"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": [], "consumes": []}, {"files": [], "tests": [], "description": "\n    Check if there are any RHEL 7 packages present after upgrade.\n\n    Actor produces message containing these packages. Message is empty if there are no el7 package left.\n    ", "apis": [], "class_name": "CheckLeftoverPackages", "path": "actors/checkleftoverpackages", "tools": [], "dialogs": [], "name": "check_leftover_packages", "produces": ["LeftoverPackages"], "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledUnsignedRPM", "TransactionCompleted"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if HA Cluster is in use. If yes, inhibit the upgrade process.\n\n    The system is considered as part of cluster if a corosync.conf file\n    (/etc/corosync/corosync.conf) can be found there.\n    Also the system can be a part of a cluster as a remote node. In such case\n    a cib file (/var/lib/pacemaker/cib/cib.xml) can be found there.\n    ", "apis": [], "class_name": "Checkhacluster", "path": "actors/checkhacluster", "tools": [], "dialogs": [], "name": "check_ha_cluster", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    On legacy (BIOS) systems, GRUB core (located in the gap between the MBR and the\n    first partition), does not get automatically updated when GRUB is upgraded.\n    ", "apis": [], "class_name": "UpdateGrubCore", "path": "actors/updategrubcore", "tools": [], "dialogs": [], "name": "update_grub_core", "produces": ["Report"], "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["TransactionCompleted", "FirmwareFacts"]}, {"files": [], "tests": [], "description": "\n    Skip all the subsequent phases until the report phase.\n\n    The phases that follow after the Checks phase work with the target (RHEL 8)\n    user space - stuff around preparing and checking the rpm transaction.\n    We do not want to process those phases in case of inhibition - e.g. for\n    a specific HW unsupported by the target system we cannot do anything - we\n    can just see some unclear errors in such case. So we want to instead skip\n    to the Reports phase to provide clear report to user without confusing\n    errors.\n\n    The actor is processed after all actors in the phase (that provides Report\n    messages) are processed.\n    ", "apis": [], "class_name": "CheckSkipPhase", "path": "actors/checkskipphase", "tools": [], "dialogs": [], "name": "check_skip_phase", "produces": [], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["Report"]}, {"files": [], "tests": ["tests"], "description": "\n    Update /etc/sysconfig/kernel file.\n\n    In order to proceed with Upgrade process, DEFAULTKERNEL entry should be updated from kernel to\n    kernel-core.\n    ", "apis": [], "class_name": "UpdateEtcSysconfigKernel", "path": "actors/updateetcsysconfigkernel", "tools": [], "dialogs": [], "name": "update_etc_sysconfig_kernel", "produces": [], "tags": ["PreparationPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "Inhibits the upgrade if local repositories were found.", "apis": [], "class_name": "LocalReposInhibit", "path": "actors/localreposinhibit", "tools": [], "dialogs": [], "name": "local_repos_inhibit", "produces": ["Report"], "tags": ["IPUWorkflowTag", "TargetTransactionChecksPhaseTag"], "libraries": [], "consumes": ["TMPTargetRepositoriesFacts", "UsedTargetRepositories"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if the symlinks /bin and /lib are relative, not absolute.\n\n    After reboot, dracut fails if the links are absolute.\n    ", "apis": [], "class_name": "CheckRootSymlinks", "path": "actors/checkrootsymlinks", "tools": [], "dialogs": [], "name": "check_root_symlinks", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": [], "consumes": ["RootDirectory"]}, {"files": [], "tests": ["tests"], "description": "\n    Reads spamc configuration (/etc/mail/spamassassin/spamc.conf), the\n    spamassassin sysconfig file (/etc/sysconfig/spamassassin) and checks\n    whether the spamassassin service has been overriden. Produces\n    SpamassassinFacts containing the extracted information.\n    ", "apis": [], "class_name": "SpamassassinConfigRead", "path": "actors/spamassassinconfigread", "tools": [], "dialogs": [], "name": "spamassassin_config_read", "produces": ["SpamassassinFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Ensure the default boot entry is set to the new target kernel\n\n    This Actor ensure that the default entry in the boot loader is set to the newly installed kernel version.\n    There have been cases when the default boot entry was not set to the default kernel version. In this case the\n    actor will log a warning for debugging purposes.\n    ", "apis": [], "class_name": "ForceDefaultBootToTargetKernelVersion", "path": "actors/forcedefaultboottotargetkernelversion", "tools": [], "dialogs": [], "name": "force_default_boot_to_target_kernel_version", "produces": [], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledTargetKernelVersion"]}, {"files": [], "tests": [], "description": "\n    No documentation has been provided for the scan_kernel_cmdline actor.\n    ", "apis": [], "class_name": "ScanKernelCmdline", "path": "actors/scankernelcmdline", "tools": [], "dialogs": [], "name": "scan_kernel_cmdline", "produces": ["KernelCmdline"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Check for incompatible changes in chrony configuration.\n\n    Warn that the default chrony configuration in RHEL8 uses the leapsectz\n    directive.\n    ", "apis": [], "class_name": "CheckChrony", "path": "actors/checkchrony", "tools": [], "dialogs": [], "name": "check_chrony", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Detect what authselect configuration should be suggested to administrator.\n\n    1. Detect possible authselect profile by looking up modules in PAM\n       or by checking that daemon is enabled.\n       - pam_sss -> sssd\n       - pam_winbind -> winbind\n       - ypbind enabled -> nis\n\n       If more then one module/daemon is detected that we will keep the\n       configuration intact. No authselect profile can be applied.\n\n    2. Detect authselect profile features by looking up modules in PAM\n       or nsswitch.conf.\n       - pam_faillock => with-faillock\n       - pam_fprintd => with-fingerprint\n       - pam_access => with-pamaccess\n       - pam_mkhomedir => with-mkhomedir\n       - pam_oddjob_mkhomedir => with-mkhomedir\n\n    3. Check if there are any unknown PAM modules.\n       If there are used PAM modules not used in authselect (such as pam_ldap),\n       we must keep the configuration intact.\n\n    4. Check if authconfig was used to create current configuration.\n       If yes, we can automatically convert the configuration to authselect.\n       If no, we need admin's confirmation.\n\n       - Check that /etc/sysconfig/authconfig exists.\n       - Check that PAM configuration uses authconfig files.\n       - Check that PAM configuration was not touch after sysconfig file\n         was created.\n    ", "apis": [], "class_name": "AuthselectScanner", "path": "actors/authselectscanner", "tools": [], "dialogs": [], "name": "authselect_scanner", "produces": ["Authselect"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Produce CustomTargetRepository based on the LEAPP_ENABLE_REPOS in config.\n    ", "apis": [], "class_name": "ScanCLIenablrepo", "path": "actors/scanclienablerepo", "tools": [], "dialogs": [], "name": "scanclienablerepo", "produces": ["CustomTargetRepository"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Report a couple of changes in tshark usage\n    ", "apis": [], "class_name": "CheckWireshark", "path": "actors/checkwireshark", "tools": [], "dialogs": [], "name": "check_wireshark", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Remove boot entry for Leapp provided initramfs.\n\n    After upgrade process used initramfs after reboot, this entry is not necessary anymore.\n    ", "apis": [], "class_name": "RemoveUpgradeBootEntry", "path": "actors/removeupgradebootentry", "tools": [], "dialogs": [], "name": "remove_upgrade_boot_entry", "produces": [], "tags": ["IPUWorkflowTag", "InitRamStartPhaseTag"], "libraries": ["libraries"], "consumes": ["BootContent", "FirmwareFacts"]}, {"files": [], "tests": [], "description": "\n    Setup and call DNF upgrade command\n\n    Based on previously calculated RPM transaction data, this actor will setup and call\n    rhel-upgrade DNF plugin with necessary parameters\n    ", "apis": [], "class_name": "DnfUpgradeTransaction", "path": "actors/dnfupgradetransaction", "tools": [], "dialogs": [], "name": "dnf_upgrade_transaction", "produces": ["TransactionCompleted"], "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["DNFPluginTask", "TargetUserSpaceInfo", "FilteredRpmTransactionTasks", "StorageInfo", "RHSMInfo", "UsedTargetRepositories"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if brltty is installed, check whether configuration update is needed.\n    ", "apis": [], "class_name": "CheckBrltty", "path": "actors/checkbrltty", "tools": [], "dialogs": [], "name": "check_brltty", "produces": ["Report", "BrlttyMigrationDecision"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Check whether we are on legacy (BIOS) system and instruct Leapp to upgrade GRUB core\n    ", "apis": [], "class_name": "CheckGrubCore", "path": "actors/checkgrubcore", "tools": [], "dialogs": [], "name": "check_grub_core", "produces": ["Report", "UpdateGrub"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["GrubDevice", "FirmwareFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    The actor check the size of RAM against RHEL8 minimal hardware requirements\n\n    Using the following resource: https://access.redhat.com/articles/rhel-limits\n    ", "apis": [], "class_name": "CheckMemory", "path": "actors/checkmemory", "tools": [], "dialogs": [], "name": "checkmemory", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["MemoryInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Re-apply SELinux customizations from RHEL-7 installation\n\n    Re-apply SELinux policy customizations (custom policy modules and changes\n    introduced by semanage). Any changes (due to incompatiblity with RHEL-8\n    SELinux policy) are reported to user.\n    ", "apis": [], "class_name": "SELinuxApplyCustom", "path": "actors/selinux/selinuxapplycustom", "tools": [], "dialogs": [], "name": "selinuxapplycustom", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["SELinuxCustom", "SELinuxModules"]}, {"files": [], "tests": ["tests"], "description": "\n    Remove selinux policy customizations before updating selinux-policy* packages\n\n    RHEL-7 policy customizations could cause policy package upgrade to fail and therefore\n    need to be removed. Customizations introduced by semanage are removed first,\n    followed by custom policy modules gathered by SELinuxContentScanner.\n    ", "apis": [], "class_name": "SELinuxPrepare", "path": "actors/selinux/selinuxprepare", "tools": [], "dialogs": [], "name": "selinuxprepare", "produces": [], "tags": ["PreparationPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["SELinuxCustom", "SELinuxModules"]}, {"files": [], "tests": ["tests"], "description": "\n    Scan the system for any SELinux customizations\n\n    Find SELinux policy customizations (custom policy modules and changes\n    introduced by semanage) and save them in SELinuxModules and SELinuxCustom\n    models. Customizations that are incompatible with SELinux policy on RHEL-8\n    are removed.\n    ", "apis": [], "class_name": "SELinuxContentScanner", "path": "actors/selinux/selinuxcontentscanner", "tools": [], "dialogs": [], "name": "selinuxcontentscanner", "produces": ["SELinuxRequestRPMs", "SELinuxCustom", "RpmTransactionTasks", "SELinuxModules"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["SELinuxFacts"]}, {"files": [], "tests": [], "description": "\n    Check if it is all right to disable PAM modules that are not in RHEL-8.\n\n    If admin will refuse to disable these modules (pam_pkcs11 and pam_krb5),\n    upgrade will be stopped. Otherwise we would risk locking out the system\n    once these modules are removed.\n    ", "apis": [], "class_name": "RemoveOldPAMModulesCheck", "path": "actors/removeoldpammodulescheck", "tools": [], "dialogs": [{"scope": "remove_pam_pkcs11_module_check", "reason": "Confirmation", "components": [{"description": "PAM module pam_pkcs11 is no longer available in RHEL-8 since it was replaced by SSSD.", "default": null, "value": null, "label": "Disable pam_pkcs11 module in PAM configuration? If no, the upgrade process will be interrupted.", "reason": "Leaving this module in PAM configuration may lock out the system.", "value_type": "<type 'bool'>", "key": "confirm"}], "title": null}, {"scope": "remove_pam_krb5_module_check", "reason": "Confirmation", "components": [{"description": "PAM module pam_krb5 is no longer available in RHEL-8 since it was replaced by SSSD.", "default": null, "value": null, "label": "Disable pam_krb5 module in PAM configuration? If no, the upgrade process will be interrupted.", "reason": "Leaving this module in PAM configuration may lock out the system.", "value_type": "<type 'bool'>", "key": "confirm"}], "title": null}], "name": "removed_pam_modules_check", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": [], "consumes": ["RemovedPAMModules"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if Btrfs filesystem is in use. If yes, inhibit the upgrade process.\n\n    Btrfs filesystem was introduced as Technology Preview with initial releases of RHEL 6 and 7. It\n    was deprecated on versions 6.6 and 7.4 and will not be present in next major version.\n    ", "apis": [], "class_name": "CheckBtrfs", "path": "actors/checkbtrfs", "tools": [], "dialogs": [], "name": "check_btrfs", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["ActiveKernelModulesFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Add new boot entry for Leapp provided initramfs.\n\n    Using new boot entry, Leapp can continue the upgrade process in the initramfs after reboot\n    ", "apis": [], "class_name": "AddUpgradeBootEntry", "path": "actors/addupgradebootentry", "tools": [], "dialogs": [], "name": "add_upgrade_boot_entry", "produces": [], "tags": ["IPUWorkflowTag", "InterimPreparationPhaseTag"], "libraries": ["libraries"], "consumes": ["BootContent", "FirmwareFacts", "GrubConfigError"]}, {"files": [], "tests": ["tests"], "description": "\n    Get name of block device where GRUB is located\n    ", "apis": [], "class_name": "Grubdevname", "path": "actors/grubdevname", "tools": [], "dialogs": [], "name": "grubdevname", "produces": ["GrubDevice"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Provides data about packages events from Package Evolution Service.\n\n    After collecting data from a provided JSON file containing Package Evolution Service events, a\n    message with relevant data will be produced to help DNF Upgrade transaction calculation.\n    ", "apis": [], "class_name": "PesEventsScanner", "path": "actors/peseventsscanner", "tools": [], "dialogs": [], "name": "pes_events_scanner", "produces": ["RepositoriesSetupTasks", "Report", "PESRpmTransactionTasks"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": ["RepositoriesBlacklisted", "InstalledRedHatSignedRPM", "RpmTransactionTasks", "RepositoriesMap"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if host PCI devices drivers has restrictions on target system.\n\n    If driver is restricted this means it is either unsupported or unavailable\n    in some set of newer RHEL versions.\n\n    If the driver is unavailable on a target system - then the upgrade will\n        be inhibited\n    If the driver is available, but not supported - then the upgrade will\n        continue, but the relevant report will be generated\n    If the driver is available and supported - then the upgrade will continue\n        normally\n    ", "apis": [], "class_name": "CheckPCIDrivers", "path": "actors/checkpcidrivers", "tools": [], "dialogs": [], "name": "check_pci_drivers", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["PCIDevices", "RestrictedPCIDevices"]}, {"files": [], "tests": ["tests"], "description": "\n    Scan used enabled repositories\n\n    Based on lists of installed RPM packages and enabled RPM repositories, check which packages\n    were installed from each repository.\n    ", "apis": [], "class_name": "UsedRepositoriesScanner", "path": "actors/usedrepositoriesscanner", "tools": [], "dialogs": [], "name": "used_repository_scanner", "produces": ["UsedRepositories"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": [], "consumes": ["RepositoriesFacts", "InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Modifies vsftpd configuration files on the target RHEL-8 system so that the effective\n    configuration is the same, where possible. This means doing two things:\n    1. Reverting the default configuration file (/etc/vsftpd/vsftpd.conf) to its state\n       before the upgrade (where it makes sense), if the configuration file was being used\n       with its default content (i.e., unmodified) on the source system (the configuration\n       file gets replaced with a new version during the RPM upgrade in this case).\n       The anonymous_enable option falls in this category.\n    2. Adding 'option=old_effective_value' to configuration files for options whose default\n       value has changed, if the option is not explicitly specified in the configuration file.\n       The strict_ssl_read_eof option falls in this category.\n    3. Disabling options that cannot be enabled, otherwise vsftpd wouldn't work.\n       The tcp_wrappers option falls in this category.\n    ", "apis": [], "class_name": "VsftpdConfigUpdate", "path": "actors/vsftpdconfigupdate", "tools": [], "dialogs": [], "name": "vsftpd_config_update", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["VsftpdFacts"]}, {"files": [], "tests": [], "description": "\n    Apply changes suggested by AuthselectScanner.\n\n    If confirmed by admin in AuthselectDecision, call suggested authselect\n    command to configure the system using this tool.\n    ", "apis": [], "class_name": "AuthselectApply", "path": "actors/authselectapply", "tools": [], "dialogs": [], "name": "authselect_apply", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ApplicationsPhaseTag"], "libraries": [], "consumes": ["Authselect", "AuthselectDecision"]}, {"files": [], "tests": ["tests"], "description": "\n    Filter RPM transaction events based on installed RPM packages\n\n    In order to calculate a working DNF Upgrade transaction, Leapp can collect data from multiple\n    sources and find workarounds for possible problems. This actor will filter all collected\n    workarounds and keep only those relevants to current system based on installed packages.\n    ", "apis": [], "class_name": "FilterRpmTransactionTasks", "path": "actors/filterrpmtransactionevents", "tools": [], "dialogs": [], "name": "check_rpm_transaction_events", "produces": ["FilteredRpmTransactionTasks"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": [], "consumes": ["RpmTransactionTasks", "PESRpmTransactionTasks", "InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Actor for migrating package cups-filters.\n\n    Migrating cups-filters package means adding two directives into\n    /etc/cups/cups-browsed.conf - LocalQueueNamingRemoteCUPS and\n    CreateIPPPrinterQueues.\n\n    LocalQueueNamingRemoteCUPS directive indicates what will be used as a name\n    for local print queue creation - the default is DNS-SD ID of advertised\n    print queue now, it was the name of remote print queue in the past.\n\n    CreateIPPPrinterQueues directive serves for telling cups-browsed to create\n    local print queues for all available IPP printers.\n    ", "apis": [], "class_name": "CupsfiltersMigrate", "path": "actors/cupsfiltersmigrate", "tools": [], "dialogs": [], "name": "cupsfilters_migrate", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Actor checks which KDE apps are installed.\n    ", "apis": [], "class_name": "CheckKdeApps", "path": "actors/checkkdeapps", "tools": [], "dialogs": [], "name": "check_kde_apps", "produces": ["InstalledKdeAppsFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Update the firewalld Lockdown Whitelist.\n\n    RHEL-8 uses a platform specific python interpreter for packaged\n    applications. For firewall-config, the interpreter path is part of the\n    lockdown list. In RHEL-7 this was simply /usr/bin/python, but in RHEL-8\n    it's /usr/libexec/platform-python. However, if the user made changes to the\n    lockdown whitelist it won't be replaced by RPM/dnf. As such we must update\n    the interpreter if the old value is there.\n    ", "apis": [], "class_name": "FirewalldUpdateLockdownWhitelist", "path": "actors/firewalldupdatelockdownwhitelist", "tools": [], "dialogs": [], "name": "firewalld_update_lockdown_whitelist", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["FirewalldFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Collect information about the OpenSSH configuration.\n\n    Currently supporting the following options:\n\n     * PermitRootLogin\n     * UsePrivilegeSeparation\n     * Protocol\n     * Ciphers\n     * MACs\n\n    ", "apis": [], "class_name": "OpenSshConfigScanner", "path": "actors/opensshconfigscanner", "tools": [], "dialogs": [], "name": "read_openssh_config", "produces": ["OpenSshConfig"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Modify configuration files of Vim 8.0 and later to keep the same behavior\n    as Vim 7.4 and earlier had.\n    ", "apis": [], "class_name": "VimMigrate", "path": "actors/vimmigrate", "tools": [], "dialogs": [], "name": "vim_migrate", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Actor checks if kde or gnome desktop environments\n    are installed and what desktop is default.\n    ", "apis": [], "class_name": "GetInstalledDesktops", "path": "actors/getinstalleddesktops", "tools": [], "dialogs": [], "name": "get_installed_desktops", "produces": ["InstalledDesktopsFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Provides data about many facts from system.\n\n    After collecting data from multiple tools, messages with relevant data will be produced to\n    describe:\n      - Sysctl variables;\n      - Active Linux Kernel Modules;\n      - Users;\n      - Groups;\n      - Package repositories;\n      - SELinux status;\n      - Firewalls status.\n    ", "apis": [], "class_name": "SystemFactsActor", "path": "actors/systemfacts", "tools": [], "dialogs": [], "name": "system_facts", "produces": ["RepositoriesFacts", "UsersFacts", "GroupsFacts", "SELinuxFacts", "FirewallsFacts", "FirmwareFacts", "ActiveKernelModulesFacts", "SysctlVariablesFacts"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "Provide data about installed RPM Packages signed by Red Hat.\n\n    After filtering the list of installed RPM packages by signature, a message\n    with relevant data will be produced.\n    ", "apis": [], "class_name": "RedHatSignedRpmScanner", "path": "actors/redhatsignedrpmscanner", "tools": [], "dialogs": [], "name": "red_hat_signed_rpm_scanner", "produces": ["InstalledUnsignedRPM", "InstalledRedHatSignedRPM"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": [], "consumes": ["InstalledRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Check the FSTAB file for the deprecated / removed XFS mount options.\n\n    Some mount options for XFS have been deprecated on RHEL 7 and already\n    removed on RHEL 8. If any such an option is present in the FSTAB,\n    it's impossible to boot the RHEL 8 system without the manual update of the\n    file.\n\n    Check whether any of these options are present in the FSTAB file\n    and inhibit the upgrade in such a case.\n    ", "apis": [], "class_name": "CheckFstabXFSOptions", "path": "actors/checkfstabxfsoptions", "tools": [], "dialogs": [], "name": "checkfstabxfsoptions", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["StorageInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Checks whether the vsftpd configuration is supported in RHEL-8. Namely checks that\n    configuration files don't set tcp_wrappers=YES and vsftpd-related configuration is\n    not present in tcp_wrappers configuration files at the same time.\n    ", "apis": [], "class_name": "VsftpdConfigCheck", "path": "actors/vsftpdconfigcheck", "tools": [], "dialogs": [], "name": "vsftpd_config_check", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["TcpWrappersFacts", "VsftpdFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if there are packages not signed by Red Hat in use. If yes, warn user about it.\n\n    If any any installed RPM package does not contain a valid signature from Red Hat, a message\n    containing a warning is produced.\n    ", "apis": [], "class_name": "RedHatSignedRpmCheck", "path": "actors/redhatsignedrpmcheck", "tools": [], "dialogs": [], "name": "red_hat_signed_rpm_check", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["InstalledUnsignedRPM"]}, {"files": [], "tests": [], "description": "This actor informs the user of differences in Python version and support in RHEL 8.", "apis": [], "class_name": "PythonInformUser", "path": "actors/pythoninformuser", "tools": [], "dialogs": [], "name": "python_inform_user", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Ensure the system is subscribed to the subscription manager\n\n    This actor verifies that the system is correctly subscribed to via the Red Hat Subscription Manager and\n    has attached SKUs. The actor will inhibit the upgrade if there are none and RHSM is not supposed\n    to be skipped.\n    ", "apis": [], "class_name": "CheckRedHatSubscriptionManagerSKU", "path": "actors/checkrhsmsku", "tools": [], "dialogs": [], "name": "check_rhsmsku", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["RHSMInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if irssi is installed. If yes, write information about non-compatible changes.\n    ", "apis": [], "class_name": "CheckIrssi", "path": "actors/checkirssi", "tools": [], "dialogs": [], "name": "checkirssi", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "Scan CPUs of the machine.", "apis": [], "class_name": "ScanCPU", "path": "actors/scancpu", "tools": [], "dialogs": [], "name": "scancpu", "produces": ["CPUInfo"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Check if the system is using Azure hybrid image.\n\n    These images have a default relative symlink to EFI\n    partion even when booted using BIOS and in such cases\n    GRUB is not able find \"grubenv\" to get the kernel cmdline\n    options and fails to boot after upgrade`.\n    ", "apis": [], "class_name": "CheckHybridImage", "path": "actors/cloud/checkhybridimage", "tools": [], "dialogs": [], "name": "checkhybridimage", "produces": ["HybridImage"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRPM", "FirmwareFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if system is using RHUI infrastructure (on public cloud) and send messages to\n    provide additional data needed for upgrade.\n    ", "apis": [], "class_name": "CheckRHUI", "path": "actors/cloud/checkrhui", "tools": [], "dialogs": [], "name": "checkrhui", "produces": ["DNFPluginTask", "Report", "KernelCmdlineArg", "RpmTransactionTasks", "RHUIInfo", "RequiredTargetUserspacePackages"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Convert \"grubenv\" symlink to a regular file on Azure hybrid images using BIOS.\n\n    Azure images provided by Red Hat aim for hybrid (BIOS/EFI) functionality,\n    however, currently GRUB is not able to see the \"grubenv\" file if it is a symlink\n    to a different partition (default on EFI with grub2-efi pkg installed) and\n    fails on BIOS systems. This actor converts the symlink to the normal file\n    with the content of grubenv on the EFI partition in case the system is using BIOS\n    and running on the Azure cloud. This action is reported in the preupgrade phase.\n    ", "apis": [], "class_name": "GrubenvToFile", "path": "actors/cloud/grubenvtofile", "tools": [], "dialogs": [], "name": "grubenvtofile", "produces": [], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["HybridImage"]}, {"files": [], "tests": [], "description": "\n    Scan the pam directory for services and modules used in them\n\n    This produces a PAMConfiguration message containing the whole\n    list of configured PAM services and what modules they contain.\n    ", "apis": [], "class_name": "PamModulesScanner", "path": "actors/pammodulesscanner", "tools": [], "dialogs": [], "name": "pam_modules_scanner", "produces": ["PamConfiguration"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Set SELinux mode.\n\n    In order to proceed with Upgrade process, SELinux should be set into permissive mode if it was\n    in enforcing mode.\n    ", "apis": [], "class_name": "SetPermissiveSelinux", "path": "actors/setpermissiveselinux", "tools": [], "dialogs": [], "name": "set_permissive_se_linux", "produces": ["Report"], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["SelinuxPermissiveDecision"]}, {"files": [], "tests": [], "description": "\n    Collect messages about leftover el7 packages and generate report for users.\n\n    Depending on execution of previous actors, generated report contains information that there are still el7 packages\n    present on the system, which makes it unsupported or lists packages that have been removed.\n    ", "apis": [], "class_name": "ReportLeftoverPackages", "path": "actors/reportleftoverpackages", "tools": [], "dialogs": [], "name": "report_leftover_packages", "produces": ["Report"], "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["LeftoverPackages", "RemovedPackages"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if dosfstools is installed. If yes, write information about non-compatible changes.\n    ", "apis": [], "class_name": "CheckDosfstools", "path": "actors/checkdosfstools", "tools": [], "dialogs": [], "name": "checkdosfstools", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Produces list of repositories that should be available to be used by Upgrade process.\n\n    Based on current set of Red Hat Enterprise Linux repositories, produces the list of target\n    repositories. Additionaly process request to use custom repositories during the upgrade\n    transaction.\n    ", "apis": [], "class_name": "SetupTargetRepos", "path": "actors/setuptargetrepos", "tools": [], "dialogs": [], "name": "setuptargetrepos", "produces": ["SkippedRepositories", "TargetRepositories"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": [], "consumes": ["RepositoriesBlacklisted", "CustomTargetRepository", "RepositoriesFacts", "UsedRepositories", "RepositoriesSetupTasks", "RepositoriesMap"]}, {"files": [], "tests": ["tests"], "description": "\n    Check grub configuration for syntax error in GRUB_CMDLINE_LINUX value.\n    ", "apis": [], "class_name": "DetectGrubConfigError", "path": "actors/detectgrubconfigerror", "tools": [], "dialogs": [], "name": "detect_grub_config_error", "produces": ["Report", "GrubConfigError"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    If SAP HANA has been detected, several checks are performed to ensure a successful upgrade.\n\n    If the upgrade flavour is 'default' no checks are being executed.\n\n    The following checks are executed:\n    - If this system is _NOT_ running on x86_64, the upgrade is inhibited.\n    - If SAP HANA 1 has been detected on the system the upgrade is inhibited since it is not supported on RHEL8.\n    - If SAP HANA 2 has been detected, the upgrade will be inhibited if an unsupported version for the target release\n      has been detected.\n    - If SAP HANA is running the upgrade is inhibited.\n    ", "apis": [], "class_name": "CheckSapHana", "path": "actors/checksaphana", "tools": [], "dialogs": [], "name": "check_sap_hana", "produces": ["Report"], "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "libraries": ["libraries"], "consumes": ["SapHanaInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    OpenSSH no longer allows root logins with password.\n\n    Check the values of PermitRootLogin in OpenSSH server configuration file\n    and warn about potential issues after update.\n    ", "apis": [], "class_name": "OpenSshPermitRootLoginCheck", "path": "actors/opensshpermitrootlogincheck", "tools": [], "dialogs": [], "name": "openssh_permit_root_login", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["OpenSshConfig"]}, {"files": [], "tests": ["tests"], "description": "\n    Reads multipath configuration files (multipath.conf, and any files in\n    the multipath config directory) and extracts the necessary information\n    ", "apis": [], "class_name": "MultipathConfRead", "path": "actors/multipathconfread", "tools": [], "dialogs": [], "name": "multipath_conf_read", "produces": ["MultipathConfFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if any encrypted partitions is in use. If yes, inhibit the upgrade process.\n\n    Upgrading system with encrypted partition is not supported.\n    ", "apis": [], "class_name": "InhibitWhenLuks", "path": "actors/inhibitwhenluks", "tools": [], "dialogs": [], "name": "check_luks_and_inhibit", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["StorageInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Gathers information related to SAP HANA instances on the system.\n\n    This actor collects information from SAP HANA installations and produces a message containing the details.\n    The actor will determine whether SAP HANA is installed, running and which version is present on the system.\n    ", "apis": [], "class_name": "ScanSapHana", "path": "actors/scansaphana", "tools": [], "dialogs": [], "name": "scan_sap_hana", "produces": ["SapHanaInfo"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Inhibits on s390 when /boot is NOT on a separate partition.\n\n    Due to some problems, if /boot is not on a separate partition, leapp is deleting the content of /boot.\n    To avoid this from happening, we are inhibiting the upgrade process until this problem has been solved.\n    ", "apis": [], "class_name": "CheckNonMountBootS390", "path": "actors/checknonmountboots390", "tools": [], "dialogs": [], "name": "check_non_mount_boot_s390", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Scan for the version of the newly installed kernel\n\n    This actor will query rpm for all kernel packages and reports the first\n    matching el8 kernel RPM. In case the RHEL Real Time has been detected on\n    the original system, the kernel-rt rpm is searched. If the rpm is missing,\n    fallback for standard kernel RPM.\n    ", "apis": [], "class_name": "ScanInstalledTargetKernelVersion", "path": "actors/scaninstalledtargetkernelversion", "tools": [], "dialogs": [], "name": "scan_installed_target_kernel_version", "produces": ["InstalledTargetKernelVersion"], "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["TransactionCompleted"]}, {"files": [], "tests": ["tests"], "description": "\n    Append extra arguments to RHEL-8 kernel command line\n    ", "apis": [], "class_name": "KernelCmdlineConfig", "path": "actors/kernelcmdlineconfig", "tools": [], "dialogs": [], "name": "kernelcmdlineconfig", "produces": [], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledTargetKernelVersion", "FirmwareFacts", "KernelCmdlineArg"]}, {"files": [], "tests": ["tests"], "description": "\n    Provides data about installed RPM Packages.\n\n    After collecting data from RPM query, a message with relevant data will be produced.\n    ", "apis": [], "class_name": "RpmScanner", "path": "actors/rpmscanner", "tools": [], "dialogs": [], "name": "rpm_scanner", "produces": ["InstalledRPM"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": [], "description": "\n    This actor tries to solve the RPM transaction to verify the all package dependencies can be successfully resolved.\n    ", "apis": [], "class_name": "DnfTransactionCheck", "path": "actors/dnftransactioncheck", "tools": [], "dialogs": [], "name": "dnf_transaction_check", "produces": [], "tags": ["IPUWorkflowTag", "TargetTransactionChecksPhaseTag"], "libraries": [], "consumes": ["DNFPluginTask", "TargetUserSpaceInfo", "FilteredRpmTransactionTasks", "XFSPresence", "StorageInfo", "UsedTargetRepositories"]}, {"files": [], "tests": ["tests"], "description": "\n    Check SELinux status and produce decision messages for further action.\n\n    Based on SELinux status produces decision messages to relabeling and changing status if\n    necessary\n    ", "apis": [], "class_name": "CheckSelinux", "path": "actors/checkselinux", "tools": [], "dialogs": [], "name": "check_se_linux", "produces": ["SelinuxRelabelDecision", "Report", "SelinuxPermissiveDecision"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["SELinuxFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Remove Leapp provided initramfs from boot partition.\n\n    Since Leapp provided initramfs and kernel are already loaded into RAM at this phase, remove\n    them to have as little space requirements for boot partition as possible.\n    ", "apis": [], "class_name": "RemoveBootFiles", "path": "actors/removebootfiles", "tools": [], "dialogs": [], "name": "remove_boot_files", "produces": [], "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "libraries": ["libraries"], "consumes": ["BootContent"]}, {"files": [], "tests": ["tests"], "description": "\n    Enable biosdevname on RHEL8 if all interfaces on RHEL7 use biosdevname naming scheme and if machine vendor is DELL\n    ", "apis": [], "class_name": "Biosdevname", "path": "actors/biosdevname", "tools": [], "dialogs": [], "name": "biosdevname", "produces": ["KernelCmdlineArg"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["PersistentNetNamesFacts"]}, {"files": [], "tests": ["tests"], "description": "\n    Migrate brltty configuration files.\n    ", "apis": [], "class_name": "MigrateBrltty", "path": "actors/migratebrltty", "tools": [], "dialogs": [], "name": "migrate_brltty", "produces": ["Report"], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["BrlttyMigrationDecision"]}, {"files": [], "tests": [], "description": "\n    Adjust EFI boot entry for first reboot\n    ", "apis": [], "class_name": "EfiCheckBoot", "path": "actors/efibootorderfix", "tools": [], "dialogs": [], "name": "efi_check_boot", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["FirmwareFacts"]}, {"files": [], "tests": [], "description": "\n    Adjust EFI boot entry for first reboot\n    ", "apis": [], "class_name": "EfiInterimFix", "path": "actors/efibootorderfix/interim", "tools": [], "dialogs": [], "name": "efi_interim_fix", "produces": [], "tags": ["InterimPreparationPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": [], "description": "\n    Adjust EFI boot entry for final reboot\n    ", "apis": [], "class_name": "EfiFinalizationFix", "path": "actors/efibootorderfix/finalization", "tools": [], "dialogs": [], "name": "efi_finalization_fix", "produces": [], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Provide data about firewalld\n\n    After collecting data, a message with relevant data will be produced.\n    ", "apis": [], "class_name": "FirewalldFactsActor", "path": "actors/firewalldfactsactor", "tools": [], "dialogs": [], "name": "firewalld_facts_actor", "produces": ["FirewalldFacts"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Protocol configuration option was removed.\n\n    Check the value of Protocol in OpenSSH server config file\n    and warn about its deprecation if it is set. This option was removed\n    in RHEL 7.4, but it might still be hanging around.\n    ", "apis": [], "class_name": "OpenSshProtocolCheck", "path": "actors/opensshprotocolcheck", "tools": [], "dialogs": [], "name": "open_ssh_protocol", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["OpenSshConfig"]}, {"files": [], "tests": ["tests"], "description": "\n    Scan system for ipa-client and ipa-server status\n    ", "apis": [], "class_name": "IpaScanner", "path": "actors/ipascanner", "tools": [], "dialogs": [], "name": "ipa_scanner", "produces": ["IpaInfo"], "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["InstalledRedHatSignedRPM"]}, {"files": [], "tests": ["tests"], "description": "\n    Check if NFS filesystem is in use. If yes, inhibit the upgrade process.\n\n    Actor looks for NFS in the following sources: /ets/fstab, mount and systemd-mount.\n    If there is NFS in any of the mentioned sources, actors inhibits the upgrade.\n    ", "apis": [], "class_name": "CheckNfs", "path": "actors/checknfs", "tools": [], "dialogs": [], "name": "check_nfs", "produces": ["Report"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["StorageInfo"]}, {"files": [], "tests": ["tests"], "description": "\n    Handle migration of the yum configuration files.\n\n    RPM cannot handle replacement of directories by symlinks by default\n    without the %pretrans scriptlet. As yum package is packaged wrong,\n    we have to workround that by migration of the yum configuration files\n    before the rpm transaction is processed.\n    ", "apis": [], "class_name": "Prepareyumconfig", "path": "actors/prepareyumconfig", "tools": [], "dialogs": [], "name": "prepareyumconfig", "produces": [], "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "\n    Parses collected SCTP information and take necessary actions.\n\n    The only action performed by this actor is to request the installation of the\n    kernel-modules-extra rpm package, based on if SCTP is being used or not which\n    is collected on SCTPConfig message. If yes, it then produces a RpmTransactionTasks\n    requesting to install the package.\n    ", "apis": [], "class_name": "SCTPChecks", "path": "actors/sctpchecks", "tools": [], "dialogs": [], "name": "sctp_checks", "produces": ["RpmTransactionTasks"], "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": ["SCTPConfig"]}, {"files": [], "tests": ["tests"], "description": "\n    Provides data about existing PCI Devices.\n\n    After collecting data from lspci, a message with relevant data will be produced.\n    ", "apis": [], "class_name": "PCIDevicesScanner", "path": "actors/pcidevicesscanner", "tools": [], "dialogs": [], "name": "pci_devices_scanner", "produces": ["PCIDevices"], "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "libraries": ["libraries"], "consumes": []}, {"files": ["files"], "tests": ["tests"], "description": "\n    Add a systemd service to launch Leapp.\n\n    Create a systemd service which will resume Leapp upgrade after the first reboot.\n    ", "apis": [], "class_name": "CreateSystemdResumeService", "path": "actors/createresumeservice", "tools": [], "dialogs": [], "name": "create_systemd_service", "produces": ["Report"], "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "libraries": [], "consumes": []}, {"files": [], "tests": ["tests"], "description": "This actor updates SCTP configuration for RHEL8.", "apis": [], "class_name": "SCTPConfigUpdate", "path": "actors/sctpconfigupdate", "tools": [], "dialogs": [], "name": "sctp_config_update", "produces": [], "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "libraries": ["libraries"], "consumes": ["SCTPConfig"]}], "libraries": [{"path": "libraries"}], "apis": [], "models": [{"class_name": "KernelModuleParameter", "fields": {"name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "value": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "ActiveKernelModule", "fields": {"signature": {"class_name": "String", "default": null, "help": null, "nullable": true}, "parameters": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "KernelModuleParameter", "help": null, "nullable": false}}, "filename": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "ActiveKernelModulesFacts", "fields": {"kernel_modules": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "ActiveKernelModule", "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "Authselect", "fields": {"profile": {"class_name": "String", "default": null, "help": null, "nullable": true}, "features": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "confirm": {"class_name": "Boolean", "default": true, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "AuthselectDecision", "fields": {"confirmed": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "BootContent", "fields": {"initram_path": {"class_name": "String", "default": null, "help": "Filepath of the initramfs copied to /boot/ by Leapp.", "nullable": false}, "kernel_path": {"class_name": "String", "default": null, "help": "Filepath of the kernel copied to /boot/ by Leapp.", "nullable": false}}, "topic": "BootPrepTopic"}, {"class_name": "BrlttyMigrationDecision", "fields": {"migrate_espeak": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "migrate_bt": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "migrate_file": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "CPUInfo", "fields": {"machine_type": {"class_name": "Integer", "default": null, "help": null, "nullable": true}}, "topic": "SystemFactsTopic"}, {"class_name": "DNFPluginTask", "fields": {"disable_in": {"default": ["check", "download", "upgrade"], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "UpgradeDracutModule", "fields": {"module_path": {"class_name": "String", "default": null, "help": null, "nullable": true}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "BootPrepTopic"}, {"class_name": "FirewalldFacts", "fields": {"ipsetTypesInUse": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "ebtablesTablesInUse": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "firewall_config_command": {"class_name": "String", "default": "", "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "FirewallStatus", "fields": {"active": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "enabled": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "FirewallsFacts", "fields": {"iptables": {"class_name": "Model", "default": null, "model": "FirewallStatus", "help": null, "nullable": false}, "firewalld": {"class_name": "Model", "default": null, "model": "FirewallStatus", "help": null, "nullable": false}, "ip6tables": {"class_name": "Model", "default": null, "model": "FirewallStatus", "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "FirmwareFacts", "fields": {"firmware": {"class_name": "StringEnum", "default": null, "choices": ["bios", "efi"], "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "Group", "fields": {"gid": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "members": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "GroupsFacts", "fields": {"groups": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "Group", "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "GrubConfigError", "fields": {"error_detected": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "GrubDevice", "fields": {"grub_device": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "UpdateGrub", "fields": {"grub_device": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "HybridImage", "fields": {"detected": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "InitrdIncludes", "fields": {"files": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledDesktopsFacts", "fields": {"kde_installed": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "gnome_installed": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "InstalledKdeAppsFacts", "fields": {"installed_apps": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "CurrentKernel", "fields": {"release": {"class_name": "String", "default": null, "help": null, "nullable": false}, "version": {"class_name": "String", "default": null, "help": null, "nullable": false}, "arch": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "RPM", "fields": {"name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "repository": {"class_name": "String", "default": null, "help": null, "nullable": true}, "epoch": {"class_name": "String", "default": null, "help": null, "nullable": false}, "version": {"class_name": "String", "default": null, "help": null, "nullable": false}, "pgpsig": {"class_name": "String", "default": null, "help": null, "nullable": false}, "release": {"class_name": "String", "default": null, "help": null, "nullable": false}, "packager": {"class_name": "String", "default": null, "help": null, "nullable": false}, "arch": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledRPM", "fields": {"items": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RPM", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledTargetKernelVersion", "fields": {"version": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "IpaInfo", "fields": {"has_client_package": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "is_server_configured": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "has_server_package": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "is_client_configured": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "EnvVar", "fields": {"name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "value": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "OSRelease", "fields": {"release_id": {"class_name": "String", "default": null, "help": null, "nullable": false}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "variant": {"class_name": "String", "default": null, "help": null, "nullable": true}, "version_id": {"class_name": "String", "default": null, "help": null, "nullable": false}, "pretty_name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "version": {"class_name": "String", "default": null, "help": null, "nullable": false}, "variant_id": {"class_name": "String", "default": null, "help": null, "nullable": true}}, "topic": "SystemInfoTopic"}, {"class_name": "Version", "fields": {"source": {"class_name": "String", "default": null, "help": null, "nullable": false}, "target": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "IPUConfig", "fields": {"kernel": {"class_name": "String", "default": null, "help": null, "nullable": false}, "flavour": {"class_name": "StringEnum", "default": "default", "choices": ["default", "saphana"], "help": null, "nullable": false}, "leapp_env_vars": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "EnvVar", "help": null, "nullable": false}}, "version": {"class_name": "Model", "default": null, "model": "Version", "help": null, "nullable": false}, "architecture": {"class_name": "String", "default": null, "help": null, "nullable": false}, "os_release": {"class_name": "Model", "default": null, "model": "OSRelease", "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "KernelCmdlineArg", "fields": {"value": {"class_name": "String", "default": null, "help": null, "nullable": true}, "key": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "KernelCmdline", "fields": {"parameters": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "KernelCmdlineArg", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "LeftoverPackages", "fields": {"items": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RPM", "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "MemoryInfo", "fields": {"mem_total": {"class_name": "Integer", "default": null, "help": null, "nullable": true}}, "topic": "SystemFactsTopic"}, {"class_name": "MultipathConfigOption", "fields": {"name": {"class_name": "String", "default": "", "help": null, "nullable": false}, "value": {"class_name": "String", "default": "", "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "MultipathConfig", "fields": {"overrides_hwhandler_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "new_bindings_in_boot_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "reassign_maps": {"class_name": "Boolean", "default": null, "help": null, "nullable": true}, "unpriv_sgio_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "ignore_new_boot_devs_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "default_detect_prio": {"class_name": "Boolean", "default": null, "help": null, "nullable": true}, "all_devs_section_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "hw_str_match_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "detect_path_checker_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "default_path_checker": {"class_name": "String", "default": null, "help": null, "nullable": true}, "pathname": {"class_name": "String", "default": null, "help": null, "nullable": false}, "default_retain_hwhandler": {"class_name": "Boolean", "default": null, "help": null, "nullable": true}, "all_devs_options": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "MultipathConfigOption", "help": null, "nullable": false}}, "queue_if_no_path_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "overrides_pg_timeout_exists": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "config_dir": {"class_name": "String", "default": null, "help": null, "nullable": true}, "default_detect_checker": {"class_name": "Boolean", "default": null, "help": null, "nullable": true}}, "topic": "SystemInfoTopic"}, {"class_name": "MultipathConfFacts", "fields": {"configs": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "MultipathConfig", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "NetworkManagerConfig", "fields": {"dhcp": {"class_name": "String", "default": "", "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "NtpMigrationDecision", "fields": {"config_tgz64": {"class_name": "String", "default": null, "help": null, "nullable": false}, "migrate_services": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "OpenSshPermitRootLogin", "fields": {"in_match": {"default": null, "minimum": 0, "help": null, "nullable": true, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "value": {"class_name": "StringEnum", "default": null, "choices": ["yes", "prohibit-password", "forced-commands-only", "no"], "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "OpenSshConfig", "fields": {"protocol": {"class_name": "String", "default": null, "help": null, "nullable": true}, "ciphers": {"class_name": "String", "default": null, "help": null, "nullable": true}, "use_privilege_separation": {"class_name": "StringEnum", "default": null, "choices": ["sandbox", "yes", "no"], "help": null, "nullable": true}, "modified": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "permit_root_login": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "OpenSshPermitRootLogin", "help": null, "nullable": false}}, "macs": {"class_name": "String", "default": null, "help": null, "nullable": true}}, "topic": "SystemInfoTopic"}, {"class_name": "PamService", "fields": {"modules": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "service": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "PamConfiguration", "fields": {"services": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "PamService", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "PCIDevice", "fields": {"slot": {"class_name": "String", "default": null, "help": null, "nullable": false}, "physical_slot": {"class_name": "String", "default": null, "help": null, "nullable": true}, "vendor": {"class_name": "String", "default": null, "help": null, "nullable": false}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "numa_node": {"class_name": "String", "default": null, "help": null, "nullable": true}, "rev": {"class_name": "String", "default": null, "help": null, "nullable": true}, "modules": {"default": null, "minimum": 0, "help": null, "nullable": true, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "pci_id": {"class_name": "String", "default": null, "help": null, "nullable": false}, "dev_cls": {"class_name": "String", "default": null, "help": null, "nullable": false}, "progif": {"class_name": "String", "default": null, "help": null, "nullable": true}, "subsystem_name": {"class_name": "String", "default": null, "help": null, "nullable": true}, "driver": {"class_name": "String", "default": null, "help": null, "nullable": true}, "subsystem_vendor": {"class_name": "String", "default": null, "help": null, "nullable": true}}, "topic": "SystemInfoTopic"}, {"class_name": "PCIDevices", "fields": {"devices": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "PCIDevice", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "RestrictedPCIDevice", "fields": {"supported_rhel7": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "comment": {"class_name": "String", "default": null, "help": null, "nullable": true}, "available_rhel7": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "available_rhel8": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "available_rhel9": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "pci_id": {"class_name": "String", "default": null, "help": null, "nullable": true}, "device_name": {"class_name": "String", "default": null, "help": null, "nullable": true}, "driver_name": {"class_name": "String", "default": null, "help": null, "nullable": true}, "supported_rhel9": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "supported_rhel8": {"class_name": "Integer", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "RestrictedPCIDevices", "fields": {"pci_ids": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RestrictedPCIDevice", "help": null, "nullable": false}}, "driver_names": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RestrictedPCIDevice", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "PCIAddress", "fields": {"function": {"class_name": "String", "default": null, "help": null, "nullable": false}, "bus": {"class_name": "String", "default": null, "help": null, "nullable": false}, "domain": {"class_name": "String", "default": null, "help": null, "nullable": false}, "device": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "Interface", "fields": {"vendor": {"class_name": "String", "default": null, "help": null, "nullable": false}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "devpath": {"class_name": "String", "default": null, "help": null, "nullable": false}, "pci_info": {"class_name": "Model", "default": null, "model": "PCIAddress", "help": null, "nullable": false}, "driver": {"class_name": "String", "default": null, "help": null, "nullable": false}, "mac": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "PersistentNetNamesFacts", "fields": {"interfaces": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "Interface", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "RenamedInterface", "fields": {"rhel8_name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "rhel7_name": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "RenamedInterfaces", "fields": {"renamed": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RenamedInterface", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "QuaggaToFrrFacts", "fields": {"enabled_daemons": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "active_daemons": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "RemovedPAMModules", "fields": {"modules": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoriesBlacklisted", "fields": {"repoids": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoryData", "fields": {"additional_fields": {"class_name": "String", "default": null, "help": null, "nullable": true}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "metalink": {"class_name": "String", "default": null, "help": null, "nullable": true}, "enabled": {"class_name": "Boolean", "default": true, "help": null, "nullable": false}, "baseurl": {"class_name": "String", "default": null, "help": null, "nullable": true}, "mirrorlist": {"class_name": "String", "default": null, "help": null, "nullable": true}, "repoid": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoryFile", "fields": {"data": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RepositoryData", "help": null, "nullable": false}}, "file": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoriesFacts", "fields": {"repositories": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RepositoryFile", "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoryMap", "fields": {"to_repoid": {"class_name": "String", "default": null, "help": null, "nullable": false}, "to_pes_repo": {"class_name": "String", "default": null, "help": null, "nullable": false}, "from_repoid": {"class_name": "String", "default": null, "help": null, "nullable": false}, "repo_type": {"class_name": "StringEnum", "default": null, "choices": ["rpm", "srpm", "debuginfo"], "help": null, "nullable": false}, "to_minor_version": {"class_name": "String", "default": null, "help": null, "nullable": false}, "from_minor_version": {"class_name": "String", "default": null, "help": null, "nullable": false}, "arch": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "TransactionTopic"}, {"class_name": "RepositoriesMap", "fields": {"repositories": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RepositoryMap", "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "RepositoriesSetupTasks", "fields": {"to_enable": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "RequiredTargetUserspacePackages", "fields": {"packages": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "TargetUserspaceTopic"}, {"class_name": "RequiredUpgradeInitramPackages", "fields": {"packages": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "BootPrepTopic"}, {"class_name": "RHSMInfo", "fields": {"attached_skus": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "available_repos": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "existing_product_certificates": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "enabled_repos": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "sca_detected": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "release": {"class_name": "String", "default": null, "help": null, "nullable": true}}, "topic": "RHSMTopic"}, {"class_name": "RHUIInfo", "fields": {"provider": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "RootSubdirectory", "fields": {"target": {"class_name": "String", "default": null, "help": null, "nullable": true}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "RootDirectory", "fields": {"items": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RootSubdirectory", "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "RpmTransactionTasks", "fields": {"local_rpms": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_install": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_keep": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_remove": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_upgrade": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "SapHanaManifestEntry", "fields": {"value": {"class_name": "String", "default": null, "help": null, "nullable": false}, "key": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SapHanaInstanceInfo", "fields": {"name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "admin": {"class_name": "String", "default": null, "help": null, "nullable": false}, "manifest": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "SapHanaManifestEntry", "help": null, "nullable": false}}, "instance_number": {"class_name": "String", "default": null, "help": null, "nullable": false}, "running": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "path": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SapHanaInfo", "fields": {"instances": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "SapHanaInstanceInfo", "help": null, "nullable": false}}, "running": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "installed": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SCTPConfig", "fields": {"wanted": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}}, "topic": "SCTPConfigTopic"}, {"class_name": "SELinuxModule", "fields": {"priority": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "content": {"class_name": "String", "default": null, "help": null, "nullable": false}, "removed": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxModules", "fields": {"modules": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "SELinuxModule", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxCustom", "fields": {"commands": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "removed": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxRequestRPMs", "fields": {"to_install": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_keep": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "SelinuxRelabelDecision", "fields": {"set_relabel": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SelinuxPermissiveDecision", "fields": {"set_permissive": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxFacts", "fields": {"policy": {"class_name": "StringEnum", "default": null, "choices": ["targeted", "minimum", "mls"], "help": null, "nullable": false}, "mls_enabled": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "enabled": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "runtime_mode": {"class_name": "StringEnum", "default": null, "choices": ["enforcing", "permissive"], "help": null, "nullable": true}, "static_mode": {"class_name": "StringEnum", "default": null, "choices": ["enforcing", "permissive", "disabled"], "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "SendmailMigrationDecision", "fields": {"migrate_files": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "SkippedRepositories", "fields": {"repos": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "packages": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "SpamassassinFacts", "fields": {"service_overriden": {"class_name": "Boolean", "default": null, "help": null, "nullable": false}, "spamd_ssl_version": {"class_name": "String", "default": null, "help": null, "nullable": true}, "spamc_ssl_argument": {"class_name": "String", "default": null, "help": null, "nullable": true}}, "topic": "SystemInfoTopic"}, {"class_name": "SSSDDomainConfig", "fields": {"options": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SSSDConfig", "fields": {"domains": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "SSSDDomainConfig", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "PartitionEntry", "fields": {"major": {"class_name": "String", "default": null, "help": null, "nullable": false}, "blocks": {"class_name": "String", "default": null, "help": null, "nullable": false}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "minor": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "FstabEntry", "fields": {"fs_mntops": {"class_name": "String", "default": null, "help": null, "nullable": false}, "fs_file": {"class_name": "String", "default": null, "help": null, "nullable": false}, "fs_freq": {"class_name": "String", "default": null, "help": null, "nullable": false}, "fs_passno": {"class_name": "String", "default": null, "help": null, "nullable": false}, "fs_vfstype": {"class_name": "String", "default": null, "help": null, "nullable": false}, "fs_spec": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "MountEntry", "fields": {"mount": {"class_name": "String", "default": null, "help": null, "nullable": false}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "tp": {"class_name": "String", "default": null, "help": null, "nullable": false}, "options": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "LsblkEntry", "fields": {"name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "tp": {"class_name": "String", "default": null, "help": null, "nullable": false}, "mountpoint": {"class_name": "String", "default": null, "help": null, "nullable": false}, "rm": {"class_name": "String", "default": null, "help": null, "nullable": false}, "maj_min": {"class_name": "String", "default": null, "help": null, "nullable": false}, "ro": {"class_name": "String", "default": null, "help": null, "nullable": false}, "size": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "PvsEntry", "fields": {"pv": {"class_name": "String", "default": null, "help": null, "nullable": false}, "attr": {"class_name": "String", "default": null, "help": null, "nullable": false}, "vg": {"class_name": "String", "default": null, "help": null, "nullable": false}, "fmt": {"class_name": "String", "default": null, "help": null, "nullable": false}, "psize": {"class_name": "String", "default": null, "help": null, "nullable": false}, "pfree": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "VgsEntry", "fields": {"pv": {"class_name": "String", "default": null, "help": null, "nullable": false}, "attr": {"class_name": "String", "default": null, "help": null, "nullable": false}, "vg": {"class_name": "String", "default": null, "help": null, "nullable": false}, "lv": {"class_name": "String", "default": null, "help": null, "nullable": false}, "sn": {"class_name": "String", "default": null, "help": null, "nullable": false}, "vsize": {"class_name": "String", "default": null, "help": null, "nullable": false}, "vfree": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "LvdisplayEntry", "fields": {"origin": {"class_name": "String", "default": null, "help": null, "nullable": false}, "convert": {"class_name": "String", "default": null, "help": null, "nullable": false}, "attr": {"class_name": "String", "default": null, "help": null, "nullable": false}, "vg": {"class_name": "String", "default": null, "help": null, "nullable": false}, "move": {"class_name": "String", "default": null, "help": null, "nullable": false}, "cpy_sync": {"class_name": "String", "default": null, "help": null, "nullable": false}, "lv": {"class_name": "String", "default": null, "help": null, "nullable": false}, "meta": {"class_name": "String", "default": null, "help": null, "nullable": false}, "lsize": {"class_name": "String", "default": null, "help": null, "nullable": false}, "data": {"class_name": "String", "default": null, "help": null, "nullable": false}, "pool": {"class_name": "String", "default": null, "help": null, "nullable": false}, "log": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "SystemdMountEntry", "fields": {"node": {"class_name": "String", "default": null, "help": null, "nullable": false}, "uuid": {"class_name": "String", "default": null, "help": null, "nullable": false}, "label": {"class_name": "String", "default": null, "help": null, "nullable": false}, "fs_type": {"class_name": "String", "default": null, "help": null, "nullable": false}, "path": {"class_name": "String", "default": null, "help": null, "nullable": false}, "model": {"class_name": "String", "default": null, "help": null, "nullable": false}, "wwn": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "StorageInfo", "fields": {"pvs": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "PvsEntry", "help": null, "nullable": false}}, "lvdisplay": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "LvdisplayEntry", "help": null, "nullable": false}}, "lsblk": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "LsblkEntry", "help": null, "nullable": false}}, "mount": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "MountEntry", "help": null, "nullable": false}}, "fstab": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "FstabEntry", "help": null, "nullable": false}}, "systemdmount": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "SystemdMountEntry", "help": null, "nullable": false}}, "vgs": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "VgsEntry", "help": null, "nullable": false}}, "partitions": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "PartitionEntry", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "SysctlVariable", "fields": {"name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "value": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "SysctlVariablesFacts", "fields": {"sysctl_variables": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "SysctlVariable", "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "TargetRepositoryBase", "fields": {"repoid": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "TransactionTopic"}, {"class_name": "TargetRepositories", "fields": {"rhel_repos": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RHELTargetRepository", "help": null, "nullable": false}}, "custom_repos": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "CustomTargetRepository", "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "UsedTargetRepositories", "fields": {"repos": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "UsedTargetRepository", "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "CustomTargetRepositoryFile", "fields": {"file": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "TransactionTopic"}, {"class_name": "TargetUserSpaceInfo", "fields": {"mounts": {"class_name": "String", "default": null, "help": null, "nullable": false}, "path": {"class_name": "String", "default": null, "help": null, "nullable": false}, "scratch": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "TransactionTopic"}, {"class_name": "DaemonList", "fields": {"value": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "TcpWrappersFacts", "fields": {"daemon_lists": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "DaemonList", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "TransactionCompleted", "fields": {}, "topic": "TransactionTopic"}, {"class_name": "UdevAdmInfoData", "fields": {"db": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "UsedRepository", "fields": {"packages": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "repository": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "UsedRepositories", "fields": {"repositories": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "UsedRepository", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "User", "fields": {"home": {"class_name": "String", "default": null, "help": null, "nullable": false}, "gid": {"class_name": "Integer", "default": null, "help": null, "nullable": false}, "name": {"class_name": "String", "default": null, "help": null, "nullable": false}, "uid": {"class_name": "Integer", "default": null, "help": null, "nullable": false}}, "topic": "SystemFactsTopic"}, {"class_name": "UsersFacts", "fields": {"users": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "User", "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "VsftpdConfig", "fields": {"path": {"class_name": "String", "default": null, "help": null, "nullable": false}, "tcp_wrappers": {"class_name": "Boolean", "default": null, "help": null, "nullable": true}, "strict_ssl_read_eof": {"class_name": "Boolean", "default": null, "help": null, "nullable": true}}, "topic": "SystemInfoTopic"}, {"class_name": "VsftpdFacts", "fields": {"default_config_hash": {"class_name": "String", "default": null, "help": null, "nullable": true}, "configs": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "VsftpdConfig", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "XFSPresence", "fields": {"mountpoints_without_ftype": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "without_ftype": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}, "present": {"class_name": "Boolean", "default": false, "help": null, "nullable": false}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledRedHatSignedRPM", "fields": {"items": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RPM", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledUnsignedRPM", "fields": {"items": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RPM", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "RemovedPackages", "fields": {"items": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RPM", "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "PersistentNetNamesFactsInitramfs", "fields": {"interfaces": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "Interface", "help": null, "nullable": false}}}, "topic": "SystemInfoTopic"}, {"class_name": "TMPTargetRepositoriesFacts", "fields": {"repositories": {"default": null, "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "Model", "default": null, "model": "RepositoryFile", "help": null, "nullable": false}}}, "topic": "SystemFactsTopic"}, {"class_name": "FilteredRpmTransactionTasks", "fields": {"local_rpms": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_install": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_keep": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_remove": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_upgrade": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "PESRpmTransactionTasks", "fields": {"local_rpms": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_install": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_keep": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_remove": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "to_upgrade": {"default": [], "minimum": 0, "help": null, "nullable": false, "class_name": "List", "maximum": null, "element": {"class_name": "String", "default": null, "help": null, "nullable": false}}}, "topic": "TransactionTopic"}, {"class_name": "UsedTargetRepository", "fields": {"repoid": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "TransactionTopic"}, {"class_name": "RHELTargetRepository", "fields": {"repoid": {"class_name": "String", "default": null, "help": null, "nullable": false}}, "topic": "TransactionTopic"}, {"class_name": "CustomTargetRepository", "fields": {"enabled": {"class_name": "Boolean", "default": true, "help": null, "nullable": false}, "repoid": {"class_name": "String", "default": null, "help": null, "nullable": false}, "baseurl": {"class_name": "String", "default": null, "help": null, "nullable": true}, "name": {"class_name": "String", "default": null, "help": null, "nullable": true}}, "topic": "TransactionTopic"}], "workflows": [{"phases": [{"index": 3, "name": "FactsCollection", "class_name": "FactsCollectionPhase", "filter": {"phase": "FactsPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 4, "name": "Checks", "class_name": "ChecksPhase", "filter": {"phase": "ChecksPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 5, "name": "TargetTransactionFactsCollection", "class_name": "TargetTransactionFactsCollectionPhase", "filter": {"phase": "TargetTransactionFactsPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 6, "name": "TargetTransactionCheck", "class_name": "TargetTransactionChecksPhase", "filter": {"phase": "TargetTransactionChecksPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 7, "name": "Reports", "class_name": "ReportsPhase", "filter": {"phase": "ReportPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 8, "name": "Download", "class_name": "DownloadPhase", "filter": {"phase": "DownloadPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 9, "name": "InterimPreparation", "class_name": "InterimPreparationPhase", "filter": {"phase": "InterimPreparationPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": true}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 10, "name": "InitRamStart", "class_name": "InitRamStartPhase", "filter": {"phase": "InitRamStartPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 11, "name": "LateTests", "class_name": "LateTestsPhase", "filter": {"phase": "LateTestsPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 12, "name": "Preparation", "class_name": "PreparationPhase", "filter": {"phase": "PreparationPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 13, "name": "RPMUpgrade", "class_name": "RPMUpgradePhase", "filter": {"phase": "RPMUpgradePhaseTag", "tags": []}, "flags": {"is_checkpoint": true, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 14, "name": "Applications", "class_name": "ApplicationsPhase", "filter": {"phase": "ApplicationsPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 15, "name": "ThirdPartyApplications", "class_name": "ThirdPartyApplicationsPhase", "filter": {"phase": "ThirdPartyApplicationsPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 16, "name": "Finalization", "class_name": "FinalizationPhase", "filter": {"phase": "FinalizationPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": true, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}, {"index": 17, "name": "FirstBoot", "class_name": "FirstBootPhase", "filter": {"phase": "FirstBootPhaseTag", "tags": []}, "flags": {"is_checkpoint": false, "restart_after_phase": false, "request_restart_after_phase": false}, "policies": {"retry": "Phase", "error": "FailPhase"}}], "tag": "IPUWorkflowTag", "name": "InplaceUpgrade", "short_name": "ipu", "description": "The IPU workflow takes care of an in-place upgrade (IPU) of RHEL 7 to RHEL 8."}], "topics": [{"class_name": "BootPrepTopic", "messages": ["BootContent", "UpgradeDracutModule", "RequiredUpgradeInitramPackages"], "name": "boot_prep"}, {"class_name": "RHSMTopic", "messages": ["RHSMInfo"], "name": "rhsm"}, {"class_name": "SCTPConfigTopic", "messages": ["SCTPConfig"], "name": "sctp_config_topic"}, {"class_name": "SystemFactsTopic", "messages": ["RepositoriesBlacklisted", "FirewallStatus", "RepositoryFile", "UsersFacts", "FirmwareFacts", "UpdateGrub", "RootDirectory", "SysctlVariablesFacts", "RepositoryData", "InstalledDesktopsFacts", "RepositoriesFacts", "Group", "User", "GrubDevice", "GrubConfigError", "KernelModuleParameter", "RemovedPAMModules", "Authselect", "GroupsFacts", "MemoryInfo", "ActiveKernelModule", "TMPTargetRepositoriesFacts", "RootSubdirectory", "InstalledKdeAppsFacts", "HybridImage", "FirewallsFacts", "IpaInfo", "SELinuxFacts", "ActiveKernelModulesFacts", "RepositoriesSetupTasks", "CPUInfo", "SysctlVariable"], "name": "system_facts"}, {"class_name": "TargetUserspaceTopic", "messages": ["RequiredTargetUserspacePackages"], "name": "target_userspace"}, {"class_name": "TransactionTopic", "messages": ["LeftoverPackages", "RemovedPackages", "PESRpmTransactionTasks", "RHELTargetRepository", "TargetRepositoryBase", "FilteredRpmTransactionTasks", "UsedTargetRepository", "CustomTargetRepository", "RpmTransactionTasks", "RepositoriesMap", "RepositoryMap", "TransactionCompleted", "TargetRepositories", "SkippedRepositories", "CustomTargetRepositoryFile", "SELinuxRequestRPMs", "TargetUserSpaceInfo", "UsedTargetRepositories"], "name": "transaction"}], "tags": [{"class_name": "ApplicationsPhaseTag", "actors": ["QuaggaToFrr", "PersistentNetNamesConfig", "MigrateSendmail", "SpamassassinConfigUpdate", "NetworkManagerUpdateService", "MigrateNtp", "MultipathConfUpdate", "SanebackendsMigrate", "NetworkManagerUpdateConfig", "SELinuxApplyCustom", "VsftpdConfigUpdate", "AuthselectApply", "CupsfiltersMigrate", "FirewalldUpdateLockdownWhitelist", "VimMigrate", "MigrateBrltty", "SCTPConfigUpdate"], "name": "applications"}, {"class_name": "ChecksPhaseTag", "actors": ["CheckIPAServer", "CheckAcpid", "CheckMemcached", "CheckOSRelease", "CheckBootAvailSpace", "CheckInstalledDevelKernels", "CheckInstalledKernels", "CheckKernelDrivers", "CheckInstalledDebugKernels", "QuaggaReport", "SpamassassinConfigCheck", "PowerTop", "CheckRemovedPamModules", "UnsupportedUpgradeCheck", "CheckFirewalld", "OpenSshAlgorithmsCheck", "CheckNtp", "OpenSshUsePrivilegeSeparationCheck", "CheckCPU", "CheckSendmail", "Checktargetrepos", "TcpWrappersCheck", "CheckKdeGnome", "CheckFips", "MultipathConfCheck", "SSSDCheck", "AuthselectCheck", "CheckGrep", "CheckSystemArch", "CheckRemovedEnvVars", "CheckPostfix", "CheckSkippedRepositories", "Checkhacluster", "CheckSkipPhase", "CheckRootSymlinks", "CheckChrony", "CheckWireshark", "CheckBrltty", "CheckGrubCore", "CheckMemory", "RemoveOldPAMModulesCheck", "CheckBtrfs", "CheckPCIDrivers", "FilterRpmTransactionTasks", "CheckFstabXFSOptions", "VsftpdConfigCheck", "RedHatSignedRpmCheck", "PythonInformUser", "CheckRedHatSubscriptionManagerSKU", "CheckIrssi", "CheckHybridImage", "CheckRHUI", "CheckDosfstools", "DetectGrubConfigError", "CheckSapHana", "OpenSshPermitRootLoginCheck", "InhibitWhenLuks", "CheckNonMountBootS390", "CheckSelinux", "EfiCheckBoot", "OpenSshProtocolCheck", "CheckNfs", "SCTPChecks"], "name": "checks"}, {"class_name": "TargetTransactionChecksPhaseTag", "actors": ["ReportSetTargetRelease", "LocalReposInhibit", "DnfTransactionCheck"], "name": "target_checks"}, {"class_name": "DownloadPhaseTag", "actors": ["DnfPackageDownload"], "name": "download"}, {"class_name": "FactsPhaseTag", "actors": ["ScanSubscriptionManagerInfo", "PersistentNetNamesDisable", "ScanCustomRepofile", "SSSDFacts", "PersistentNetNames", "XFSInfoScanner", "QuaggaDaemons", "RepositoriesBlacklist", "UdevAdmInfo", "RemoveOldPAMModulesScanner", "SCTPConfigRead", "RepositoriesMapping", "RpmTransactionConfigTasksCollector", "TcpWrappersConfigRead", "CommonLeappDracutModules", "RestrictedPCIsScanner", "ScanMemory", "VsftpdConfigRead", "RootScanner", "NetworkManagerReadConfig", "StorageScanner", "TransactionWorkarounds", "SpamassassinConfigRead", "ScanKernelCmdline", "AuthselectScanner", "ScanCLIenablrepo", "SELinuxContentScanner", "Grubdevname", "PesEventsScanner", "UsedRepositoriesScanner", "CheckKdeApps", "OpenSshConfigScanner", "GetInstalledDesktops", "SystemFactsActor", "RedHatSignedRpmScanner", "ScanCPU", "PamModulesScanner", "SetupTargetRepos", "MultipathConfRead", "ScanSapHana", "RpmScanner", "Biosdevname", "FirewalldFactsActor", "IpaScanner", "PCIDevicesScanner"], "name": "facts"}, {"class_name": "TargetTransactionFactsPhaseTag", "actors": ["TargetUserspaceCreator"], "name": "target_transaction_facts"}, {"class_name": "FinalizationPhaseTag", "actors": ["ScheduleSeLinuxRelabeling", "InitrdInclude", "ForceDefaultBootToTargetKernelVersion", "GrubenvToFile", "SetPermissiveSelinux", "KernelCmdlineConfig", "EfiFinalizationFix", "CreateSystemdResumeService"], "name": "finalization"}, {"class_name": "FirstBootPhaseTag", "actors": ["NetworkManagerUpdateConnections", "EnableRHSMReposOnRHEL8"], "name": "first_boot"}, {"class_name": "InitRamStartPhaseTag", "actors": ["RemoveUpgradeBootEntry"], "name": "init_ram_start"}, {"class_name": "InterimPreparationPhaseTag", "actors": ["InitramDiskGenerator", "AddUpgradeBootEntry", "EfiInterimFix"], "name": "interim_preparation"}, {"class_name": "IPUWorkflowTag", "actors": ["ScanSubscriptionManagerInfo", "RemoveOldPAMModulesApply", "PersistentNetNamesDisable", "CheckIPAServer", "ScanCustomRepofile", "SSSDFacts", "CheckAcpid", "CheckMemcached", "QuaggaToFrr", "CheckOSRelease", "NetworkManagerUpdateConnections", "PersistentNetNamesConfig", "CheckBootAvailSpace", "PersistentNetNames", "XFSInfoScanner", "CheckInstalledDevelKernels", "CheckInstalledKernels", "CheckKernelDrivers", "CheckInstalledDebugKernels", "MigrateSendmail", "VerifyCheckResults", "ScheduleSeLinuxRelabeling", "ZiplConvertToBLSCFG", "QuaggaReport", "QuaggaDaemons", "IPUWorkflowConfig", "RepositoriesBlacklist", "UdevAdmInfo", "RemoveLeftoverPackages", "SpamassassinConfigCheck", "PowerTop", "CheckRemovedPamModules", "UnsupportedUpgradeCheck", "CheckFirewalld", "OpenSshAlgorithmsCheck", "RemoveOldPAMModulesScanner", "ReportSetTargetRelease", "CheckNtp", "SpamassassinConfigUpdate", "NetworkManagerUpdateService", "SCTPConfigRead", "DnfPackageDownload", "OpenSshUsePrivilegeSeparationCheck", "EnableRHSMReposOnRHEL8", "CheckCPU", "CheckSendmail", "Checktargetrepos", "MigrateNtp", "TcpWrappersCheck", "CheckKdeGnome", "RepositoriesMapping", "RpmTransactionConfigTasksCollector", "InitrdInclude", "CheckFips", "TcpWrappersConfigRead", "MultipathConfCheck", "CommonLeappDracutModules", "RestrictedPCIsScanner", "SSSDCheck", "VerifyDialogs", "RemoveSystemdResumeService", "AuthselectCheck", "ScanMemory", "TargetUserspaceCreator", "CheckGrep", "PreparePythonWorkround", "CheckSystemArch", "VsftpdConfigRead", "MultipathConfUpdate", "CheckRemovedEnvVars", "SanebackendsMigrate", "CheckPostfix", "PersistentNetNamesInitramfs", "RootScanner", "InitramDiskGenerator", "CheckSkippedRepositories", "NetworkManagerUpdateConfig", "NetworkManagerReadConfig", "StorageScanner", "TransactionWorkarounds", "CheckLeftoverPackages", "Checkhacluster", "UpdateGrubCore", "CheckSkipPhase", "UpdateEtcSysconfigKernel", "LocalReposInhibit", "CheckRootSymlinks", "SpamassassinConfigRead", "ForceDefaultBootToTargetKernelVersion", "ScanKernelCmdline", "CheckChrony", "AuthselectScanner", "ScanCLIenablrepo", "CheckWireshark", "RemoveUpgradeBootEntry", "DnfUpgradeTransaction", "CheckBrltty", "CheckGrubCore", "CheckMemory", "SELinuxApplyCustom", "SELinuxPrepare", "SELinuxContentScanner", "RemoveOldPAMModulesCheck", "CheckBtrfs", "AddUpgradeBootEntry", "Grubdevname", "PesEventsScanner", "CheckPCIDrivers", "UsedRepositoriesScanner", "VsftpdConfigUpdate", "AuthselectApply", "FilterRpmTransactionTasks", "CupsfiltersMigrate", "CheckKdeApps", "FirewalldUpdateLockdownWhitelist", "OpenSshConfigScanner", "VimMigrate", "GetInstalledDesktops", "SystemFactsActor", "RedHatSignedRpmScanner", "CheckFstabXFSOptions", "VsftpdConfigCheck", "RedHatSignedRpmCheck", "PythonInformUser", "CheckRedHatSubscriptionManagerSKU", "CheckIrssi", "ScanCPU", "CheckHybridImage", "CheckRHUI", "GrubenvToFile", "PamModulesScanner", "SetPermissiveSelinux", "ReportLeftoverPackages", "CheckDosfstools", "SetupTargetRepos", "DetectGrubConfigError", "CheckSapHana", "OpenSshPermitRootLoginCheck", "MultipathConfRead", "InhibitWhenLuks", "ScanSapHana", "CheckNonMountBootS390", "ScanInstalledTargetKernelVersion", "KernelCmdlineConfig", "RpmScanner", "DnfTransactionCheck", "CheckSelinux", "RemoveBootFiles", "Biosdevname", "MigrateBrltty", "EfiCheckBoot", "EfiInterimFix", "EfiFinalizationFix", "FirewalldFactsActor", "OpenSshProtocolCheck", "IpaScanner", "CheckNfs", "Prepareyumconfig", "SCTPChecks", "PCIDevicesScanner", "CreateSystemdResumeService", "SCTPConfigUpdate"], "name": "ipu"}, {"class_name": "LateTestsPhaseTag", "actors": ["PersistentNetNamesInitramfs"], "name": "late_tests"}, {"class_name": "PreparationPhaseTag", "actors": ["RemoveOldPAMModulesApply", "ZiplConvertToBLSCFG", "UpdateEtcSysconfigKernel", "SELinuxPrepare", "RemoveBootFiles", "Prepareyumconfig"], "name": "preparation"}, {"class_name": "ReportPhaseTag", "actors": ["VerifyCheckResults", "VerifyDialogs"], "name": "report"}, {"class_name": "RPMUpgradePhaseTag", "actors": ["RemoveLeftoverPackages", "PreparePythonWorkround", "CheckLeftoverPackages", "UpdateGrubCore", "DnfUpgradeTransaction", "ReportLeftoverPackages", "ScanInstalledTargetKernelVersion"], "name": "rpm_upgrade"}, {"class_name": "ThirdPartyApplicationsPhaseTag", "actors": [], "name": "third_party_applications"}], "tools": [{"path": "tools"}]}]

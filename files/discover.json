[{"repo_dir": "/home/ivasilev/projects/leapp-repository/repos/system_upgrade/el7toel8", "actors": [{"path": "actors/checkpostfix", "name": "check_postfix", "class_name": "CheckPostfix", "description": "\n    Check if postfix is installed, check whether configuration update is needed.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checkdosfstools", "name": "checkdosfstools", "class_name": "CheckDosfstools", "description": "\n    Check if dosfstools is installed. If yes, write information about non-compatible changes.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/vsftpdconfigupdate", "name": "vsftpd_config_update", "class_name": "VsftpdConfigUpdate", "description": "\n    Modifies vsftpd configuration files on the target RHEL-8 system so that the effective\n    configuration is the same, where possible. This means doing two things:\n    1. Reverting the default configuration file (/etc/vsftpd/vsftpd.conf) to its state\n       before the upgrade (where it makes sense), if the configuration file was being used\n       with its default content (i.e., unmodified) on the source system (the configuration\n       file gets replaced with a new version during the RPM upgrade in this case).\n       The anonymous_enable option falls in this category.\n    2. Adding 'option=old_effective_value' to configuration files for options whose default\n       value has changed, if the option is not explicitly specified in the configuration file.\n       The strict_ssl_read_eof option falls in this category.\n    3. Disabling options that cannot be enabled, otherwise vsftpd wouldn't work.\n       The tcp_wrappers option falls in this category.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["VsftpdFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/sourcebootloaderscanner", "name": "source_boot_loader_scanner", "class_name": "SourceBootLoaderScanner", "description": "\n    Scans the boot loader configuration on the source system.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["SourceBootLoaderConfiguration"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkremovedpammodules", "name": "removed_pam_modules", "class_name": "CheckRemovedPamModules", "description": "\n    Check for modules that are not available in RHEL 8 anymore\n\n    At this moment, we check only for pam_tally2. Few more modules\n    are already covered in RemoveOldPAMModulesApply actor\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["PamConfiguration"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/authselectcheck", "name": "authselect_check", "class_name": "AuthselectCheck", "description": "\n    Confirm suggested authselect call from AuthselectScanner.\n\n    AuthselectScanner produces an Authselect model that contains changes\n    that are suggested based on current configuration. This actor will\n    ask administrator for confirmation and will report the result.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["Authselect"], "produces": ["AuthselectDecision", "Report"], "apis": [], "dialogs": [{"components": [{"key": "confirm", "label": "Configure PAM and nsswitch.conf with the following authselect call?", "description": "If yes, suggested authselect profile will be applied on your system to generate PAM and nsswitch.conf configuration. If no, current configuration will be kept intact.", "default": true, "value": null, "reason": "There is a new tool called authselect in RHEL8 that replaced authconfig which is used to manage authentication (PAM) and identity (nsswitch.conf) sources. It is recommended to switch to this tool.", "value_type": "<class 'bool'>"}], "title": null, "reason": "Confirmation", "scope": "authselect_check"}], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/ziplconverttoblscfg", "name": "zipl_convert_to_blscfg", "class_name": "ZiplConvertToBLSCFG", "description": "\n    Convert the zipl boot loader configuration to the the boot loader specification on s390x systems.\n    ", "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "consumes": ["TargetUserSpaceInfo"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/sanebackendsmigrate", "name": "sanebackends_migrate", "class_name": "SanebackendsMigrate", "description": "\n    Actor for migrating sane-backends configuration files.\n\n    Adds USB quirks for support specific USB scanners if they\n    are not added during package manager transaction.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkchrony", "name": "check_chrony", "class_name": "CheckChrony", "description": "\n    Check for incompatible changes in chrony configuration.\n\n    Warn that the default chrony configuration in RHEL8 uses the leapsectz\n    directive.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/sctpchecks", "name": "sctp_checks", "class_name": "SCTPChecks", "description": "\n    Parses collected SCTP information and take necessary actions.\n\n    The only action performed by this actor is to request the installation of the\n    kernel-modules-extra rpm package, based on if SCTP is being used or not which\n    is collected on SCTPConfig message. If yes, it then produces a RpmTransactionTasks\n    requesting to install the package.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["SCTPConfig"], "produces": ["RpmTransactionTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/migratesendmail", "name": "migrate_sendmail", "class_name": "MigrateSendmail", "description": "\n    Migrate sendmail configuration files.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["SendmailMigrationDecision"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/cupsfiltersmigrate", "name": "cupsfilters_migrate", "class_name": "CupsfiltersMigrate", "description": "\n    Actor for migrating package cups-filters.\n\n    Migrating cups-filters package means adding two directives into\n    /etc/cups/cups-browsed.conf - LocalQueueNamingRemoteCUPS and\n    CreateIPPPrinterQueues.\n\n    LocalQueueNamingRemoteCUPS directive indicates what will be used as a name\n    for local print queue creation - the default is DNS-SD ID of advertised\n    print queue now, it was the name of remote print queue in the past.\n\n    CreateIPPPrinterQueues directive serves for telling cups-browsed to create\n    local print queues for all available IPP printers.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/sssdcheck", "name": "sssd_check", "class_name": "SSSDCheck", "description": "\n    Check SSSD configuration for changes in RHEL8 and report them.\n\n    These changes are:\n    - id_provider=local is no longer supported and will be ignored\n    - ldap_groups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_initgroups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_sudo_include_regexp changed default from true to false\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["SSSDConfig"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/pammodulesscanner", "name": "pam_modules_scanner", "class_name": "PamModulesScanner", "description": "\n    Scan the pam directory for services and modules used in them\n\n    This produces a PAMConfiguration message containing the whole\n    list of configured PAM services and what modules they contain.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["PamConfiguration"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/pythoninformuser", "name": "python_inform_user", "class_name": "PythonInformUser", "description": "This actor informs the user of differences in Python version and support in RHEL 8.", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/quaggatofrr", "name": "quagga_to_frr", "class_name": "QuaggaToFrr", "description": "\n    Edit frr configuration on the new system.\n\n    Take gathered info about quagga from RHEL 7 and apply these to frr in RHEL 8.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["QuaggaToFrrFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/removeoldpammodulescheck", "name": "removed_pam_modules_check", "class_name": "RemoveOldPAMModulesCheck", "description": "\n    Check if it is all right to disable PAM modules that are not in RHEL-8.\n\n    If admin will refuse to disable these modules (pam_pkcs11 and pam_krb5),\n    upgrade will be stopped. Otherwise we would risk locking out the system\n    once these modules are removed.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["RemovedPAMModules"], "produces": ["Report"], "apis": [], "dialogs": [{"components": [{"key": "confirm", "label": "Disable pam_pkcs11 module in PAM configuration? If no, the upgrade process will be interrupted.", "description": "PAM module pam_pkcs11 is no longer available in RHEL-8 since it was replaced by SSSD.", "default": null, "value": null, "reason": "Leaving this module in PAM configuration may lock out the system.", "value_type": "<class 'bool'>"}], "title": null, "reason": "Confirmation", "scope": "remove_pam_pkcs11_module_check"}, {"components": [{"key": "confirm", "label": "Disable pam_krb5 module in PAM configuration? If no, the upgrade process will be interrupted.", "description": "PAM module pam_krb5 is no longer available in RHEL-8 since it was replaced by SSSD.", "default": null, "value": null, "reason": "Leaving this module in PAM configuration may lock out the system.", "value_type": "<class 'bool'>"}], "title": null, "reason": "Confirmation", "scope": "remove_pam_krb5_module_check"}], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/checkwireshark", "name": "check_wireshark", "class_name": "CheckWireshark", "description": "\n    Report a couple of changes in tshark usage\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/tcpwrappersconfigread", "name": "tcp_wrappers_config_read", "class_name": "TcpWrappersConfigRead", "description": "\n    Parse tcp_wrappers configuration files /etc/hosts.{allow,deny}.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["TcpWrappersFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/authselectapply", "name": "authselect_apply", "class_name": "AuthselectApply", "description": "\n    Apply changes suggested by AuthselectScanner.\n\n    If confirmed by admin in AuthselectDecision, call suggested authselect\n    command to configure the system using this tool.\n    ", "tags": ["IPUWorkflowTag", "ApplicationsPhaseTag"], "consumes": ["AuthselectDecision", "Authselect"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/opensshuseprivilegeseparationcheck", "name": "open_ssh_use_privilege_separation", "class_name": "OpenSshUsePrivilegeSeparationCheck", "description": "\n    UsePrivilegeSeparation configuration option was removed.\n\n    Check the value of UsePrivilegeSeparation in OpenSSH server config file\n    and warn about its deprecation if it is set to non-default value.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["OpenSshConfig"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/bindupdate", "name": "bind_update", "class_name": "BindUpdate", "description": "\n    Actor parsing facts found in configuration and modifying configuration.\n    ", "tags": ["PreparationPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM", "BindFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/vimmigrate", "name": "vim_migrate", "class_name": "VimMigrate", "description": "\n    Modify configuration files of Vim 8.0 and later to keep the same behavior\n    as Vim 7.4 and earlier had.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkremovedenvvars", "name": "check_removed_envvars", "class_name": "CheckRemovedEnvVars", "description": "\n    Check for usage of removed environment variables and inhibit the upgrade\n    if they are used.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkfirewalld", "name": "check_firewalld", "class_name": "CheckFirewalld", "description": "\n    Check for certain firewalld configuration that may prevent an upgrade.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["FirewalldFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/opensshdeprecateddirectivescheck", "name": "open_ssh_deprecated_directives_check", "class_name": "OpenSshDeprecatedDirectivesCheck", "description": "\n    Check for any deprecated directives in the OpenSSH configuration.\n\n    Checks the directives used in the OpenSSH configuration for ones that have\n    been deprecated and their usage in newer versions would result in the sshd\n    service failing to start after the upgrade.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["OpenSshConfig"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/spamassassinconfigupdate", "name": "spamassassin_config_update", "class_name": "SpamassassinConfigUpdate", "description": "\n    This actor performs several modifications to spamassassin configuration\n    so that spamc and the spamassassin systemd service can be run without error\n    on the target system:\n    1. Remove arguments given to the --ssl option in spamc configuration\n       (/etc/mail/spamassassin/spamc.conf).\n    2. Remove --ssl-version options from the spamassassin sysconfig file\n       (/etc/sysconfig/spamassassin), or replace them with --ssl, if needed.\n    3. Remove the -d/--daemonize option from the spamassassin sysconfig file.\n\n    All files are backed up before they are modified.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["SpamassassinFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/enableddeviceciofreeservices390", "name": "enable_device_cio_free_service", "class_name": "EnableDeviceCioFreeService", "description": "\n    Enables device_cio_free.service systemd service on s390x\n\n    After an upgrade this service ends up disabled even though it's vendor preset is set to enabled.\n    The service is used to enable devices which are not explicitly enabled on the kernel command line.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["SystemdServicesTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/opensshprotocolcheck", "name": "open_ssh_protocol", "class_name": "OpenSshProtocolCheck", "description": "\n    Protocol configuration option was removed.\n\n    Check the value of Protocol in OpenSSH server config file\n    and warn about its deprecation if it is set. This option was removed\n    in RHEL 7.4, but it might still be hanging around.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["OpenSshConfig"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/migratentp", "name": "migrate_ntp", "class_name": "MigrateNtp", "description": "\n    Migrate ntp and/or ntpdate configuration to chrony.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["NtpMigrationDecision"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checksendmail", "name": "check_sendmail", "class_name": "CheckSendmail", "description": "\n    Check if sendmail is installed, check whether configuration update is needed, inhibit upgrade if TCP wrappers\n    are used.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["TcpWrappersFacts", "InstalledRedHatSignedRPM"], "produces": ["Report", "SendmailMigrationDecision"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/networkmanagerupdateconnections", "name": "network_manager_update_connections", "class_name": "NetworkManagerUpdateConnections", "description": "\n    Update NetworkManager connections.\n\n    When using dhcp=dhclient on Red Hat Enterprise Linux 7, a non-hexadecimal client-id (a string)\n    is sent on the wire as is (i.e. the first character is the 'type' as per RFC 2132 section\n    9.14). On Red Hat Enterprise Linux 8, a zero byte is prepended to string-only client-ids. To\n    preserve behavior on upgrade, we convert client-ids to the hexadecimal form.\n    ", "tags": ["FirstBootPhaseTag", "IPUWorkflowTag"], "consumes": ["NetworkManagerConfig"], "produces": [], "apis": [], "dialogs": [], "tools": ["tools"], "files": [], "libraries": [], "tests": []}, {"path": "actors/checkirssi", "name": "checkirssi", "class_name": "CheckIrssi", "description": "\n    Check if irssi is installed. If yes, write information about non-compatible changes.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/networkmanagerupdateservice", "name": "network_manager_update_service", "class_name": "NetworkManagerUpdateService", "description": "\n    Updates NetworkManager services status.\n\n    On Red Hat Enterprise Linux 7 if the NetworkManager service was disabled and\n    NetworkManager-wait-online enabled, the former would not be started. This changed on Red Hat\n    Enterprise Linux 8, where NM-w-o 'Requires' NM and so NM can be started even if disabled. Upon\n    upgrade, to keep the previous behavior we must disable NM-w-o when NM is disabled.\n\n    See also:\n      https://bugzilla.redhat.com/show_bug.cgi?id=1520865\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/sssd_handle_cache_files", "name": "sssd_handle_cache_files", "class_name": "SSSDHandleCacheFiles", "description": "\n    If an SSSD configuration has been detected, special handling for SSSD cache files will be scheduled.\n\n    After the upgrade from EL7 to EL8, SSSD isn't able to start anymore because the cache files have a newer\n    format in RHEL7.9 than in RHEL8. This is a workaround for this issue.\n    ", "tags": ["IPUWorkflowTag", "ApplicationsPhaseTag"], "consumes": ["SSSDConfig"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkbtrfs", "name": "check_btrfs", "class_name": "CheckBtrfs", "description": "\n    Check if Btrfs filesystem is in use. If yes, inhibit the upgrade process.\n\n    Btrfs filesystem was introduced as Technology Preview with initial releases of RHEL 6 and 7. It\n    was deprecated on versions 6.6 and 7.4 and will not be present in next major version.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["ActiveKernelModulesFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/satellite_upgrade_facts", "name": "satellite_upgrade_facts", "class_name": "SatelliteUpgradeFacts", "description": "\n    Report which Satellite packages require updates and how to handle PostgreSQL data\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["InstalledRPM"], "produces": ["RpmTransactionTasks", "SatelliteFacts", "RepositoriesSetupTasks", "DNFWorkaround"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checkmemcached", "name": "check_memcached", "class_name": "CheckMemcached", "description": "\n    Check for incompatible changes in memcached configuration.\n\n    Warn that memcached in RHEL8 no longer listens on the UDP port by default\n    and the default service configuration binds memcached to the loopback\n    interface.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkbind", "name": "check_bind", "class_name": "CheckBind", "description": "Actor parsing BIND configuration and checking for known issues in it.", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report", "BindFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/multipathconfcheck", "name": "multipath_conf_check", "class_name": "MultipathConfCheck", "description": "\n    Checks whether the multipath configuration can be updated to RHEL-8 and\n    plan necessary tasks.\n\n    Specifically, it checks if the path_checker/checker option is set to\n    something other than tur in the defaults section. If so, non-trivial\n    changes may be required in the multipath.conf file, and it is not\n    possible to auto-update it - in such a case inhibit upgrade.\n\n    In addition create a task to ensure that configuration files are copied\n    into the target container (they are necessary for correct creation of the\n    upgrade initramfs.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["MultipathConfFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/cupscheck", "name": "cups_check", "class_name": "CupsCheck", "description": "\n    Reports changes in configuration between CUPS 1.6.3 and 2.2.6\n\n    Reports if user configuration contains features (interface scripts),\n    directives (Include, PrintcapFormat, PassEnv, SetEnv,\n    ServerCertificate, ServerKey) or directive values (Digest,\n    BasicDigest). Some of them were removed for security reasons\n    (interface scripts and directive Include), moved\n    to cups-files.conf for security reasons (PassEnv, SetEnv).\n    Others were removed (ServerCertificate, ServerKey, Digest,\n    BasicDigest) or moved (PrintcapFormat) due deprecation.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["CupsChangedFeatures"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/postgresqlcheck", "name": "postgresql_check", "class_name": "PostgresqlCheck", "description": "\n    Actor checking for presence of PostgreSQL installation.\n\n    Provides user with information related to upgrading systems\n    with PostgreSQL installed.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkcifs", "name": "check_cifs", "class_name": "CheckCIFS", "description": "\n    Check if CIFS filesystem is in use. If yes, inhibit the upgrade process.\n\n    Actor looks for CIFS in /ets/fstab.\n    If there is a CIFS entry, the upgrade is inhibited.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["StorageInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkhacluster", "name": "check_ha_cluster", "class_name": "Checkhacluster", "description": "\n    Check if HA Cluster is in use. If yes, inhibit the upgrade process.\n\n    The system is considered as part of cluster if a corosync.conf file\n    (/etc/corosync/corosync.conf) can be found there.\n    Also the system can be a part of a cluster as a remote node. In such case\n    a cib file (/var/lib/pacemaker/cib/cib.xml) can be found there.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/networkmanagerupdateconfig", "name": "network_manager_update_config", "class_name": "NetworkManagerUpdateConfig", "description": "\n    Updates NetworkManager configuration for Red Hat Enterprise Linux 8.\n\n    On Red Hat Enterprise Linux 7 NetworkManager uses the \"dhclient\" DHCP backend by default, while\n    the default is \"internal\" on Red Hat Enterprise Linux 8. We want to keep \"dhclient\" enabled on\n    upgrade, unless the user explicitly chose another backend in the configuration. To do so, we\n    drop a configuration snippet in /usr/lib.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["NetworkManagerConfig"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/satellite_upgrade_check", "name": "satellite_upgrade_check", "class_name": "SatelliteUpgradeCheck", "description": "\n    Check state of Satellite system before upgrade\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["SatelliteFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkfstabxfsoptions", "name": "checkfstabxfsoptions", "class_name": "CheckFstabXFSOptions", "description": "\n    Check the FSTAB file for the deprecated / removed XFS mount options.\n\n    Some mount options for XFS have been deprecated on RHEL 7 and already\n    removed on RHEL 8. If any such an option is present in the FSTAB,\n    it's impossible to boot the RHEL 8 system without the manual update of the\n    file.\n\n    Check whether any of these options are present in the FSTAB file\n    and inhibit the upgrade in such a case.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["StorageInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/detectgrubconfigerror", "name": "detect_grub_config_error", "class_name": "DetectGrubConfigError", "description": "\n    Check grub configuration for syntax error in GRUB_CMDLINE_LINUX value.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report", "GrubConfigError"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/removeoldpammodulesapply", "name": "removed_pam_modules_apply", "class_name": "RemoveOldPAMModulesApply", "description": "\n    Remove old PAM modules that are no longer available in RHEL-8 from\n    PAM configuration to avoid system lock out.\n    ", "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "consumes": ["RemovedPAMModules"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/reportleftoverpackages/reportleftoverpackages", "name": "report_leftover_packages", "class_name": "ReportLeftoverPackages", "description": "\n    Collect messages about leftover el7 packages and generate report for users.\n\n    Depending on execution of previous actors, generated report contains information that there are still el7 packages\n    present on the system, which makes it unsupported or lists packages that have been removed.\n    ", "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "consumes": ["LeftoverPackages", "RemovedPackages"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/removeleftoverpackages", "name": "remove_leftover_packages", "class_name": "RemoveLeftoverPackages", "description": "\n    Remove el7 packages left on the system after the upgrade to RHEL 8.\n\n    Removal of el7 packages is necessary in order to keep the machine in supported state.\n    Actor generates report telling users what packages have been removed.\n    ", "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag", "ExperimentalTag"], "consumes": ["LeftoverPackages"], "produces": ["Report", "RemovedPackages"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/checkbrltty", "name": "check_brltty", "class_name": "CheckBrltty", "description": "\n    Check if brltty is installed, check whether configuration update is needed.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["BrlttyMigrationDecision", "Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/vsftpdconfigcheck", "name": "vsftpd_config_check", "class_name": "VsftpdConfigCheck", "description": "\n    Checks whether the vsftpd configuration is supported in RHEL-8. Namely checks that\n    configuration files don't set tcp_wrappers=YES and vsftpd-related configuration is\n    not present in tcp_wrappers configuration files at the same time.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["VsftpdFacts", "TcpWrappersFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkacpid", "name": "checkacpid", "class_name": "CheckAcpid", "description": "\n    Check if acpid is installed. If yes, write information about non-compatible changes.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/grubdevname", "name": "grubdevname", "class_name": "Grubdevname", "description": "\n    Get name of block device where GRUB is located\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["GrubDevice"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/cupsscanner", "name": "cups_scanner", "class_name": "CupsScanner", "description": "\n    Gather facts about CUPS features which needs to be migrated\n\n    Actor checks if cups package is installed and if one or more following\n    situations appears in configuration files:\n    - interface scripts\n    - use of 'Digest' or 'BasicDigest' authentication\n    - use of 'Include' directive\n    - use of 'ServerCertificate' and 'ServerKey' directives\n    - use of 'SetEnv' or 'PassEnv' directives\n    - use of 'PrintcapFormat' directive\n\n    The actor creates list from gathered data.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["CupsChangedFeatures", "Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/kernel/checkinstalleddebugkernels/checkinstalleddebugkernels", "name": "check_installed_debug_kernels", "class_name": "CheckInstalledDebugKernels", "description": "\n    Inhibit IPU (in-place upgrade) when multiple debug kernels are installed.\n\n    Because of an issue in DNF, the transaction can't be validated if there's\n    more than one package named kernel-debug. Therefore, in this case, we\n    inhibit the upgrade with a clearer remediation.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/kernel/checkinstalleddevelkernels/checkinstalleddevelkernels", "name": "check_installed_devel_kernels", "class_name": "CheckInstalledDevelKernels", "description": "\n    Inhibit IPU (in-place upgrade) when multiple devel kernels are installed.\n\n    Because of an issue in DNF, the transaction can't be validated if there's\n    more than one package named kernel-devel. Therefore, in this case, we\n    inhibit the upgrade with a clearer remediation.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/migratebrltty", "name": "migrate_brltty", "class_name": "MigrateBrltty", "description": "\n    Migrate brltty configuration files.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["BrlttyMigrationDecision"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/sctpconfigupdate", "name": "sctp_config_update", "class_name": "SCTPConfigUpdate", "description": "This actor updates SCTP configuration for RHEL8.", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["SCTPConfig"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/multipathconfread", "name": "multipath_conf_read", "class_name": "MultipathConfRead", "description": "\n    Read multipath configuration files and extract the necessary information\n\n    Related files:\n      - /etc/multipath.conf\n      - /etc/multipath/ - any files inside the directory\n      - /etc/xdrdevices.conf\n\n    As well, create task (msg) to copy all needed multipath files into\n    the target container as the files are needed to create proper initramfs.\n    This covers the files mentioned above.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["TargetUserSpaceUpgradeTasks", "MultipathConfFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/spamassassinconfigread", "name": "spamassassin_config_read", "class_name": "SpamassassinConfigRead", "description": "\n    Reads spamc configuration (/etc/mail/spamassassin/spamc.conf), the\n    spamassassin sysconfig file (/etc/sysconfig/spamassassin) and checks\n    whether the spamassassin service has been overridden. Produces\n    SpamassassinFacts containing the extracted information.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["SpamassassinFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/vsftpdconfigread", "name": "vsftpd_config_read", "class_name": "VsftpdConfigRead", "description": "\n    Reads vsftpd configuration files (/etc/vsftpd/*.conf) and extracts necessary information.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["VsftpdFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkgrep", "name": "checkgrep", "class_name": "CheckGrep", "description": "\n    Check if Grep is installed. If yes, write information about non-compatible changes.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checkdocker", "name": "check_docker", "class_name": "CheckDocker", "description": "\n    Checks if Docker is installed and warns about its deprecation in RHEL8.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/cupsmigrate", "name": "cups_migrate", "class_name": "CupsMigrate", "description": "\n    cups_migrate actor\n\n    Migrates configuration directives and writes into error log\n    if any error was encountered.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["CupsChangedFeatures"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/removeoldpammodulesscanner", "name": "removed_pam_modules_scanner", "class_name": "RemoveOldPAMModulesScanner", "description": "\n    Scan PAM configuration for modules that are not available in RHEL-8.\n\n    PAM module pam_krb5 and pam_pkcs11 are no longer present in RHEL-8\n    and must be removed from PAM configuration, otherwise it may lock out\n    the system.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["RemovedPAMModules"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/ziplcheckbootentries", "name": "zipl_check_boot_entries", "class_name": "ZiplCheckBootEntries", "description": "\n    Inhibits the upgrade if a problematic Zipl configuration is detected on the system.\n\n    The configuration is considered problematic if it will cause troubles during its conversion to BLS.\n    Such troubles can be caused by either containing multiple rescue entries, or containing rescue entries\n    sharing the same kernel image version.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["SourceBootLoaderConfiguration"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/multipathconfupdate", "name": "multipath_conf_update", "class_name": "MultipathConfUpdate", "description": "\n    Modifies multipath configuration files on the target RHEL-8 system so that\n    they will run properly. This is done in three ways\n    1. commenting out lines for options that no longer exist, or whose value\n       is no longer current in RHEL-8\n    2. Migrating any options in an devices section with all_devs to an\n       overrides sections\n    3. Rename options that have changed names\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["MultipathConfFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/spamassassinconfigcheck", "name": "spamassassin_config_check", "class_name": "SpamassassinConfigCheck", "description": "\n    Reports changes in spamassassin between RHEL-7 and RHEL-8\n\n    Reports backward-incompatible changes that have been made in spamassassin\n    between RHEL-7 and RHEL-8 (spamc no longer accepts an argument with the --ssl\n    option; spamd no longer accepts the --ssl-version; SSLv3 is no longer supported;\n    the type of spamassassin.service has been changed from \"forking\" to \"simple\";\n    sa-update no longer supports SHA1 validation of rule files).\n\n    The migration of the configuration files will be mostly handled by the\n    SpamassassinConfigUpdate actor, however the admin still needs to know about\n    the changes so that they can do any necessary migration in places that we cannot\n    reach (e.g. scripts).\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["SpamassassinFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/registeryumadjustment", "name": "register_yum_adjustment", "class_name": "RegisterYumAdjustment", "description": "\n    Registers a workaround which will adjust the yum directories during the upgrade.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["DNFWorkaround"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checkkdeapps", "name": "check_kde_apps", "class_name": "CheckKdeApps", "description": "\n    Actor checks which KDE apps are installed.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRPM"], "produces": ["InstalledKdeAppsFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/powertop", "name": "powertop", "class_name": "PowerTop", "description": "\n    Check if PowerTOP is installed. If yes, write information about non-compatible changes.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/sctpconfigread", "name": "sctp_read_status", "class_name": "SCTPConfigRead", "description": "\n    Determines whether or not the SCTP kernel module might be wanted.\n\n    This actor determines whether or not the SCTP is currently used by this machine or has been quite\n    recently used (1 month timeframe). In case it has been used it will issue a SCTPConfig message that\n    defines the decision whether or not the SCTP module should be removed from the module blacklist on RHEL8.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["ActiveKernelModulesFacts"], "produces": ["SCTPConfig"], "apis": [], "dialogs": [], "tools": ["tools"], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/tcpwrapperscheck", "name": "tcp_wrappers_check", "class_name": "TcpWrappersCheck", "description": "\n    Check the list of packages previously compiled with TCP wrappers support\n    and check whether they have some rules configured in\n    /etc/hosts.{allow,deny} that are no longer honored by the daemons and\n    might make the service more accessible than expected.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["TcpWrappersFacts", "InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/opensshalgorithmscheck", "name": "open_ssh_algorithms", "class_name": "OpenSshAlgorithmsCheck", "description": "\n    OpenSSH configuration does not contain any unsupported cryptographic algorithms.\n\n    Check the values of Ciphers and MACs in OpenSSH server config file and warn\n    about removed algorithms which might cause the server to fail to start.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["OpenSshConfig"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkkdegnome", "name": "check_kde_gnome", "class_name": "CheckKdeGnome", "description": "\n    Checks whether KDE is installed\n\n    Actor will check whether KDE is installed together with GNOME desktop to inform whether we can\n    inhibit the upgrade process. When both are installed, we need to inform the user that KDE will\n    be removed and GNOME will be used instead. If only KDE is installed, we want to inhibit\n    the upgrade process otherwise the user will end up without a desktop.\n    Note: The Package Evolution Service data makes sure the KDE-related packages are removed in the\n    dnf upgrade transaction.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["InstalledKdeAppsFacts", "InstalledDesktopsFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/firewalldfactsactor", "name": "firewalld_facts_actor", "class_name": "FirewalldFactsActor", "description": "\n    Provide data about firewalld\n\n    After collecting data, a message with relevant data will be produced.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["FirewalldFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkntp", "name": "check_ntp", "class_name": "CheckNtp", "description": "\n    Check if ntp and/or ntpdate configuration needs to be migrated.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["NtpMigrationDecision", "Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/updateetcsysconfigkernel", "name": "update_etc_sysconfig_kernel", "class_name": "UpdateEtcSysconfigKernel", "description": "\n    Update /etc/sysconfig/kernel file.\n\n    In order to proceed with Upgrade process, DEFAULTKERNEL entry should be updated from kernel to\n    kernel-core.\n    ", "tags": ["PreparationPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/sssdfacts", "name": "sssd_facts", "class_name": "SSSDFacts", "description": "\n    Check SSSD configuration for changes in RHEL8 and report them in model.\n\n    These changes are:\n    - id_provider=local is no longer supported and will be ignored\n    - ldap_groups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_initgroups_use_matching_rule_in_chain was removed and will be ignored\n    - ldap_sudo_include_regexp changed default from true to false\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["SSSDConfig"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkmultiplepackageversions", "name": "multiple_package_versions", "class_name": "CheckMultiplePackageVersions", "description": "\n    Check for problematic 32bit packages installed together with 64bit ones.\n\n    If a known problematic 32bit package is found, the upgrade will be inhibited with the detailed\n    report how to solve the problem if such a remedy exists.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["InstalledRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/satellite_upgrade_data_migration", "name": "satellite_upgrade_data_migration", "class_name": "SatelliteUpgradeDataMigration", "description": "\n    Reconfigure Satellite services and migrate PostgreSQL data\n    ", "tags": ["IPUWorkflowTag", "ApplicationsPhaseTag"], "consumes": ["SatelliteFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/checkleftoverpackages", "name": "check_leftover_packages", "class_name": "CheckLeftoverPackages", "description": "\n    Check if there are any RHEL 7 packages present after upgrade.\n\n    Actor produces message containing these packages. Message is empty if there are no el7 package left.\n    ", "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "consumes": ["TransactionCompleted", "InstalledUnsignedRPM"], "produces": ["LeftoverPackages"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/networkmanagerreadconfig", "name": "network_manager_read_config", "class_name": "NetworkManagerReadConfig", "description": "\n    Provides data about NetworkManager configuration.\n\n    After collecting data from NetworkManager tool, a message with relevant data will be produced.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["NetworkManagerConfig"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/quaggadaemons", "name": "quagga_daemons", "class_name": "QuaggaDaemons", "description": "\n    Active quagga daemons check.\n\n    Checking for daemons that are currently running in the system.\n    These should be enabled in /etc/frr/daemons later in the process.\n    The tools will check for config files later on since these should stay in the system.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["QuaggaToFrrFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/satellite_upgrader", "name": "satellite_upgrader", "class_name": "SatelliteUpgrader", "description": "\n    Execute installer in the freshly booted system, to finalize Satellite configuration\n    ", "tags": ["IPUWorkflowTag", "FirstBootPhaseTag"], "consumes": ["SatelliteFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/quaggareport", "name": "quagga_report", "class_name": "QuaggaReport", "description": "\n    Checking for babeld on RHEL-7.\n\n    This actor is supposed to report that babeld was used on RHEL-7\n    and it is no longer available in RHEL-8.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["QuaggaToFrrFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/authselectscanner", "name": "authselect_scanner", "class_name": "AuthselectScanner", "description": "\n    Detect what authselect configuration should be suggested to administrator.\n\n    1. Detect possible authselect profile by looking up modules in PAM\n       or by checking that daemon is enabled.\n       - pam_sss -> sssd\n       - pam_winbind -> winbind\n       - ypbind enabled -> nis\n\n       If more then one module/daemon is detected that we will keep the\n       configuration intact. No authselect profile can be applied.\n\n    2. Detect authselect profile features by looking up modules in PAM\n       or nsswitch.conf.\n       - pam_faillock => with-faillock\n       - pam_fprintd => with-fingerprint\n       - pam_access => with-pamaccess\n       - pam_mkhomedir => with-mkhomedir\n       - pam_oddjob_mkhomedir => with-mkhomedir\n\n    3. Check if there are any unknown PAM modules.\n       If there are used PAM modules not used in authselect (such as pam_ldap),\n       we must keep the configuration intact.\n\n    4. Check if authconfig was used to create current configuration.\n       If yes, we can automatically convert the configuration to authselect.\n       If no, we need admin's confirmation.\n\n       - Check that /etc/sysconfig/authconfig exists.\n       - Check that PAM configuration uses authconfig files.\n       - Check that PAM configuration was not touch after sysconfig file\n         was created.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["Authselect"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/firewalldupdatelockdownwhitelist", "name": "firewalld_update_lockdown_whitelist", "class_name": "FirewalldUpdateLockdownWhitelist", "description": "\n    Update the firewalld Lockdown Whitelist.\n\n    RHEL-8 uses a platform specific python interpreter for packaged\n    applications. For firewall-config, the interpreter path is part of the\n    lockdown list. In RHEL-7 this was simply /usr/bin/python, but in RHEL-8\n    it's /usr/libexec/platform-python. However, if the user made changes to the\n    lockdown whitelist it won't be replaced by RPM/dnf. As such we must update\n    the interpreter if the old value is there.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["FirewalldFacts"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}], "apis": [], "topics": [], "models": [{"class_name": "Authselect", "fields": {"profile": {"nullable": true, "class_name": "String", "default": null, "help": null}, "features": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "confirm": {"nullable": false, "class_name": "Boolean", "default": true, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "AuthselectDecision", "fields": {"confirmed": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "BindConfigIssuesModel", "fields": {"path": {"nullable": false, "class_name": "String", "default": null, "help": null}, "statements": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "BindFacts", "fields": {"config_files": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "modified_files": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "dnssec_lookaside": {"nullable": true, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "BindConfigIssuesModel"}, "maximum": null, "minimum": 0}, "listen_on_v6_missing": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "BootEntry", "fields": {"title": {"nullable": false, "class_name": "String", "default": null, "help": null}, "kernel_image": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "SourceBootLoaderConfiguration", "fields": {"entries": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "BootEntry"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "BrlttyMigrationDecision", "fields": {"migrate_file": {"nullable": false, "class_name": "String", "default": null, "help": null}, "migrate_bt": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}, "migrate_espeak": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "CupsChangedFeatures", "fields": {"interface": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "digest": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "include": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "certkey": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "env": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "printcap": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "include_files": {"nullable": false, "class_name": "List", "default": ["/etc/cups/cupsd.conf"], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "FirewalldFacts", "fields": {"firewall_config_command": {"nullable": false, "class_name": "String", "default": "", "help": null}, "ebtablesTablesInUse": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "ipsetTypesInUse": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledKdeAppsFacts", "fields": {"installed_apps": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "MultipathConfigOption", "fields": {"name": {"nullable": false, "class_name": "String", "default": "", "help": null}, "value": {"nullable": false, "class_name": "String", "default": "", "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "MultipathConfig", "fields": {"pathname": {"nullable": false, "class_name": "String", "default": null, "help": null}, "default_path_checker": {"nullable": true, "class_name": "String", "default": null, "help": null}, "config_dir": {"nullable": true, "class_name": "String", "default": null, "help": null}, "default_retain_hwhandler": {"nullable": true, "class_name": "Boolean", "default": null, "help": null}, "default_detect_prio": {"nullable": true, "class_name": "Boolean", "default": null, "help": null}, "default_detect_checker": {"nullable": true, "class_name": "Boolean", "default": null, "help": null}, "reassign_maps": {"nullable": true, "class_name": "Boolean", "default": null, "help": null}, "hw_str_match_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "ignore_new_boot_devs_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "new_bindings_in_boot_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "unpriv_sgio_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "detect_path_checker_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "overrides_hwhandler_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "overrides_pg_timeout_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "queue_if_no_path_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "all_devs_section_exists": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "all_devs_options": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "MultipathConfigOption"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "MultipathConfFacts", "fields": {"configs": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "MultipathConfig"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "NetworkManagerConfig", "fields": {"dhcp": {"nullable": false, "class_name": "String", "default": "", "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "NtpMigrationDecision", "fields": {"migrate_services": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "config_tgz64": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "PamService", "fields": {"service": {"nullable": false, "class_name": "String", "default": null, "help": null}, "modules": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "PamConfiguration", "fields": {"services": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "PamService"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "QuaggaToFrrFacts", "fields": {"active_daemons": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "enabled_daemons": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "RemovedPAMModules", "fields": {"modules": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "SatellitePostgresqlFacts", "fields": {"local_postgresql": {"nullable": false, "class_name": "Boolean", "default": true, "help": null}, "old_var_lib_pgsql_data": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "same_partition": {"nullable": false, "class_name": "Boolean", "default": true, "help": null}, "space_required": {"nullable": true, "class_name": "Integer", "default": null, "help": null}, "space_available": {"nullable": true, "class_name": "Integer", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "SatelliteFacts", "fields": {"has_foreman": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "has_katello_installer": {"nullable": false, "class_name": "Boolean", "default": true, "help": null}, "postgresql": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SatellitePostgresqlFacts"}}, "topic": "SystemFactsTopic"}, {"class_name": "SCTPConfig", "fields": {"wanted": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}}, "topic": "SCTPConfigTopic"}, {"class_name": "SendmailMigrationDecision", "fields": {"migrate_files": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SpamassassinFacts", "fields": {"spamc_ssl_argument": {"nullable": true, "class_name": "String", "default": null, "help": null}, "spamd_ssl_version": {"nullable": true, "class_name": "String", "default": null, "help": null}, "service_overriden": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "SSSDDomainConfig", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "options": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SSSDConfig", "fields": {"domains": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SSSDDomainConfig"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "DaemonList", "fields": {"value": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "TcpWrappersFacts", "fields": {"daemon_lists": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "DaemonList"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "VsftpdConfig", "fields": {"path": {"nullable": false, "class_name": "String", "default": null, "help": null}, "strict_ssl_read_eof": {"nullable": true, "class_name": "Boolean", "default": null, "help": null}, "tcp_wrappers": {"nullable": true, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "VsftpdFacts", "fields": {"default_config_hash": {"nullable": true, "class_name": "String", "default": null, "help": null}, "configs": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "VsftpdConfig"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}], "tags": [], "workflows": [], "tools": [{"path": "tools"}], "files": [{"path": "files"}], "libraries": [{"path": "libraries"}]}, {"repo_dir": "/home/ivasilev/projects/leapp-repository/repos/common", "actors": [], "apis": [], "topics": [{"class_name": "SystemInfoTopic", "name": "system_info", "messages": ["UsedRepository", "DNFWorkaround", "SapHanaInfo", "InstalledTargetKernelVersion", "RestrictedPCIDevice", "FstabEntry", "TcpWrappersFacts", "SendmailMigrationDecision", "Version", "UsedRepositories", "NetworkManagerConfig", "PkgManagerInfo", "CupsChangedFeatures", "CurrentKernel", "SELinuxModule", "IPUConfig", "NtpMigrationDecision", "LvdisplayEntry", "RestrictedPCIDevices", "SystemdServicesTasks", "MountEntry", "RenamedInterfaces", "SpamassassinFacts", "AuthselectDecision", "SELinuxModules", "DNFPluginTask", "MultipathConfig", "VsftpdConfig", "CephInfo", "PCIAddress", "KernelCmdlineArg", "BindConfigIssuesModel", "SELinuxCustom", "VsftpdFacts", "Interface", "RHUIInfo", "PamService", "TargetKernelCmdlineArgTasks", "RPM", "BindFacts", "PCIDevice", "SystemdMountEntry", "PersistentNetNamesFacts", "LsblkEntry", "FirewalldFacts", "PamConfiguration", "KernelCmdline", "BootEntry", "SSSDDomainConfig", "XFSPresence", "OpenSshPermitRootLogin", "InstalledRPM", "PersistentNetNamesFactsInitramfs", "SapHanaManifestEntry", "UdevAdmInfoData", "MultipathConfFacts", "StorageInfo", "SourceBootLoaderConfiguration", "SSSDConfig", "PvsEntry", "EnvVar", "QuaggaToFrrFacts", "SelinuxRelabelDecision", "InstalledRedHatSignedRPM", "RenamedInterface", "SapHanaInstanceInfo", "InitrdIncludes", "BrlttyMigrationDecision", "PartitionEntry", "VgsEntry", "OSRelease", "InstalledUnsignedRPM", "PCIDevices", "OpenSshConfig", "DaemonList", "MultipathConfigOption", "SelinuxPermissiveDecision"]}], "models": [], "tags": [], "workflows": [], "tools": [], "files": [], "libraries": []}, {"repo_dir": "/home/ivasilev/projects/leapp-repository/repos/system_upgrade/common", "actors": [{"path": "actors/ipascanner", "name": "ipa_scanner", "class_name": "IpaScanner", "description": "\n    Scan system for ipa-client and ipa-server status\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["IpaInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checksaphana", "name": "check_sap_hana", "class_name": "CheckSapHana", "description": "\n    If SAP HANA has been detected, several checks are performed to ensure a successful upgrade.\n\n    If the upgrade flavour is 'default' no checks are being executed.\n\n    The following checks are executed:\n    - If this system is _NOT_ running on x86_64, the upgrade is inhibited.\n    - If SAP HANA 1 has been detected on the system the upgrade is inhibited since it is not supported on RHEL8.\n    - If SAP HANA 2 has been detected, the upgrade will be inhibited if an unsupported version for the target release\n      has been detected.\n    - If SAP HANA is running the upgrade is inhibited.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["SapHanaInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scansaphana", "name": "scan_sap_hana", "class_name": "ScanSapHana", "description": "\n    Gathers information related to SAP HANA instances on the system.\n\n    This actor collects information from SAP HANA installations and produces a message containing the details.\n    The actor will determine whether SAP HANA is installed, running and which version is present on the system.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["SapHanaInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scanpkgmanager", "name": "scan_pkg_manager", "class_name": "ScanPkgManager", "description": "\n    Provides data about package manager (yum/dnf)\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["PkgManagerInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/persistentnetnamesdisable", "name": "persistentnetnamesdisable", "class_name": "PersistentNetNamesDisable", "description": "\n    Disable systemd-udevd persistent network naming on machine with single eth0 NIC\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["PersistentNetNamesFacts"], "produces": ["Report", "KernelCmdlineArg"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/rpmscanner", "name": "rpm_scanner", "class_name": "RpmScanner", "description": "\n    Provides data about installed RPM Packages.\n\n    After collecting data from RPM query, a message with relevant data will be produced.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["InstalledRPM"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/setpermissiveselinux", "name": "set_permissive_se_linux", "class_name": "SetPermissiveSelinux", "description": "\n    Set SELinux mode.\n\n    In order to proceed with Upgrade process, SELinux should be set into permissive mode if it was\n    in enforcing mode.\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": ["SelinuxPermissiveDecision"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/setuptargetrepos", "name": "setuptargetrepos", "class_name": "SetupTargetRepos", "description": "\n    Produces list of repositories that should be available to be used by Upgrade process.\n\n    Based on current set of Red Hat Enterprise Linux repositories, produces the list of target\n    repositories. Additionally process request to use custom repositories during the upgrade\n    transaction.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["CustomTargetRepository", "RepositoriesSetupTasks", "RHUIInfo", "RepositoriesMapping", "RepositoriesBlacklisted", "RepositoriesFacts", "UsedRepositories"], "produces": ["SkippedRepositories", "TargetRepositories"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scancpu", "name": "scancpu", "class_name": "ScanCPU", "description": "Scan CPUs of the machine.", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["DeviceDriverDeprecationData"], "produces": ["CPUInfo", "DetectedDeviceOrDriver"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/opensshpermitrootlogincheck", "name": "openssh_permit_root_login", "class_name": "OpenSshPermitRootLoginCheck", "description": "\n    OpenSSH no longer allows root logins with password.\n\n    Check the values of PermitRootLogin in OpenSSH server configuration file\n    and warn about potential issues after upgrade to the next major version of RHEL.\n\n    The RHEL8 still provided default configuration that allowed root logins,\n    which can lead to possible unwanted changes during the upgrade\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["OpenSshConfig"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/redhatsignedrpmcheck", "name": "red_hat_signed_rpm_check", "class_name": "RedHatSignedRpmCheck", "description": "\n    Check if there are packages not signed by Red Hat in use. If yes, warn user about it.\n\n    If any any installed RPM package does not contain a valid signature from Red Hat, a message\n    containing a warning is produced.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["InstalledUnsignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/applytransactionworkarounds", "name": "applytransactionworkarounds", "class_name": "ApplyTransactionWorkarounds", "description": "\n    Executes registered workaround scripts on the system before the upgrade transaction\n    ", "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "consumes": ["DNFWorkaround"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/repositoriesmapping", "name": "repository_mapping", "class_name": "RepositoriesMappingScanner", "description": "\n    Produces message containing repository mapping based on provided file.\n\n    The actor filters out data irrelevant to the current IPU (data with different\n    source/target major versions) from the raw repository mapping data.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["RepositoriesMapping"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checknfs", "name": "check_nfs", "class_name": "CheckNfs", "description": "\n    Check if NFS filesystem is in use. If yes, inhibit the upgrade process.\n\n    Actor looks for NFS in the following sources: /ets/fstab, mount and systemd-mount.\n    If there is NFS in any of the mentioned sources, actors inhibits the upgrade.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["StorageInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/persistentnetnamesconfig", "name": "persistentnetnamesconfig", "class_name": "PersistentNetNamesConfig", "description": "\n    Generate udev persistent network naming configuration\n\n    This actor generates systemd-udevd link files for each physical ethernet interface present on RHEL-7\n    in case we notice that interface name differs on RHEL-8. Link file configuration will assign RHEL-7 version of\n    a name. Actors produces list of interfaces which changed name between RHEL-7 and RHEL-8.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["PersistentNetNamesFactsInitramfs", "PersistentNetNamesFacts"], "produces": ["InitrdIncludes", "RenamedInterfaces", "TargetInitramfsTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkskippedrepositories", "name": "check_skipped_repositories", "class_name": "CheckSkippedRepositories", "description": "\n    Produces a report if any repositories enabled on the system are going to be skipped.\n\n    The report produced by this actor should additionally include any package that is affected due to skipping\n    the repository.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["SkippedRepositories"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/verifydialogs", "name": "verify_check_results", "class_name": "VerifyDialogs", "description": "\n    Check all dialogs and notify that user needs to make some choices.\n\n    Report messages containing all dialogs with questions that need to be answered will be produced.\n    ", "tags": ["ReportPhaseTag", "IPUWorkflowTag"], "consumes": ["DialogModel"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": []}, {"path": "actors/udev/udevadminfo", "name": "udevadm_info", "class_name": "UdevAdmInfo", "description": "\n    Produces data exported by the \"udevadm info\" command.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["UdevAdmInfoData"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/enablerhsmtargetrepos", "name": "enable_rhsm_target_repos", "class_name": "EnableRHSMTargetRepos", "description": "\n    On the upgraded target system, set release and enable repositories that were used during the upgrade\n    transaction.\n\n    We are enabling those RHEL target repos that are equivalent to the enabled source RHEL ones available.\n    The BaseOS and AppStream repos are enabled on the target RHEL by default. Any other repository needs to\n    be enabled specifically using the subscription-manager (RHSM) utility. In case some custom repo was used\n    during the upgrade transaction, it won't be enabled by this actor as it is unknown to the subscription-manager.\n\n    We need to overwrite any RHSM release that may have been set before the upgrade, e.g. 7.6. Reasons:\n    - If we leave the old source RHEL release set, dnf calls on the upgraded target RHEL would fail.\n    - If we merely unset the release, users might end up updating the system to a newer version than the upgrade\n      was supposed to be upgrading to.\n    ", "tags": ["IPUWorkflowTag", "FirstBootPhaseTag"], "consumes": ["UsedTargetRepositories"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/removeupgradebootentry", "name": "remove_upgrade_boot_entry", "class_name": "RemoveUpgradeBootEntry", "description": "\n    Remove boot entry for Leapp provided initramfs.\n\n    After upgrade process used initramfs after reboot, this entry is not necessary anymore.\n    ", "tags": ["IPUWorkflowTag", "InitRamStartPhaseTag"], "consumes": ["FirmwareFacts", "BootContent"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkgrubcore", "name": "check_grub_core", "class_name": "CheckGrubCore", "description": "\n    Check whether we are on legacy (BIOS) system and instruct Leapp to upgrade GRUB core\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["FirmwareFacts", "GrubDevice"], "produces": ["UpdateGrub", "Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checktargetrepos", "name": "checktargetrepos", "class_name": "Checktargetrepos", "description": "\n    Check whether target yum repositories are specified.\n\n    RHSM | RHUI | ER | CTR | CTRF || result\n    -----+------+----+-----+------++-------\n     Yes | ---- | -- | --- | ---- || -\n    -----+------+----+-----+------++-------\n     No  | Yes  | -- | --- | ---- || -\n    -----+------+----+-----+------++-------\n     No  | No   | -- | No  | No   || inhibit\n    -----+------+----+-----+------++-------\n     No  | No   | -- | No  | Yes  || inhibit\n    -----+------+----+-----+------++-------\n     No  | No   | No | Yes | No   || warn/report info\n    -----+------+----+-----+------++-------\n     No  | No   | No | Yes | Yes  || -\n    -----+------+----+-----+------++-------\n     No  | No   | Yes| Yes | No   || -\n    -----+------+----+-----+------++-------\n     No  | No   | Yes| Yes | Yes  || -\n\n       ER   - config.get_env('LEAPP_ENABLE_REPOS') is non-empty\n       CTR  - CustomTargetRepositories found\n       CTRF - the expected CustomTargetRepositoryFile found\n       RHSM - RHSM is used (it is not skipped)\n       RHUI - RHUIInfo msg is consumed\n\n    This is not 100 % reliable check. This cover just the most obvious cases\n    that are expected to fail. Reporting of such issues in this way, here,\n    will be probably much more clear, without additional errors that could\n    be raised.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["CustomTargetRepositoryFile", "RHUIInfo", "TargetRepositories"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/inhibitwhenluks", "name": "check_luks_and_inhibit", "class_name": "InhibitWhenLuks", "description": "\n    Check if any encrypted partitions is in use. If yes, inhibit the upgrade process.\n\n    Upgrading system with encrypted partition is not supported.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["StorageInfo", "CephInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/detectkerneldrivers", "name": "detect_kernel_drivers", "class_name": "DetectKernelDrivers", "description": "\n    Matches all currently loaded kernel drivers against known deprecated and removed drivers.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["DeviceDriverDeprecationData", "ActiveKernelModulesFacts"], "produces": ["DetectedDeviceOrDriver"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": []}, {"path": "actors/setetcreleasever", "name": "set_etc_releasever", "class_name": "SetEtcReleaseVer", "description": "\n    Release version in /etc/dnf/vars/releasever will be set to the current target release\n\n    If Leapp detects \"releasever\" variable is either configured through DNF/YUM configuration\n    file and/or the system is using RHUI infrastructure, release version will be set to the target\n    release version in order to avoid issues with repofile URLs (when --release option is not provided)\n    in cases where there is the previous major.minor version value in the configuration. This will also\n    ensure the system stays on the target version after the upgrade.\n    ", "tags": ["IPUWorkflowTag", "ApplicationsPhaseTag"], "consumes": ["PkgManagerInfo", "RHUIInfo"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/removeresumeservice", "name": "remove_systemd_resume_service", "class_name": "RemoveSystemdResumeService", "description": "\n    Remove systemd service to launch Leapp.\n\n    After system was rebooted and process resumed, this service is not necessary anymore.\n    ", "tags": ["_AfterFirstBootPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/detectmissingnewlineingrubcfg", "name": "detect_missing_newline_in_grub_cfg", "class_name": "DetectMissingNewlineInGrubCfg", "description": "\n    Check the grub configuration for a missing newline at its end.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report", "GrubConfigError"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/dnfpackagedownload", "name": "dnf_package_download", "class_name": "DnfPackageDownload", "description": "\n    Actor that invokes DNF to download the RPMs required for the upgrade transaction.\n\n    This actor uses the rhel-upgrade plugin to perform the download of RPM for the transaction and performing the\n    transaction test, that is something like a dry run trying to determine the success of the upgrade.\n    ", "tags": ["IPUWorkflowTag", "DownloadPhaseTag"], "consumes": ["XFSPresence", "RHUIInfo", "TargetUserSpaceInfo", "StorageInfo", "DNFPluginTask", "UsedTargetRepositories", "FilteredRpmTransactionTasks", "DNFWorkaround"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/scanfilesfortargetuserspace", "name": "scan_files_for_target_userspace", "class_name": "ScanFilesForTargetUserspace", "description": "\n    Scan the source system and identify files that will be copied into the target userspace when it is created.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["TargetUserSpacePreupgradeTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/opensshconfigscanner", "name": "read_openssh_config", "class_name": "OpenSshConfigScanner", "description": "\n    Collect information about the OpenSSH configuration.\n\n    Currently supporting the following options:\n\n     * PermitRootLogin\n     * UsePrivilegeSeparation\n     * Protocol\n     * Ciphers\n     * MACs\n     * Subsystem sftp\n\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["OpenSshConfig"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkmemory", "name": "checkmemory", "class_name": "CheckMemory", "description": "\n    The actor check the size of RAM against RHEL8 minimal hardware requirements\n\n    Using the following resource: https://access.redhat.com/articles/rhel-limits\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["MemoryInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scancustomrepofile", "name": "scan_custom_repofile", "class_name": "ScanCustomRepofile", "description": "\n    Scan the custom /etc/leapp/files/leapp_upgrade_repositories.repo repo file.\n\n    This is the official path where to put the YUM/DNF repository file with\n    custom repositories for the target system. These repositories will be used\n    automatically for the in-place upgrade despite the enable/disable settings.\n\n    Additionally the CustomTargetRepositoryFile message is produced if the file\n    exists to let the other actors know they should handle the file as well.\n\n    If the file doesn't exist, nothing happens.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["CustomTargetRepository", "CustomTargetRepositoryFile"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/baculacheck", "name": "bacula_check", "class_name": "BaculaCheck", "description": "\n    Actor checking for presence of Bacula installation.\n\n    Provides user with information related to upgrading systems\n    with Bacula installed.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/pcidevicesscanner", "name": "pci_devices_scanner", "class_name": "PCIDevicesScanner", "description": "\n    Provides data about existing PCI Devices.\n\n    After collecting data from lspci, a message with relevant data will be produced.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["DeviceDriverDeprecationData"], "produces": ["PCIDevices", "DetectedDeviceOrDriver"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scansubscriptionmanagerinfo", "name": "scan_subscription_manager_info", "class_name": "ScanSubscriptionManagerInfo", "description": "\n    Scans the current system for subscription manager information\n\n    Retrieves information about enabled and available repositories, attached SKUs, product certificates and release\n    from the current system without modifying it.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["RHSMInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/getinstalleddesktops", "name": "get_installed_desktops", "class_name": "GetInstalledDesktops", "description": "\n    Actor checks if kde or gnome desktop environments\n    are installed and what desktop is default.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRPM"], "produces": ["InstalledDesktopsFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/commonleappdracutmodules", "name": "common_leapp_dracut_modules", "class_name": "CommonLeappDracutModules", "description": "\n    Influences the generation of the initram disk\n\n    The initram disk generation is influenced by specifying necessary dracut modules and packages that are\n    required to be installed in the target userspace so required fields can be included.\n    Modules to be added are specified via the UpgradeDracutModule message.\n    Packages to install on the target userspace are specified by the RequiredUpgradeInitramPackages message.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["UpgradeDracutModule", "TargetUserSpaceUpgradeTasks", "UpgradeInitramfsTasks", "RequiredUpgradeInitramPackages"], "apis": [], "dialogs": [], "tools": [], "files": ["files"], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checketcreleasever", "name": "check_etc_releasever", "class_name": "CheckEtcReleasever", "description": "\n    Check releasever info and provide a guidance based on the facts\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["PkgManagerInfo", "RHUIInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/updategrubcore", "name": "update_grub_core", "class_name": "UpdateGrubCore", "description": "\n    On legacy (BIOS) systems, GRUB core (located in the gap between the MBR and the\n    first partition), does not get automatically updated when GRUB is upgraded.\n    ", "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "consumes": ["FirmwareFacts", "TransactionCompleted"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/biosdevname", "name": "biosdevname", "class_name": "Biosdevname", "description": "\n    Enable biosdevname on the target RHEL system if all interfaces on the source RHEL\n    system use biosdevname naming scheme and if machine vendor is DELL\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["PersistentNetNamesFacts"], "produces": ["KernelCmdlineArg"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/repositoriesblacklist", "name": "repositories_blacklist", "class_name": "RepositoriesBlacklist", "description": "\n    Exclude target repositories provided by Red Hat without support.\n\n    Conditions to exclude:\n    - there are not such repositories already enabled on the source system\n      (e.g. \"Optional\" repositories)\n    - such repositories are not required for the upgrade explicitly by the user\n      (e.g. via the --enablerepo option or via the /etc/leapp/files/leapp_upgrade_repositories.repo file)\n\n    E.g. CRB repository is provided by Red Hat but it is without the support.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["RepositoriesMapping", "CustomTargetRepository", "RepositoriesFacts"], "produces": ["RepositoriesBlacklisted", "Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/storagescanner", "name": "storage_scanner", "class_name": "StorageScanner", "description": "\n    Provides data about storage settings.\n\n    After collecting data from tools like mount, lsblk, pvs, vgs and lvdisplay, and relevant files\n    under /proc/partitions and /etc/fstab, a message with relevant data will be produced.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["Report", "StorageInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/addupgradebootentry", "name": "add_upgrade_boot_entry", "class_name": "AddUpgradeBootEntry", "description": "\n    Add new boot entry for Leapp provided initramfs.\n\n    Using new boot entry, Leapp can continue the upgrade process in the initramfs after reboot\n    ", "tags": ["IPUWorkflowTag", "InterimPreparationPhaseTag"], "consumes": ["FirmwareFacts", "GrubConfigError", "BootContent", "TransactionDryRun"], "produces": ["TargetKernelCmdlineArgTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/kernel/checkinstalledkernels", "name": "check_installed_kernels", "class_name": "CheckInstalledKernels", "description": "\n    Inhibit IPU (in-place upgrade) when installed kernels conflict with a safe upgrade.\n\n    a) Inhibit when multiple kernels are installed on a s390x machine\n\n    When on s390x architecture, we are not able to upgrade correctly\n    when any kernel is expected to be uninstalled during the rpm\n    upgrade transaction now. We discovered recently that removal of\n    old kernels is not handled correctly during the IPU. In case the\n    maximum number of kernels are installed, the oldest one is\n    automatically uninstalled during the rpm upgrade transaction.\n\n    To prevent any related troubles during the IPU, inhibit the IPU\n    on s390x unless just one kernel is installed, until the issue will\n    be fixed correctly.\n\n    b) Inhibit when machine is not booted into latest installed kernel\n\n    It is strictly required that during the upgrade the machine is\n    booted into the latest installed kernel. Upgrading with older\n    kernels could cause unexpected issues.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkbootavailspace", "name": "check_boot_avail_space", "class_name": "CheckBootAvailSpace", "description": "\n    Check if at least 100Mib of available space on /boot. If not, inhibit the upgrade process.\n\n    Rationale for the requirement of 100MiB:\n    - Before reboot into initramfs, the CopyInitramfsToBoot actor copies kernel and initramfs to\n      /boot, together worth of 66MiB.\n    - After booting into initramfs, the RemoveBootFiles actor removes the copied kernel and\n      initramfs from /boot.\n    - The DnfShellRpmUpgrade installs a new kernel-core package which puts additional 54MiB of data\n      to /boot.\n    - Even though the available space needed at the time of writing this actor is 66MiB, the\n      additional 100-66=34MiB is a leeway for potential growth of the kernel or initramfs in size.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkipaserver", "name": "check_ipa_server", "class_name": "CheckIPAServer", "description": "\n    Check for ipa-server and inhibit upgrade\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["IpaInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scankernelcmdline", "name": "scan_kernel_cmdline", "class_name": "ScanKernelCmdline", "description": "\n    No documentation has been provided for the scan_kernel_cmdline actor.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["KernelCmdline"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/xfsinfoscanner", "name": "xfs_info_scanner", "class_name": "XFSInfoScanner", "description": "\n    This actor scans all mounted mountpoints for XFS information\n\n    The actor will check each mountpoint reported in the StorageInfo message, if the mountpoint is a partition with XFS\n    using ftype = 0. The actor will produce a message with the findings.\n    It will contain a list of all XFS mountpoints with ftype = 0 so that those mountpoints can be handled appropriately\n    for the overlayfs that is going to be created.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["StorageInfo"], "produces": ["XFSPresence"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkmountoptions", "name": "check_mount_options", "class_name": "CheckMountOptions", "description": "\n    Check for mount options preventing the upgrade.\n\n    Checks performed:\n        - /var is mounted with the noexec option\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["StorageInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkosrelease", "name": "check_os_release", "class_name": "CheckOSRelease", "description": "\n    Check if the current RHEL minor version is supported. If not, inhibit the upgrade process.\n\n    This check can be skipped by using the LEAPP_DEVEL_SKIP_CHECK_OS_RELEASE environment variable.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/cephvolumescan", "name": "cephvolumescan", "class_name": "CephVolumeScan", "description": "\n    Retrieves the list of encrypted Ceph OSD\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRPM"], "produces": ["CephInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/kernelcmdlineconfig", "name": "kernelcmdlineconfig", "class_name": "KernelCmdlineConfig", "description": "\n    Append extra arguments to the target RHEL kernel command line\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": ["FirmwareFacts", "InstalledTargetKernelVersion", "KernelCmdlineArg", "TargetKernelCmdlineArgTasks"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/rootscanner", "name": "root_scanner", "class_name": "RootScanner", "description": "\n    Scan the system root directory and produce a message containing\n    information about its subdirectories.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["RootDirectory"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/cloud/checkrhui", "name": "checkrhui", "class_name": "CheckRHUI", "description": "\n    Check if system is using RHUI infrastructure (on public cloud) and send messages to\n    provide additional data needed for upgrade.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRPM"], "produces": ["RHUIInfo", "RequiredTargetUserspacePackages", "CopyFile", "DNFPluginTask", "KernelCmdlineArg", "TargetUserSpacePreupgradeTasks", "RpmTransactionTasks", "Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/cloud/grubenvtofile", "name": "grubenvtofile", "class_name": "GrubenvToFile", "description": "\n    Convert \"grubenv\" symlink to a regular file on Azure hybrid images using BIOS.\n\n    Azure images provided by Red Hat aim for hybrid (BIOS/EFI) functionality,\n    however, currently GRUB is not able to see the \"grubenv\" file if it is a symlink\n    to a different partition (default on EFI with grub2-efi pkg installed) and\n    fails on BIOS systems. This actor converts the symlink to the normal file\n    with the content of grubenv on the EFI partition in case the system is using BIOS\n    and running on the Azure cloud. This action is reported in the preupgrade phase.\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": ["HybridImage"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/cloud/checkhybridimage", "name": "checkhybridimage", "class_name": "CheckHybridImage", "description": "\n    Check if the system is using Azure hybrid image.\n\n    These images have a default relative symlink to EFI\n    partition even when booted using BIOS and in such cases\n    GRUB is not able find \"grubenv\" to get the kernel cmdline\n    options and fails to boot after upgrade`.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRPM", "FirmwareFacts"], "produces": ["HybridImage"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/usedrepositoriesscanner", "name": "used_repository_scanner", "class_name": "UsedRepositoriesScanner", "description": "\n    Scan used enabled repositories\n\n    Based on lists of installed RPM packages and enabled RPM repositories, check which packages\n    were installed from each repository.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["InstalledRedHatSignedRPM", "RepositoriesFacts"], "produces": ["UsedRepositories"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checkfips", "name": "check_fips", "class_name": "CheckFips", "description": "\n    Inhibit upgrade if FIPS is detected as enabled.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["KernelCmdline"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/scanclienablerepo", "name": "scanclienablerepo", "class_name": "ScanCLIenablrepo", "description": "\n    Produce CustomTargetRepository based on the LEAPP_ENABLE_REPOS in config.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["CustomTargetRepository"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/unsupportedupgradecheck", "name": "unsupported_upgrade_check", "class_name": "UnsupportedUpgradeCheck", "description": "\n    Checks environment variables and produces a warning report if the upgrade is unsupported.\n\n    Upgrade is unsupported if any LEAPP_DEVEL_* variable is used or an experimental actor is enabled.\n    This can be overridden by setting the variable LEAPP_UNSUPPORTED (at user's own risk).\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/verifycheckresults", "name": "verify_check_results", "class_name": "VerifyCheckResults", "description": "\n    Check all generated results messages and notify user about them.\n\n    A report file containing all messages will be generated, together with log messages displayed\n    to the user.\n    ", "tags": ["ReportPhaseTag", "IPUWorkflowTag"], "consumes": ["Report"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/selinux/selinuxprepare", "name": "selinuxprepare", "class_name": "SELinuxPrepare", "description": "\n    Remove selinux policy customizations before updating selinux-policy* packages\n\n    Policy customizations in the original system could cause policy package\n    upgrade to fail and therefore need to be removed.\n    Customizations introduced by semanage are removed first, followed by custom\n    policy modules gathered by SELinuxContentScanner.\n    ", "tags": ["PreparationPhaseTag", "IPUWorkflowTag"], "consumes": ["SELinuxModules", "SELinuxCustom"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/selinux/selinuxapplycustom", "name": "selinuxapplycustom", "class_name": "SELinuxApplyCustom", "description": "\n    Re-apply SELinux customizations from the original RHEL installation\n\n    Re-apply SELinux policy customizations (custom policy modules and changes\n    introduced by semanage). Any changes (due to incompatibility with\n    SELinux policy in the upgraded system) are reported to user.\n    ", "tags": ["ApplicationsPhaseTag", "IPUWorkflowTag"], "consumes": ["SELinuxModules", "SELinuxCustom"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/selinux/selinuxcontentscanner", "name": "selinuxcontentscanner", "class_name": "SELinuxContentScanner", "description": "\n    Scan the system for any SELinux customizations\n\n    Find SELinux policy customizations (custom policy modules and changes\n    introduced by semanage) and save them in SELinuxModules and SELinuxCustom\n    models. Customizations that are incompatible with SELinux policy on RHEL-8\n    are removed.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["SELinuxFacts"], "produces": ["RpmTransactionTasks", "SELinuxModules", "SELinuxCustom", "SELinuxRequestRPMs"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/preparepythonworkround", "name": "prepare_python_workround", "class_name": "PreparePythonWorkround", "description": "\n    Prepare environment to be able to run leapp with Python3 in initrd.\n\n    These are the current necessary steps to be able to run Leapp with Python3.\n    Basically, we create directory (now /root/tmp_leapp_py3/). We will put\n    symlinks inside which will point to leapp python packages. Additionally,\n    we create new script that will import expected modules and run leapp again.\n    ", "tags": ["IPUWorkflowTag", "RPMUpgradePhaseTag"], "consumes": [], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkrhsmsku", "name": "check_rhsmsku", "class_name": "CheckRedHatSubscriptionManagerSKU", "description": "\n    Ensure the system is subscribed to the subscription manager\n\n    This actor verifies that the system is correctly subscribed to via the Red Hat Subscription Manager and\n    has attached SKUs. The actor will inhibit the upgrade if there are none and RHSM is not supposed\n    to be skipped.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["RHSMInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/forcedefaultboottotargetkernelversion", "name": "force_default_boot_to_target_kernel_version", "class_name": "ForceDefaultBootToTargetKernelVersion", "description": "\n    Ensure the default boot entry is set to the new target kernel\n\n    This Actor ensure that the default entry in the boot loader is set to the newly installed kernel version.\n    There have been cases when the default boot entry was not set to the default kernel version. In this case the\n    actor will log a warning for debugging purposes.\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledTargetKernelVersion"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scheduleselinuxrelabeling", "name": "schedule_se_linux_relabelling", "class_name": "ScheduleSeLinuxRelabeling", "description": "\n    Schedule SELinux relabelling.\n\n    If SELinux status was set to permissive or enforcing, a relabelling is necessary.\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": ["SelinuxRelabelDecision"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checkselinux", "name": "check_se_linux", "class_name": "CheckSelinux", "description": "\n    Check SELinux status and produce decision messages for further action.\n\n    Based on SELinux status produces decision messages to relabeling and changing status if\n    necessary\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["SELinuxFacts"], "produces": ["SelinuxRelabelDecision", "Report", "KernelCmdlineArg", "SelinuxPermissiveDecision"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scaninstalledtargetkernelversion", "name": "scan_installed_target_kernel_version", "class_name": "ScanInstalledTargetKernelVersion", "description": "\n    Scan for the version of the newly installed kernel\n\n    This actor will query rpm for all kernel packages and reports the first\n    matching target system kernel RPM. In case the RHEL Real Time has been detected on\n    the original system, the kernel-rt rpm is searched. If the rpm is missing,\n    fallback for standard kernel RPM.\n    ", "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "consumes": ["TransactionCompleted"], "produces": ["InstalledTargetKernelVersion"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/getenabledmodules", "name": "get_enabled_modules", "class_name": "GetEnabledModules", "description": "\n    Provides data about which module streams are enabled on the source system.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["EnabledModules"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/dnfupgradetransaction", "name": "dnf_upgrade_transaction", "class_name": "DnfUpgradeTransaction", "description": "\n    Setup and call DNF upgrade command\n\n    Based on previously calculated RPM transaction data, this actor will setup and call\n    rhel-upgrade DNF plugin with necessary parameters\n    ", "tags": ["RPMUpgradePhaseTag", "IPUWorkflowTag"], "consumes": ["TargetUserSpaceInfo", "StorageInfo", "FilteredRpmTransactionTasks", "DNFPluginTask", "UsedTargetRepositories", "RHSMInfo", "DNFWorkaround"], "produces": ["TransactionCompleted"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/persistentnetnamesinitramfs", "name": "persistentnetnamesinitramfs", "class_name": "PersistentNetNamesInitramfs", "description": "\n    Get network interface information for physical ethernet interfaces with the new kernel in initramfs.\n\n    This actor does exactly the same job as PersistentNetNames actor except that it runs in a later phase.\n    ", "tags": ["LateTestsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["PersistentNetNamesFactsInitramfs"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/checkdetecteddevicesanddrivers", "name": "check_detected_devices_and_drivers", "class_name": "CheckDetectedDevicesAndDrivers", "description": "\n    Checks whether or not detected devices and drivers are usable on the target system.\n\n    In case a driver is no longer present in the target system, an inhibitor will be raised.\n    If the device or driver is not maintained anymore, a warning report will be generated.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["DetectedDeviceOrDriver"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": []}, {"path": "actors/systemd/checksystemdservicetasks", "name": "check_systemd_services_tasks", "class_name": "CheckSystemdServicesTasks", "description": "\n    Inhibits upgrade if SystemdServicesTasks tasks are in conflict\n\n    There is possibility, that SystemdServicesTasks messages with conflicting\n    requested service states could be produced. For example a service is\n    requested to be both enabled and disabled. This actor inhibits upgrade in\n    such cases.\n\n    Note: We expect that SystemdServicesTasks could be produced even after the\n    TargetTransactionChecksPhase (e.g. during the ApplicationPhase). The\n    purpose of this actor is to report collisions in case we can already detect\n    them. In case of conflicts caused by produced messages later we just log\n    the collisions and the services will end up disabled.\n    ", "tags": ["TargetTransactionChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["SystemdServicesTasks"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/systemd/setsystemdservicesstates", "name": "set_systemd_services_state", "class_name": "SetSystemdServicesState", "description": "\n    According to input messages sets systemd services states on the target system\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": ["SystemdServicesTasks"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/efibootorderfix/finalization", "name": "efi_finalization_fix", "class_name": "EfiFinalizationFix", "description": "\n    Adjust EFI boot entry for final reboot\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/efibootorderfix/eficheckboot", "name": "efi_check_boot", "class_name": "EfiCheckBoot", "description": "\n    Adjust EFI boot entry for first reboot\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["FirmwareFacts"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/efibootorderfix/interim", "name": "efi_interim_fix", "class_name": "EfiInterimFix", "description": "\n    Adjust EFI boot entry for first reboot\n    ", "tags": ["InterimPreparationPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/rpmtransactionconfigtaskscollector", "name": "rpm_transaction_config_tasks_collector", "class_name": "RpmTransactionConfigTasksCollector", "description": "\n    Provides additional RPM transaction tasks from /etc/leapp/transaction.\n\n    After collecting task data from /etc/leapp/transaction directory, a message with relevant data\n    will be produced.\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": ["InstalledRedHatSignedRPM"], "produces": ["RpmTransactionTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checknonmountboots390", "name": "check_non_mount_boot_s390", "class_name": "CheckNonMountBootS390", "description": "\n    Inhibits on s390 when /boot is NOT on a separate partition.\n\n    Due to some problems, if /boot is not on a separate partition, leapp is deleting the content of /boot.\n    To avoid this from happening, we are inhibiting the upgrade process until this problem has been solved.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/peseventsscanner", "name": "pes_events_scanner", "class_name": "PesEventsScanner", "description": "\n    Provides data about package events from Package Evolution Service.\n\n    After collecting data from a provided JSON file containing Package Evolution Service events, a\n    message with relevant data will be produced to help DNF Upgrade transaction calculation.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["RHUIInfo", "RepositoriesMapping", "InstalledRedHatSignedRPM", "RepositoriesBlacklisted", "RepositoriesFacts", "RpmTransactionTasks", "EnabledModules"], "produces": ["PESRpmTransactionTasks", "Report", "RepositoriesSetupTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/redhatsignedrpmscanner", "name": "red_hat_signed_rpm_scanner", "class_name": "RedHatSignedRpmScanner", "description": "Provide data about installed RPM Packages signed by Red Hat.\n\n    After filtering the list of installed RPM packages by signature, a message\n    with relevant data will be produced.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": ["InstalledRPM"], "produces": ["InstalledRedHatSignedRPM", "InstalledUnsignedRPM"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/systemfacts", "name": "system_facts", "class_name": "SystemFactsActor", "description": "\n    Provides data about many facts from system.\n\n    After collecting data from multiple tools, messages with relevant data will be produced to\n    describe:\n      - Sysctl variables;\n      - Active Linux Kernel Modules;\n      - Users;\n      - Groups;\n      - Package repositories;\n      - SELinux status;\n      - Firewalls status.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["UsersFacts", "ActiveKernelModulesFacts", "SELinuxFacts", "SysctlVariablesFacts", "Report", "FirmwareFacts", "DefaultGrubInfo", "GrubCfgBios", "RepositoriesFacts", "GroupsFacts", "FirewallsFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/localreposinhibit", "name": "local_repos_inhibit", "class_name": "LocalReposInhibit", "description": "Inhibits the upgrade if local repositories were found.", "tags": ["IPUWorkflowTag", "TargetTransactionChecksPhaseTag"], "consumes": ["TMPTargetRepositoriesFacts", "UsedTargetRepositories"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/ipuworkflowconfig", "name": "ipu_workflow_config", "class_name": "IPUWorkflowConfig", "description": "\n    IPU workflow config actor\n    ", "tags": ["IPUWorkflowTag"], "consumes": [], "produces": ["Report", "IPUConfig"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/transactionworkarounds", "name": "transaction_workarounds", "class_name": "TransactionWorkarounds", "description": "\n    Provides additional RPM transaction tasks based on bundled RPM packages.\n\n    After collecting bundled RPM packages, a message with relevant data will be produced.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["RpmTransactionTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checksystemarch", "name": "check_system_arch", "class_name": "CheckSystemArch", "description": "\n    Check if system is running at a supported architecture. If no, inhibit the upgrade process.\n\n    Base on collected system facts, verify if current architecture is supported, otherwise produces\n    a message to inhibit upgrade process\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/persistentnetnames", "name": "persistentnetnames", "class_name": "PersistentNetNames", "description": "\n    Get network interface information for physical ethernet interfaces of the original system.\n\n    Gather information like PCI topology, MAC address and interface name on the\n    original system. Those data are provided through the PersistentNetNamesFacts\n    model.\n\n    See the persistentnetnamesinitramfs actor that is very same but processed\n    during early phases in initrams to gather the same data but using already\n    new kernel of the target system to be able to reflect changes affected\n    by the new kernel (see the PersistentNetNamesConfig actor).\n    ", "tags": ["FactsPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["PersistentNetNamesFacts"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/dnftransactioncheck", "name": "dnf_transaction_check", "class_name": "DnfTransactionCheck", "description": "\n    This actor tries to solve the RPM transaction to verify the all package dependencies can be successfully resolved.\n    ", "tags": ["IPUWorkflowTag", "TargetTransactionChecksPhaseTag"], "consumes": ["XFSPresence", "StorageInfo", "DNFWorkaround", "DNFPluginTask", "UsedTargetRepositories", "FilteredRpmTransactionTasks", "TargetUserSpaceInfo"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/initramfs/upgradeinitramfsgenerator", "name": "upgrade_initramfs_generator", "class_name": "UpgradeInitramfsGenerator", "description": "\n    Creates the upgrade initramfs\n\n    Creates an initram disk within a systemd-nspawn container using the target\n    system userspace, including new kernel. The creation of the initram disk\n    can be influenced with the UpgradeInitramfsTasks message (e.g. specifying\n    what files or dracut modules should be installed in the upgrade initramfs)\n\n    See the UpgradeInitramfsTasks model for more details.\n    ", "tags": ["IPUWorkflowTag", "InterimPreparationPhaseTag"], "consumes": ["TargetUserSpaceUpgradeTasks", "RequiredUpgradeInitramPackages", "UpgradeInitramfsTasks", "UpgradeDracutModule", "UsedTargetRepositories", "TargetUserSpaceInfo"], "produces": ["BootContent"], "apis": [], "dialogs": [], "tools": [], "files": ["files"], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/initramfs/checkinitramfstasks", "name": "check_initramfs_tasks", "class_name": "CheckInitramfsTasks", "description": "\n    Inhibit the upgrade if conflicting \"initramfs\" tasks are detected\n\n    It's possible that some actors could provide conflicting requests\n    (e.g. install system dracut module A & custom (from own path) dracut\n    module A). This actor prevents system from upgrading if conflicting tasks\n    for the upgrade or target initramfses are detected.\n    ", "tags": ["TargetTransactionChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["UpgradeInitramfsTasks", "TargetInitramfsTasks"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/initramfs/tmpactor", "name": "tmp_actor_to_satisfy_sanity_checks", "class_name": "TMPActorToSatisfySanityChecks", "description": "\n    The actor does NOTHING but satisfy static sanity checks\n\n    The actor is supposed to be removed in future once we resolve issue with\n    sanity tests. See https://github.com/oamg/leapp/pull/680 for more details\n    about the problems.\n    ", "tags": ["TargetTransactionChecksPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["TargetInitramfsTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/initramfs/targetinitramfsgenerator", "name": "target_initramfs_generator", "class_name": "TargetInitramfsGenerator", "description": "\n    Regenerate the target RHEL major version initrd and include files produced by other actors\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": ["InitrdIncludes", "InstalledTargetKernelVersion", "TargetInitramfsTasks"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/removebootfiles", "name": "remove_boot_files", "class_name": "RemoveBootFiles", "description": "\n    Remove Leapp provided initramfs from boot partition.\n\n    Since Leapp provided initramfs and kernel are already loaded into RAM at this phase, remove\n    them to have as little space requirements for boot partition as possible.\n    ", "tags": ["IPUWorkflowTag", "PreparationPhaseTag"], "consumes": ["BootContent"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkskipphase", "name": "check_skip_phase", "class_name": "CheckSkipPhase", "description": "\n    Skip all the subsequent phases until the report phase.\n\n    The phases that follow after the Checks phase work with the target\n    RHEL major version user space - stuff around preparing and checking\n    the rpm transaction. We do not want to process those phases in case of\n    inhibition - e.g. for a specific HW unsupported by the target system we\n    cannot do anything - we can just see some unclear errors in such case.\n    So we want to instead skip to the Reports phase to provide clear report\n    to user without confusing errors.\n\n    The actor is processed after all actors in the phase (that provides Report\n    messages) are processed.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["Report"], "produces": [], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/checkpersistentmounts", "name": "check_persistent_mounts", "class_name": "CheckPersistentMounts", "description": "\n    Check if mounts required to be persistent are mounted in persistent fashion.\n\n    Checks performed:\n        - if /var/lib/leapp is mounted it has an entry in /etc/fstab\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["StorageInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkyumpluginsenabled", "name": "check_yum_plugins_enabled", "class_name": "CheckYumPluginsEnabled", "description": "\n    Checks that the required yum plugins are enabled.\n    ", "tags": ["ChecksPhaseTag", "IPUWorkflowTag"], "consumes": ["PkgManagerInfo"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/reportsettargetrelease", "name": "report_set_target_release", "class_name": "ReportSetTargetRelease", "description": "\n    Reports information related to the release set in the subscription-manager after the upgrade.\n\n    When using Red Hat subscription-manager (RHSM), the release is set by default\n    to the target version release. In case of skipping the RHSM (--no-rhsm), the\n    release stays as it was on the source RHEL and user has to handle it manually\n    after the upgrade.\n    ", "tags": ["IPUWorkflowTag", "TargetTransactionChecksPhaseTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/checkrootsymlinks", "name": "check_root_symlinks", "class_name": "CheckRootSymlinks", "description": "\n    Check if the symlinks /bin and /lib are relative, not absolute.\n\n    After reboot, dracut fails if the links are absolute.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["RootDirectory"], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}, {"path": "actors/scanmemory", "name": "scanmemory", "class_name": "ScanMemory", "description": "Scan Memory of the machine.", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["MemoryInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/scandasd", "name": "scandasd", "class_name": "ScanDASD", "description": "\n    In case of s390x architecture, check whether DASD is used.\n\n    The current check is based just on existence of the /etc/dasd.conf file.\n    If it exists, produce UpgradeInitramfsTasks msg to ensure the file\n    is available inside the target userspace to be able to generate the\n    upgrade init ramdisk correctly.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["TargetUserSpaceUpgradeTasks", "UpgradeInitramfsTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/targetuserspacecreator", "name": "target_userspace_creator", "class_name": "TargetUserspaceCreator", "description": "\n    Initializes a directory to be populated as a minimal environment to run binaries from the target system.\n\n    The target userspace is set up in a directory so one can run it in a containerized environment to perform tasks\n    as if the system running would be the target system. This allows us to use the target system RPM stack including\n    DNF which gives us the ability to use RPM features from the target system.\n    The userspace environment is also used to generate a initram disk with dracut using the target system binaries\n    such as kernel, systemd etc etc\n    ", "tags": ["IPUWorkflowTag", "TargetTransactionFactsPhaseTag"], "consumes": ["XFSPresence", "RHUIInfo", "RequiredTargetUserspacePackages", "RepositoriesMapping", "StorageInfo", "CustomTargetRepositoryFile", "PkgManagerInfo", "TargetUserSpacePreupgradeTasks", "RepositoriesFacts", "TargetRepositories", "RHSMInfo"], "produces": ["Report", "UsedTargetRepositories", "TMPTargetRepositoriesFacts", "TargetUserSpaceInfo"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/createresumeservice", "name": "create_systemd_service", "class_name": "CreateSystemdResumeService", "description": "\n    Add a systemd service to launch Leapp.\n\n    Create a systemd service which will resume Leapp upgrade after the first reboot.\n    ", "tags": ["FinalizationPhaseTag", "IPUWorkflowTag"], "consumes": [], "produces": ["Report"], "apis": [], "dialogs": [], "tools": [], "files": ["files"], "libraries": [], "tests": ["tests"]}, {"path": "actors/loaddevicedriverdeprecationdata", "name": "load_device_driver_deprecation_data", "class_name": "LoadDeviceDriverDeprecationData", "description": "\n    Loads deprecation data for drivers and devices (PCI & CPU)\n\n    The data will either be loaded from the local /etc/leapp/files location or\n    fetched from the Red Hat remote service providing this data.\n    ", "tags": ["IPUWorkflowTag", "FactsPhaseTag"], "consumes": [], "produces": ["DeviceDriverDeprecationData"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": ["libraries"], "tests": ["tests"]}, {"path": "actors/dnfdryrun", "name": "dnf_dry_run", "class_name": "DnfDryRun", "description": "\n    Actor that invokes DNF to download the RPMs required for the upgrade transaction.\n\n    This actor uses the rhel-upgrade plugin to perform the download of RPM for the transaction and performing the\n    transaction test, that is something like a dry run trying to determine the success of the upgrade.\n    ", "tags": ["IPUWorkflowTag", "InterimPreparationPhaseTag"], "consumes": ["XFSPresence", "RHUIInfo", "TargetUserSpaceInfo", "StorageInfo", "DNFPluginTask", "UsedTargetRepositories", "BootContent", "FilteredRpmTransactionTasks", "DNFWorkaround"], "produces": ["TransactionDryRun"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": []}, {"path": "actors/filterrpmtransactionevents", "name": "check_rpm_transaction_events", "class_name": "FilterRpmTransactionTasks", "description": "\n    Filter RPM transaction events based on installed RPM packages\n\n    In order to calculate a working DNF Upgrade transaction, Leapp can collect data from multiple\n    sources and find workarounds for possible problems. This actor will filter all collected\n    workarounds and keep only those relevants to current system based on installed packages.\n    ", "tags": ["IPUWorkflowTag", "ChecksPhaseTag"], "consumes": ["PESRpmTransactionTasks", "InstalledRedHatSignedRPM", "RpmTransactionTasks"], "produces": ["FilteredRpmTransactionTasks"], "apis": [], "dialogs": [], "tools": [], "files": [], "libraries": [], "tests": ["tests"]}], "apis": [], "topics": [{"class_name": "BootPrepTopic", "name": "boot_prep", "messages": ["RequiredUpgradeInitramPackages", "TargetInitramfsTasks", "UpgradeInitramfsTasks", "UpgradeDracutModule", "DracutModule", "BootContent"]}, {"class_name": "RHSMTopic", "name": "rhsm", "messages": ["RHSMInfo"]}, {"class_name": "SCTPConfigTopic", "name": "sctp_config_topic", "messages": ["SCTPConfig"]}, {"class_name": "SystemFactsTopic", "name": "system_facts", "messages": ["UsersFacts", "SELinuxFacts", "IpaInfo", "SysctlVariable", "RootDirectory", "FirewallsFacts", "InstalledKdeAppsFacts", "RepositoryData", "CPUInfo", "DeviceDriverDeprecationEntry", "ActiveKernelModulesFacts", "RootSubdirectory", "Module", "HybridImage", "RemovedPAMModules", "KernelModuleParameter", "InstalledDesktopsFacts", "SatelliteFacts", "RepositoriesFacts", "GroupsFacts", "DeviceDriverDeprecationData", "DefaultGrub", "RepositoriesSetupTasks", "MemoryInfo", "User", "GrubDevice", "SysctlVariablesFacts", "UpdateGrub", "GrubConfigError", "InvalidRootSubdirectory", "FirewallStatus", "EnabledModules", "Authselect", "ActiveKernelModule", "RepositoriesBlacklisted", "GrubCfgBios", "DefaultGrubInfo", "TMPTargetRepositoriesFacts", "SatellitePostgresqlFacts", "FirmwareFacts", "RepositoryFile", "Group", "DetectedDeviceOrDriver"]}, {"class_name": "TargetUserspaceTopic", "name": "target_userspace", "messages": ["RequiredTargetUserspacePackages"]}, {"class_name": "TransactionTopic", "name": "transaction", "messages": ["TransactionCompleted", "RHELTargetRepository", "RepositoriesMapping", "TargetUserSpaceUpgradeTasks", "TargetRepositoryBase", "PESIDRepositoryEntry", "LeftoverPackages", "UsedTargetRepositories", "PESRpmTransactionTasks", "CopyFile", "TransactionDryRun", "SkippedRepositories", "SELinuxRequestRPMs", "CustomTargetRepository", "RepoMapEntry", "UsedTargetRepository", "RemovedPackages", "CustomTargetRepositoryFile", "TargetUserSpacePreupgradeTasks", "RpmTransactionTasks", "TargetRepositories", "FilteredRpmTransactionTasks", "TargetUserSpaceInfo"]}], "models": [{"class_name": "KernelModuleParameter", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "value": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "ActiveKernelModule", "fields": {"filename": {"nullable": false, "class_name": "String", "default": null, "help": null}, "parameters": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "KernelModuleParameter"}, "maximum": null, "minimum": 0}, "signature": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "ActiveKernelModulesFacts", "fields": {"kernel_modules": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "ActiveKernelModule"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "BootContent", "fields": {"kernel_path": {"nullable": false, "class_name": "String", "default": null, "help": "Filepath of the kernel copied to /boot/ by Leapp."}, "initram_path": {"nullable": false, "class_name": "String", "default": null, "help": "Filepath of the initramfs copied to /boot/ by Leapp."}}, "topic": "BootPrepTopic"}, {"class_name": "CephInfo", "fields": {"encrypted_volumes": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "CPUInfo", "fields": {"machine_type": {"nullable": true, "class_name": "Integer", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "DefaultGrub", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "value": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "DefaultGrubInfo", "fields": {"default_grub_info": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "DefaultGrub"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "DeviceDriverDeprecationEntry", "fields": {"deprecation_announced": {"nullable": false, "class_name": "String", "default": null, "help": null}, "device_id": {"nullable": false, "class_name": "String", "default": null, "help": null}, "device_type": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["pci", "cpu"]}, "device_name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "driver_name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "available_in_rhel": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "maximum": null, "minimum": 0}, "maintained_in_rhel": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "DeviceDriverDeprecationData", "fields": {"entries": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "DeviceDriverDeprecationEntry"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "DNFPluginTask", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "disable_in": {"nullable": false, "class_name": "List", "default": ["check", "download", "upgrade"], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "DNFWorkaround", "fields": {"script_path": {"nullable": false, "class_name": "String", "default": null, "help": null}, "display_name": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "FirewallStatus", "fields": {"enabled": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}, "active": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "FirewallsFacts", "fields": {"firewalld": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "FirewallStatus"}, "iptables": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "FirewallStatus"}, "ip6tables": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "FirewallStatus"}}, "topic": "SystemFactsTopic"}, {"class_name": "FirmwareFacts", "fields": {"firmware": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["bios", "efi"]}, "ppc64le_opal": {"nullable": true, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "Group", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "gid": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "members": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "GroupsFacts", "fields": {"groups": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Group"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "GrubCfgBios", "fields": {"insmod_bls": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "GrubConfigError", "fields": {"error_detected": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "error_type": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["GRUB_CMDLINE_LINUX syntax", "missing newline"]}}, "topic": "SystemFactsTopic"}, {"class_name": "GrubDevice", "fields": {"grub_device": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "UpdateGrub", "fields": {"grub_device": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "HybridImage", "fields": {"detected": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "DracutModule", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "module_path": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "BootPrepTopic"}, {"class_name": "UpgradeInitramfsTasks", "fields": {"include_files": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "include_dracut_modules": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "DracutModule"}, "maximum": null, "minimum": 0}}, "topic": "BootPrepTopic"}, {"class_name": "InitrdIncludes", "fields": {"files": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "UpgradeDracutModule", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "module_path": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "BootPrepTopic"}, {"class_name": "InstalledDesktopsFacts", "fields": {"gnome_installed": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "kde_installed": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "CurrentKernel", "fields": {"version": {"nullable": false, "class_name": "String", "default": null, "help": null}, "release": {"nullable": false, "class_name": "String", "default": null, "help": null}, "arch": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "RPM", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "epoch": {"nullable": false, "class_name": "String", "default": null, "help": null}, "packager": {"nullable": false, "class_name": "String", "default": null, "help": null}, "version": {"nullable": false, "class_name": "String", "default": null, "help": null}, "release": {"nullable": false, "class_name": "String", "default": null, "help": null}, "arch": {"nullable": false, "class_name": "String", "default": null, "help": null}, "pgpsig": {"nullable": false, "class_name": "String", "default": null, "help": null}, "repository": {"nullable": true, "class_name": "String", "default": null, "help": null}, "module": {"nullable": true, "class_name": "String", "default": null, "help": null}, "stream": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledRPM", "fields": {"items": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RPM"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledTargetKernelVersion", "fields": {"version": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "IpaInfo", "fields": {"has_client_package": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}, "is_client_configured": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}, "has_server_package": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}, "is_server_configured": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "EnvVar", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "value": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "OSRelease", "fields": {"release_id": {"nullable": false, "class_name": "String", "default": null, "help": null}, "name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "pretty_name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "version": {"nullable": false, "class_name": "String", "default": null, "help": null}, "version_id": {"nullable": false, "class_name": "String", "default": null, "help": null}, "variant": {"nullable": true, "class_name": "String", "default": null, "help": null}, "variant_id": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "Version", "fields": {"source": {"nullable": false, "class_name": "String", "default": null, "help": null}, "target": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "IPUConfig", "fields": {"leapp_env_vars": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "EnvVar"}, "maximum": null, "minimum": 0}, "os_release": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "OSRelease"}, "version": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Version"}, "architecture": {"nullable": false, "class_name": "String", "default": null, "help": null}, "kernel": {"nullable": false, "class_name": "String", "default": null, "help": null}, "flavour": {"nullable": false, "class_name": "StringEnum", "default": "default", "help": null, "choices": ["default", "saphana"]}}, "topic": "SystemInfoTopic"}, {"class_name": "KernelCmdlineArg", "fields": {"key": {"nullable": false, "class_name": "String", "default": null, "help": null}, "value": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "TargetKernelCmdlineArgTasks", "fields": {"to_add": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "KernelCmdlineArg"}, "maximum": null, "minimum": 0}, "to_remove": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "KernelCmdlineArg"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "KernelCmdline", "fields": {"parameters": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "KernelCmdlineArg"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "LeftoverPackages", "fields": {"items": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RPM"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "MemoryInfo", "fields": {"mem_total": {"nullable": true, "class_name": "Integer", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "Module", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "stream": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "EnabledModules", "fields": {"modules": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Module"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "OpenSshPermitRootLogin", "fields": {"value": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["yes", "prohibit-password", "forced-commands-only", "no"]}, "in_match": {"nullable": true, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "OpenSshConfig", "fields": {"permit_root_login": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "OpenSshPermitRootLogin"}, "maximum": null, "minimum": 0}, "use_privilege_separation": {"nullable": true, "class_name": "StringEnum", "default": null, "help": null, "choices": ["sandbox", "yes", "no"]}, "protocol": {"nullable": true, "class_name": "String", "default": null, "help": null}, "ciphers": {"nullable": true, "class_name": "String", "default": null, "help": null}, "macs": {"nullable": true, "class_name": "String", "default": null, "help": null}, "deprecated_directives": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "subsystem_sftp": {"nullable": true, "class_name": "String", "default": null, "help": null}, "modified": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "PkgManagerInfo", "fields": {"etc_releasever": {"nullable": true, "class_name": "String", "default": null, "help": null}, "configured_proxies": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "enabled_plugins": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "PCIDevice", "fields": {"slot": {"nullable": false, "class_name": "String", "default": null, "help": null}, "dev_cls": {"nullable": false, "class_name": "String", "default": null, "help": null}, "vendor": {"nullable": false, "class_name": "String", "default": null, "help": null}, "name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "subsystem_vendor": {"nullable": true, "class_name": "String", "default": null, "help": null}, "subsystem_name": {"nullable": true, "class_name": "String", "default": null, "help": null}, "physical_slot": {"nullable": true, "class_name": "String", "default": null, "help": null}, "rev": {"nullable": true, "class_name": "String", "default": null, "help": null}, "progif": {"nullable": true, "class_name": "String", "default": null, "help": null}, "driver": {"nullable": true, "class_name": "String", "default": null, "help": null}, "modules": {"nullable": true, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "numa_node": {"nullable": true, "class_name": "String", "default": null, "help": null}, "pci_id": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "PCIDevices", "fields": {"devices": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "PCIDevice"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "RestrictedPCIDevice", "fields": {"pci_id": {"nullable": true, "class_name": "String", "default": null, "help": null}, "driver_name": {"nullable": true, "class_name": "String", "default": null, "help": null}, "device_name": {"nullable": true, "class_name": "String", "default": null, "help": null}, "available_rhel7": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "supported_rhel7": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "available_rhel8": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "supported_rhel8": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "available_rhel9": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "supported_rhel9": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "comment": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "RestrictedPCIDevices", "fields": {"driver_names": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RestrictedPCIDevice"}, "maximum": null, "minimum": 0}, "pci_ids": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RestrictedPCIDevice"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "PCIAddress", "fields": {"domain": {"nullable": false, "class_name": "String", "default": null, "help": null}, "bus": {"nullable": false, "class_name": "String", "default": null, "help": null}, "function": {"nullable": false, "class_name": "String", "default": null, "help": null}, "device": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "Interface", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "devpath": {"nullable": false, "class_name": "String", "default": null, "help": null}, "driver": {"nullable": false, "class_name": "String", "default": null, "help": null}, "vendor": {"nullable": false, "class_name": "String", "default": null, "help": null}, "pci_info": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "PCIAddress"}, "mac": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "PersistentNetNamesFacts", "fields": {"interfaces": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Interface"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "RenamedInterface", "fields": {"rhel7_name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "rhel8_name": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "RenamedInterfaces", "fields": {"renamed": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RenamedInterface"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "RepositoriesBlacklisted", "fields": {"repoids": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoryData", "fields": {"repoid": {"nullable": false, "class_name": "String", "default": null, "help": null}, "name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "baseurl": {"nullable": true, "class_name": "String", "default": null, "help": null}, "metalink": {"nullable": true, "class_name": "String", "default": null, "help": null}, "mirrorlist": {"nullable": true, "class_name": "String", "default": null, "help": null}, "enabled": {"nullable": false, "class_name": "Boolean", "default": true, "help": null}, "additional_fields": {"nullable": true, "class_name": "String", "default": null, "help": null}, "proxy": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoryFile", "fields": {"file": {"nullable": false, "class_name": "String", "default": null, "help": null}, "data": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RepositoryData"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "RepositoriesFacts", "fields": {"repositories": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RepositoryFile"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "RepoMapEntry", "fields": {"source": {"nullable": false, "class_name": "String", "default": null, "help": null}, "target": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "PESIDRepositoryEntry", "fields": {"pesid": {"nullable": false, "class_name": "String", "default": null, "help": null}, "major_version": {"nullable": false, "class_name": "String", "default": null, "help": null}, "repoid": {"nullable": false, "class_name": "String", "default": null, "help": null}, "arch": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["x86_64", "s390x", "ppc64le", "aarch64"]}, "repo_type": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["rpm", "debug", "srpm"]}, "channel": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["ga", "tuv", "e4s", "eus", "aus", "beta"]}, "rhui": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["", "aws", "azure", "google"]}}, "topic": "TransactionTopic"}, {"class_name": "RepositoriesMapping", "fields": {"mapping": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RepoMapEntry"}, "maximum": null, "minimum": 0}, "repositories": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "PESIDRepositoryEntry"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "RepositoriesSetupTasks", "fields": {"to_enable": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "RHSMInfo", "fields": {"release": {"nullable": true, "class_name": "String", "default": null, "help": null}, "attached_skus": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "available_repos": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "enabled_repos": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "existing_product_certificates": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "sca_detected": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}}, "topic": "RHSMTopic"}, {"class_name": "RHUIInfo", "fields": {"provider": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "RootSubdirectory", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "target": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "InvalidRootSubdirectory", "fields": {"name": {"nullable": false, "class_name": "Blob", "default": null, "help": null}, "target": {"nullable": true, "class_name": "Blob", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "RootDirectory", "fields": {"items": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RootSubdirectory"}, "maximum": null, "minimum": 0}, "invalid_items": {"nullable": true, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "InvalidRootSubdirectory"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "RpmTransactionTasks", "fields": {"local_rpms": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_install": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_keep": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_remove": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_upgrade": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "modules_to_enable": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Module"}, "maximum": null, "minimum": 0}, "modules_to_reset": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Module"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "SapHanaManifestEntry", "fields": {"key": {"nullable": false, "class_name": "String", "default": null, "help": null}, "value": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "SapHanaInstanceInfo", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "path": {"nullable": false, "class_name": "String", "default": null, "help": null}, "instance_number": {"nullable": false, "class_name": "String", "default": null, "help": null}, "running": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}, "admin": {"nullable": false, "class_name": "String", "default": null, "help": null}, "manifest": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SapHanaManifestEntry"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SapHanaInfo", "fields": {"installed": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "running": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "instances": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SapHanaInstanceInfo"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxModule", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "priority": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "content": {"nullable": false, "class_name": "String", "default": null, "help": null}, "removed": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxModules", "fields": {"modules": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SELinuxModule"}, "maximum": null, "minimum": 0}, "templates": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SELinuxModule"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxCustom", "fields": {"commands": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "removed": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxRequestRPMs", "fields": {"to_keep": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_install": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "SelinuxRelabelDecision", "fields": {"set_relabel": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "SelinuxPermissiveDecision", "fields": {"set_permissive": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "SELinuxFacts", "fields": {"runtime_mode": {"nullable": true, "class_name": "StringEnum", "default": null, "help": null, "choices": ["enforcing", "permissive"]}, "static_mode": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["enforcing", "permissive", "disabled"]}, "enabled": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}, "policy": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["targeted", "minimum", "mls"]}, "mls_enabled": {"nullable": false, "class_name": "Boolean", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "SkippedRepositories", "fields": {"repos": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "packages": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "PartitionEntry", "fields": {"major": {"nullable": false, "class_name": "String", "default": null, "help": null}, "minor": {"nullable": false, "class_name": "String", "default": null, "help": null}, "blocks": {"nullable": false, "class_name": "String", "default": null, "help": null}, "name": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "FstabEntry", "fields": {"fs_spec": {"nullable": false, "class_name": "String", "default": null, "help": null}, "fs_file": {"nullable": false, "class_name": "String", "default": null, "help": null}, "fs_vfstype": {"nullable": false, "class_name": "String", "default": null, "help": null}, "fs_mntops": {"nullable": false, "class_name": "String", "default": null, "help": null}, "fs_freq": {"nullable": false, "class_name": "String", "default": null, "help": null}, "fs_passno": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "MountEntry", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "mount": {"nullable": false, "class_name": "String", "default": null, "help": null}, "tp": {"nullable": false, "class_name": "String", "default": null, "help": null}, "options": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "LsblkEntry", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "kname": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maj_min": {"nullable": false, "class_name": "String", "default": null, "help": null}, "rm": {"nullable": false, "class_name": "String", "default": null, "help": null}, "size": {"nullable": false, "class_name": "String", "default": null, "help": null}, "bsize": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "ro": {"nullable": false, "class_name": "String", "default": null, "help": null}, "tp": {"nullable": false, "class_name": "String", "default": null, "help": null}, "mountpoint": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "PvsEntry", "fields": {"pv": {"nullable": false, "class_name": "String", "default": null, "help": null}, "vg": {"nullable": false, "class_name": "String", "default": null, "help": null}, "fmt": {"nullable": false, "class_name": "String", "default": null, "help": null}, "attr": {"nullable": false, "class_name": "String", "default": null, "help": null}, "psize": {"nullable": false, "class_name": "String", "default": null, "help": null}, "pfree": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "VgsEntry", "fields": {"vg": {"nullable": false, "class_name": "String", "default": null, "help": null}, "pv": {"nullable": false, "class_name": "String", "default": null, "help": null}, "lv": {"nullable": false, "class_name": "String", "default": null, "help": null}, "sn": {"nullable": false, "class_name": "String", "default": null, "help": null}, "attr": {"nullable": false, "class_name": "String", "default": null, "help": null}, "vsize": {"nullable": false, "class_name": "String", "default": null, "help": null}, "vfree": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "LvdisplayEntry", "fields": {"lv": {"nullable": false, "class_name": "String", "default": null, "help": null}, "vg": {"nullable": false, "class_name": "String", "default": null, "help": null}, "attr": {"nullable": false, "class_name": "String", "default": null, "help": null}, "lsize": {"nullable": false, "class_name": "String", "default": null, "help": null}, "pool": {"nullable": false, "class_name": "String", "default": null, "help": null}, "origin": {"nullable": false, "class_name": "String", "default": null, "help": null}, "data": {"nullable": false, "class_name": "String", "default": null, "help": null}, "meta": {"nullable": false, "class_name": "String", "default": null, "help": null}, "move": {"nullable": false, "class_name": "String", "default": null, "help": null}, "log": {"nullable": false, "class_name": "String", "default": null, "help": null}, "cpy_sync": {"nullable": false, "class_name": "String", "default": null, "help": null}, "convert": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "SystemdMountEntry", "fields": {"node": {"nullable": false, "class_name": "String", "default": null, "help": null}, "path": {"nullable": false, "class_name": "String", "default": null, "help": null}, "model": {"nullable": false, "class_name": "String", "default": null, "help": null}, "wwn": {"nullable": false, "class_name": "String", "default": null, "help": null}, "fs_type": {"nullable": false, "class_name": "String", "default": null, "help": null}, "label": {"nullable": false, "class_name": "String", "default": null, "help": null}, "uuid": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "StorageInfo", "fields": {"partitions": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "PartitionEntry"}, "maximum": null, "minimum": 0}, "fstab": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "FstabEntry"}, "maximum": null, "minimum": 0}, "mount": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "MountEntry"}, "maximum": null, "minimum": 0}, "lsblk": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "LsblkEntry"}, "maximum": null, "minimum": 0}, "pvs": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "PvsEntry"}, "maximum": null, "minimum": 0}, "vgs": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "VgsEntry"}, "maximum": null, "minimum": 0}, "lvdisplay": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "LvdisplayEntry"}, "maximum": null, "minimum": 0}, "systemdmount": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SystemdMountEntry"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "SysctlVariable", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "value": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "SysctlVariablesFacts", "fields": {"sysctl_variables": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "SysctlVariable"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "SystemdServicesTasks", "fields": {"to_enable": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_disable": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "TargetRepositoryBase", "fields": {"repoid": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "TransactionTopic"}, {"class_name": "TargetRepositories", "fields": {"rhel_repos": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RHELTargetRepository"}, "maximum": null, "minimum": 0}, "custom_repos": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "CustomTargetRepository"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "UsedTargetRepositories", "fields": {"repos": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "UsedTargetRepository"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "CustomTargetRepositoryFile", "fields": {"file": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "TransactionTopic"}, {"class_name": "TargetUserSpaceInfo", "fields": {"path": {"nullable": false, "class_name": "String", "default": null, "help": null}, "scratch": {"nullable": false, "class_name": "String", "default": null, "help": null}, "mounts": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "TransactionTopic"}, {"class_name": "CopyFile", "fields": {"src": {"nullable": false, "class_name": "String", "default": null, "help": null}, "dst": {"nullable": true, "class_name": "String", "default": null, "help": null}}, "topic": "TransactionTopic"}, {"class_name": "TargetUserSpacePreupgradeTasks", "fields": {"copy_files": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "CopyFile"}, "maximum": null, "minimum": 0}, "install_rpms": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "RequiredTargetUserspacePackages", "fields": {"packages": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "TargetUserspaceTopic"}, {"class_name": "RequiredUpgradeInitramPackages", "fields": {"packages": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "BootPrepTopic"}, {"class_name": "TransactionCompleted", "fields": {}, "topic": "TransactionTopic"}, {"class_name": "TransactionDryRun", "fields": {}, "topic": "TransactionTopic"}, {"class_name": "UdevAdmInfoData", "fields": {"db": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemInfoTopic"}, {"class_name": "UsedRepository", "fields": {"repository": {"nullable": false, "class_name": "String", "default": null, "help": null}, "packages": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "UsedRepositories", "fields": {"repositories": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "UsedRepository"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "User", "fields": {"name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "uid": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "gid": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "home": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "SystemFactsTopic"}, {"class_name": "UsersFacts", "fields": {"users": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "User"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "XFSPresence", "fields": {"present": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "without_ftype": {"nullable": false, "class_name": "Boolean", "default": false, "help": null}, "mountpoints_without_ftype": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "DetectedDeviceOrDriver", "fields": {"deprecation_announced": {"nullable": false, "class_name": "String", "default": null, "help": null}, "device_id": {"nullable": false, "class_name": "String", "default": null, "help": null}, "device_type": {"nullable": false, "class_name": "StringEnum", "default": null, "help": null, "choices": ["pci", "cpu"]}, "device_name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "driver_name": {"nullable": false, "class_name": "String", "default": null, "help": null}, "available_in_rhel": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "maximum": null, "minimum": 0}, "maintained_in_rhel": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Integer", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "TargetInitramfsTasks", "fields": {"include_files": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "include_dracut_modules": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "DracutModule"}, "maximum": null, "minimum": 0}}, "topic": "BootPrepTopic"}, {"class_name": "InstalledRedHatSignedRPM", "fields": {"items": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RPM"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "InstalledUnsignedRPM", "fields": {"items": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RPM"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "RemovedPackages", "fields": {"items": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RPM"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "PersistentNetNamesFactsInitramfs", "fields": {"interfaces": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Interface"}, "maximum": null, "minimum": 0}}, "topic": "SystemInfoTopic"}, {"class_name": "TMPTargetRepositoriesFacts", "fields": {"repositories": {"nullable": false, "class_name": "List", "default": null, "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "RepositoryFile"}, "maximum": null, "minimum": 0}}, "topic": "SystemFactsTopic"}, {"class_name": "FilteredRpmTransactionTasks", "fields": {"local_rpms": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_install": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_keep": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_remove": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_upgrade": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "modules_to_enable": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Module"}, "maximum": null, "minimum": 0}, "modules_to_reset": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Module"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "PESRpmTransactionTasks", "fields": {"local_rpms": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_install": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_keep": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_remove": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "to_upgrade": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}, "modules_to_enable": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Module"}, "maximum": null, "minimum": 0}, "modules_to_reset": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "Module"}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}, {"class_name": "UsedTargetRepository", "fields": {"repoid": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "TransactionTopic"}, {"class_name": "RHELTargetRepository", "fields": {"repoid": {"nullable": false, "class_name": "String", "default": null, "help": null}}, "topic": "TransactionTopic"}, {"class_name": "CustomTargetRepository", "fields": {"repoid": {"nullable": false, "class_name": "String", "default": null, "help": null}, "name": {"nullable": true, "class_name": "String", "default": null, "help": null}, "baseurl": {"nullable": true, "class_name": "String", "default": null, "help": null}, "enabled": {"nullable": false, "class_name": "Boolean", "default": true, "help": null}}, "topic": "TransactionTopic"}, {"class_name": "TargetUserSpaceUpgradeTasks", "fields": {"copy_files": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "Model", "default": null, "help": null, "model": "CopyFile"}, "maximum": null, "minimum": 0}, "install_rpms": {"nullable": false, "class_name": "List", "default": [], "help": null, "element": {"nullable": false, "class_name": "String", "default": null, "help": null}, "maximum": null, "minimum": 0}}, "topic": "TransactionTopic"}], "tags": [{"class_name": "ApplicationsPhaseTag", "name": "applications", "actors": ["VsftpdConfigUpdate", "SanebackendsMigrate", "MigrateSendmail", "CupsfiltersMigrate", "QuaggaToFrr", "AuthselectApply", "VimMigrate", "SpamassassinConfigUpdate", "MigrateNtp", "NetworkManagerUpdateService", "SSSDHandleCacheFiles", "NetworkManagerUpdateConfig", "MigrateBrltty", "SCTPConfigUpdate", "CupsMigrate", "MultipathConfUpdate", "SatelliteUpgradeDataMigration", "FirewalldUpdateLockdownWhitelist", "PersistentNetNamesConfig", "SetEtcReleaseVer", "SELinuxApplyCustom"]}, {"class_name": "ChecksPhaseTag", "name": "checks", "actors": ["CheckPostfix", "CheckDosfstools", "CheckRemovedPamModules", "AuthselectCheck", "CheckChrony", "SCTPChecks", "SSSDCheck", "PythonInformUser", "RemoveOldPAMModulesCheck", "CheckWireshark", "OpenSshUsePrivilegeSeparationCheck", "CheckRemovedEnvVars", "CheckFirewalld", "OpenSshDeprecatedDirectivesCheck", "EnableDeviceCioFreeService", "OpenSshProtocolCheck", "CheckSendmail", "CheckIrssi", "CheckBtrfs", "CheckMemcached", "CheckBind", "MultipathConfCheck", "CupsCheck", "PostgresqlCheck", "CheckCIFS", "Checkhacluster", "SatelliteUpgradeCheck", "CheckFstabXFSOptions", "DetectGrubConfigError", "CheckBrltty", "VsftpdConfigCheck", "CheckAcpid", "CheckInstalledDebugKernels", "CheckInstalledDevelKernels", "CheckGrep", "CheckDocker", "ZiplCheckBootEntries", "SpamassassinConfigCheck", "PowerTop", "TcpWrappersCheck", "OpenSshAlgorithmsCheck", "CheckKdeGnome", "CheckNtp", "CheckMultiplePackageVersions", "QuaggaReport", "CheckSapHana", "OpenSshPermitRootLoginCheck", "RedHatSignedRpmCheck", "CheckNfs", "CheckSkippedRepositories", "CheckGrubCore", "Checktargetrepos", "InhibitWhenLuks", "DetectMissingNewlineInGrubCfg", "CheckMemory", "BaculaCheck", "CheckEtcReleasever", "CheckInstalledKernels", "CheckBootAvailSpace", "CheckIPAServer", "CheckMountOptions", "CheckOSRelease", "CephVolumeScan", "CheckHybridImage", "CheckFips", "UnsupportedUpgradeCheck", "CheckRedHatSubscriptionManagerSKU", "CheckSelinux", "CheckDetectedDevicesAndDrivers", "EfiCheckBoot", "CheckNonMountBootS390", "CheckSystemArch", "CheckSkipPhase", "CheckPersistentMounts", "CheckYumPluginsEnabled", "CheckRootSymlinks", "FilterRpmTransactionTasks"]}, {"class_name": "TargetTransactionChecksPhaseTag", "name": "target_checks", "actors": ["CheckSystemdServicesTasks", "LocalReposInhibit", "DnfTransactionCheck", "CheckInitramfsTasks", "TMPActorToSatisfySanityChecks", "ReportSetTargetRelease"]}, {"class_name": "DownloadPhaseTag", "name": "download", "actors": ["DnfPackageDownload"]}, {"class_name": "FactsPhaseTag", "name": "facts", "actors": ["SourceBootLoaderScanner", "PamModulesScanner", "TcpWrappersConfigRead", "SatelliteUpgradeFacts", "Grubdevname", "CupsScanner", "MultipathConfRead", "SpamassassinConfigRead", "VsftpdConfigRead", "RemoveOldPAMModulesScanner", "RegisterYumAdjustment", "CheckKdeApps", "SCTPConfigRead", "FirewalldFactsActor", "SSSDFacts", "NetworkManagerReadConfig", "QuaggaDaemons", "AuthselectScanner", "IpaScanner", "ScanSapHana", "ScanPkgManager", "PersistentNetNamesDisable", "RpmScanner", "SetupTargetRepos", "ScanCPU", "RepositoriesMappingScanner", "UdevAdmInfo", "DetectKernelDrivers", "ScanFilesForTargetUserspace", "OpenSshConfigScanner", "ScanCustomRepofile", "PCIDevicesScanner", "ScanSubscriptionManagerInfo", "GetInstalledDesktops", "CommonLeappDracutModules", "Biosdevname", "RepositoriesBlacklist", "StorageScanner", "ScanKernelCmdline", "XFSInfoScanner", "RootScanner", "CheckRHUI", "UsedRepositoriesScanner", "ScanCLIenablrepo", "SELinuxContentScanner", "GetEnabledModules", "RpmTransactionConfigTasksCollector", "PesEventsScanner", "RedHatSignedRpmScanner", "SystemFactsActor", "TransactionWorkarounds", "PersistentNetNames", "ScanMemory", "ScanDASD", "LoadDeviceDriverDeprecationData"]}, {"class_name": "TargetTransactionFactsPhaseTag", "name": "target_transaction_facts", "actors": ["TargetUserspaceCreator"]}, {"class_name": "FinalizationPhaseTag", "name": "finalization", "actors": ["SetPermissiveSelinux", "KernelCmdlineConfig", "GrubenvToFile", "ForceDefaultBootToTargetKernelVersion", "ScheduleSeLinuxRelabeling", "SetSystemdServicesState", "EfiFinalizationFix", "TargetInitramfsGenerator", "CreateSystemdResumeService"]}, {"class_name": "FirstBootPhaseTag", "name": "first_boot", "actors": ["NetworkManagerUpdateConnections", "SatelliteUpgrader", "EnableRHSMTargetRepos"]}, {"class_name": "InitRamStartPhaseTag", "name": "init_ram_start", "actors": ["RemoveUpgradeBootEntry"]}, {"class_name": "InterimPreparationPhaseTag", "name": "interim_preparation", "actors": ["AddUpgradeBootEntry", "EfiInterimFix", "UpgradeInitramfsGenerator", "DnfDryRun"]}, {"class_name": "IPUWorkflowTag", "name": "ipu", "actors": ["CheckPostfix", "CheckDosfstools", "VsftpdConfigUpdate", "SourceBootLoaderScanner", "CheckRemovedPamModules", "AuthselectCheck", "ZiplConvertToBLSCFG", "SanebackendsMigrate", "CheckChrony", "SCTPChecks", "MigrateSendmail", "CupsfiltersMigrate", "SSSDCheck", "PamModulesScanner", "PythonInformUser", "QuaggaToFrr", "RemoveOldPAMModulesCheck", "CheckWireshark", "TcpWrappersConfigRead", "AuthselectApply", "OpenSshUsePrivilegeSeparationCheck", "BindUpdate", "VimMigrate", "CheckRemovedEnvVars", "CheckFirewalld", "OpenSshDeprecatedDirectivesCheck", "SpamassassinConfigUpdate", "EnableDeviceCioFreeService", "OpenSshProtocolCheck", "MigrateNtp", "CheckSendmail", "NetworkManagerUpdateConnections", "CheckIrssi", "NetworkManagerUpdateService", "SSSDHandleCacheFiles", "CheckBtrfs", "SatelliteUpgradeFacts", "CheckMemcached", "CheckBind", "MultipathConfCheck", "CupsCheck", "PostgresqlCheck", "CheckCIFS", "Checkhacluster", "NetworkManagerUpdateConfig", "SatelliteUpgradeCheck", "CheckFstabXFSOptions", "DetectGrubConfigError", "RemoveOldPAMModulesApply", "ReportLeftoverPackages", "RemoveLeftoverPackages", "CheckBrltty", "VsftpdConfigCheck", "CheckAcpid", "Grubdevname", "CupsScanner", "CheckInstalledDebugKernels", "CheckInstalledDevelKernels", "MigrateBrltty", "SCTPConfigUpdate", "MultipathConfRead", "SpamassassinConfigRead", "VsftpdConfigRead", "CheckGrep", "CheckDocker", "CupsMigrate", "RemoveOldPAMModulesScanner", "ZiplCheckBootEntries", "MultipathConfUpdate", "SpamassassinConfigCheck", "RegisterYumAdjustment", "CheckKdeApps", "PowerTop", "SCTPConfigRead", "TcpWrappersCheck", "OpenSshAlgorithmsCheck", "CheckKdeGnome", "FirewalldFactsActor", "CheckNtp", "UpdateEtcSysconfigKernel", "SSSDFacts", "CheckMultiplePackageVersions", "SatelliteUpgradeDataMigration", "CheckLeftoverPackages", "NetworkManagerReadConfig", "QuaggaDaemons", "SatelliteUpgrader", "QuaggaReport", "AuthselectScanner", "FirewalldUpdateLockdownWhitelist", "IpaScanner", "CheckSapHana", "ScanSapHana", "ScanPkgManager", "PersistentNetNamesDisable", "RpmScanner", "SetPermissiveSelinux", "SetupTargetRepos", "ScanCPU", "OpenSshPermitRootLoginCheck", "RedHatSignedRpmCheck", "ApplyTransactionWorkarounds", "RepositoriesMappingScanner", "CheckNfs", "PersistentNetNamesConfig", "CheckSkippedRepositories", "VerifyDialogs", "UdevAdmInfo", "EnableRHSMTargetRepos", "RemoveUpgradeBootEntry", "CheckGrubCore", "Checktargetrepos", "InhibitWhenLuks", "DetectKernelDrivers", "SetEtcReleaseVer", "RemoveSystemdResumeService", "DetectMissingNewlineInGrubCfg", "DnfPackageDownload", "ScanFilesForTargetUserspace", "OpenSshConfigScanner", "CheckMemory", "ScanCustomRepofile", "BaculaCheck", "PCIDevicesScanner", "ScanSubscriptionManagerInfo", "GetInstalledDesktops", "CommonLeappDracutModules", "CheckEtcReleasever", "UpdateGrubCore", "Biosdevname", "RepositoriesBlacklist", "StorageScanner", "AddUpgradeBootEntry", "CheckInstalledKernels", "CheckBootAvailSpace", "CheckIPAServer", "ScanKernelCmdline", "XFSInfoScanner", "CheckMountOptions", "CheckOSRelease", "CephVolumeScan", "KernelCmdlineConfig", "RootScanner", "CheckRHUI", "GrubenvToFile", "CheckHybridImage", "UsedRepositoriesScanner", "CheckFips", "ScanCLIenablrepo", "UnsupportedUpgradeCheck", "VerifyCheckResults", "SELinuxPrepare", "SELinuxApplyCustom", "SELinuxContentScanner", "PreparePythonWorkround", "CheckRedHatSubscriptionManagerSKU", "ForceDefaultBootToTargetKernelVersion", "ScheduleSeLinuxRelabeling", "CheckSelinux", "ScanInstalledTargetKernelVersion", "GetEnabledModules", "DnfUpgradeTransaction", "PersistentNetNamesInitramfs", "CheckDetectedDevicesAndDrivers", "CheckSystemdServicesTasks", "SetSystemdServicesState", "EfiFinalizationFix", "EfiCheckBoot", "EfiInterimFix", "RpmTransactionConfigTasksCollector", "CheckNonMountBootS390", "PesEventsScanner", "RedHatSignedRpmScanner", "SystemFactsActor", "LocalReposInhibit", "IPUWorkflowConfig", "TransactionWorkarounds", "CheckSystemArch", "PersistentNetNames", "DnfTransactionCheck", "UpgradeInitramfsGenerator", "CheckInitramfsTasks", "TMPActorToSatisfySanityChecks", "TargetInitramfsGenerator", "RemoveBootFiles", "CheckSkipPhase", "CheckPersistentMounts", "CheckYumPluginsEnabled", "ReportSetTargetRelease", "CheckRootSymlinks", "ScanMemory", "ScanDASD", "TargetUserspaceCreator", "CreateSystemdResumeService", "LoadDeviceDriverDeprecationData", "DnfDryRun", "FilterRpmTransactionTasks"]}, {"class_name": "LateTestsPhaseTag", "name": "late_tests", "actors": ["PersistentNetNamesInitramfs"]}, {"class_name": "PreparationPhaseTag", "name": "preparation", "actors": ["ZiplConvertToBLSCFG", "BindUpdate", "RemoveOldPAMModulesApply", "UpdateEtcSysconfigKernel", "ApplyTransactionWorkarounds", "SELinuxPrepare", "RemoveBootFiles"]}, {"class_name": "ReportPhaseTag", "name": "report", "actors": ["VerifyDialogs", "VerifyCheckResults"]}, {"class_name": "RPMUpgradePhaseTag", "name": "rpm_upgrade", "actors": ["ReportLeftoverPackages", "RemoveLeftoverPackages", "CheckLeftoverPackages", "UpdateGrubCore", "PreparePythonWorkround", "ScanInstalledTargetKernelVersion", "DnfUpgradeTransaction"]}, {"class_name": "ThirdPartyApplicationsPhaseTag", "name": "third_party_applications", "actors": []}], "workflows": [{"name": "InplaceUpgrade", "short_name": "ipu", "tag": "IPUWorkflowTag", "description": "The IPU workflow takes care of an in-place upgrade (IPU) of RHEL 7 to RHEL 8.", "phases": [{"name": "FactsCollection", "class_name": "FactsCollectionPhase", "index": 3, "filter": {"phase": "FactsPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "Checks", "class_name": "ChecksPhase", "index": 4, "filter": {"phase": "ChecksPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "TargetTransactionFactsCollection", "class_name": "TargetTransactionFactsCollectionPhase", "index": 5, "filter": {"phase": "TargetTransactionFactsPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "TargetTransactionCheck", "class_name": "TargetTransactionChecksPhase", "index": 6, "filter": {"phase": "TargetTransactionChecksPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "Reports", "class_name": "ReportsPhase", "index": 7, "filter": {"phase": "ReportPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "Download", "class_name": "DownloadPhase", "index": 8, "filter": {"phase": "DownloadPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "InterimPreparation", "class_name": "InterimPreparationPhase", "index": 9, "filter": {"phase": "InterimPreparationPhaseTag", "tags": []}, "policies": {"error": "FailImmediately", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": true, "is_checkpoint": false}}, {"name": "InitRamStart", "class_name": "InitRamStartPhase", "index": 10, "filter": {"phase": "InitRamStartPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "LateTests", "class_name": "LateTestsPhase", "index": 11, "filter": {"phase": "LateTestsPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "Preparation", "class_name": "PreparationPhase", "index": 12, "filter": {"phase": "PreparationPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "RPMUpgrade", "class_name": "RPMUpgradePhase", "index": 13, "filter": {"phase": "RPMUpgradePhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": true}}, {"name": "Applications", "class_name": "ApplicationsPhase", "index": 14, "filter": {"phase": "ApplicationsPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "ThirdPartyApplications", "class_name": "ThirdPartyApplicationsPhase", "index": 15, "filter": {"phase": "ThirdPartyApplicationsPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "Finalization", "class_name": "FinalizationPhase", "index": 16, "filter": {"phase": "FinalizationPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": true, "request_restart_after_phase": false, "is_checkpoint": false}}, {"name": "FirstBoot", "class_name": "FirstBootPhase", "index": 17, "filter": {"phase": "FirstBootPhaseTag", "tags": []}, "policies": {"error": "FailPhase", "retry": "Phase"}, "flags": {"restart_after_phase": false, "request_restart_after_phase": false, "is_checkpoint": false}}]}], "tools": [], "files": [{"path": "files"}], "libraries": [{"path": "libraries"}]}]
